(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();class ni{constructor(e,t={}){if(!(e instanceof Node))throw"Can't initialize VanillaTilt because "+e+" is not a Node.";this.width=null,this.height=null,this.clientWidth=null,this.clientHeight=null,this.left=null,this.top=null,this.gammazero=null,this.betazero=null,this.lastgammazero=null,this.lastbetazero=null,this.transitionTimeout=null,this.updateCall=null,this.event=null,this.updateBind=this.update.bind(this),this.resetBind=this.reset.bind(this),this.element=e,this.settings=this.extendSettings(t),this.reverse=this.settings.reverse?-1:1,this.glare=ni.isSettingTrue(this.settings.glare),this.glarePrerender=ni.isSettingTrue(this.settings["glare-prerender"]),this.fullPageListening=ni.isSettingTrue(this.settings["full-page-listening"]),this.gyroscope=ni.isSettingTrue(this.settings.gyroscope),this.gyroscopeSamples=this.settings.gyroscopeSamples,this.elementListener=this.getElementListener(),this.glare&&this.prepareGlare(),this.fullPageListening&&this.updateClientSize(),this.addEventListeners(),this.reset(),this.updateInitialPosition()}static isSettingTrue(e){return e===""||e===!0||e===1}getElementListener(){if(this.fullPageListening)return window.document;if(typeof this.settings["mouse-event-element"]=="string"){const e=document.querySelector(this.settings["mouse-event-element"]);if(e)return e}return this.settings["mouse-event-element"]instanceof Node?this.settings["mouse-event-element"]:this.element}addEventListeners(){this.onMouseEnterBind=this.onMouseEnter.bind(this),this.onMouseMoveBind=this.onMouseMove.bind(this),this.onMouseLeaveBind=this.onMouseLeave.bind(this),this.onWindowResizeBind=this.onWindowResize.bind(this),this.onDeviceOrientationBind=this.onDeviceOrientation.bind(this),this.elementListener.addEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.addEventListener("mouseleave",this.onMouseLeaveBind),this.elementListener.addEventListener("mousemove",this.onMouseMoveBind),(this.glare||this.fullPageListening)&&window.addEventListener("resize",this.onWindowResizeBind),this.gyroscope&&window.addEventListener("deviceorientation",this.onDeviceOrientationBind)}removeEventListeners(){this.elementListener.removeEventListener("mouseenter",this.onMouseEnterBind),this.elementListener.removeEventListener("mouseleave",this.onMouseLeaveBind),this.elementListener.removeEventListener("mousemove",this.onMouseMoveBind),this.gyroscope&&window.removeEventListener("deviceorientation",this.onDeviceOrientationBind),(this.glare||this.fullPageListening)&&window.removeEventListener("resize",this.onWindowResizeBind)}destroy(){clearTimeout(this.transitionTimeout),this.updateCall!==null&&cancelAnimationFrame(this.updateCall),this.reset(),this.removeEventListeners(),this.element.vanillaTilt=null,delete this.element.vanillaTilt,this.element=null}onDeviceOrientation(e){if(e.gamma===null||e.beta===null)return;this.updateElementPosition(),this.gyroscopeSamples>0&&(this.lastgammazero=this.gammazero,this.lastbetazero=this.betazero,this.gammazero===null?(this.gammazero=e.gamma,this.betazero=e.beta):(this.gammazero=(e.gamma+this.lastgammazero)/2,this.betazero=(e.beta+this.lastbetazero)/2),this.gyroscopeSamples-=1);const t=this.settings.gyroscopeMaxAngleX-this.settings.gyroscopeMinAngleX,n=this.settings.gyroscopeMaxAngleY-this.settings.gyroscopeMinAngleY,i=t/this.width,r=n/this.height,a=e.gamma-(this.settings.gyroscopeMinAngleX+this.gammazero),l=e.beta-(this.settings.gyroscopeMinAngleY+this.betazero),u=a/i,h=l/r;this.updateCall!==null&&cancelAnimationFrame(this.updateCall),this.event={clientX:u+this.left,clientY:h+this.top},this.updateCall=requestAnimationFrame(this.updateBind)}onMouseEnter(){this.updateElementPosition(),this.element.style.willChange="transform",this.setTransition()}onMouseMove(e){this.updateCall!==null&&cancelAnimationFrame(this.updateCall),this.event=e,this.updateCall=requestAnimationFrame(this.updateBind)}onMouseLeave(){this.setTransition(),this.settings.reset&&requestAnimationFrame(this.resetBind)}reset(){this.event={clientX:this.left+this.width/2,clientY:this.top+this.height/2},this.element&&this.element.style&&(this.element.style.transform=`perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`),this.resetGlare()}resetGlare(){this.glare&&(this.glareElement.style.transform="rotate(180deg) translate(-50%, -50%)",this.glareElement.style.opacity="0")}updateInitialPosition(){if(this.settings.startX===0&&this.settings.startY===0)return;this.onMouseEnter(),this.fullPageListening?this.event={clientX:(this.settings.startX+this.settings.max)/(2*this.settings.max)*this.clientWidth,clientY:(this.settings.startY+this.settings.max)/(2*this.settings.max)*this.clientHeight}:this.event={clientX:this.left+(this.settings.startX+this.settings.max)/(2*this.settings.max)*this.width,clientY:this.top+(this.settings.startY+this.settings.max)/(2*this.settings.max)*this.height};let e=this.settings.scale;this.settings.scale=1,this.update(),this.settings.scale=e,this.resetGlare()}getValues(){let e,t;this.fullPageListening?(e=this.event.clientX/this.clientWidth,t=this.event.clientY/this.clientHeight):(e=(this.event.clientX-this.left)/this.width,t=(this.event.clientY-this.top)/this.height),e=Math.min(Math.max(e,0),1),t=Math.min(Math.max(t,0),1);let n=(this.reverse*(this.settings.max-e*this.settings.max*2)).toFixed(2),i=(this.reverse*(t*this.settings.max*2-this.settings.max)).toFixed(2),r=Math.atan2(this.event.clientX-(this.left+this.width/2),-(this.event.clientY-(this.top+this.height/2)))*(180/Math.PI);return{tiltX:n,tiltY:i,percentageX:e*100,percentageY:t*100,angle:r}}updateElementPosition(){let e=this.element.getBoundingClientRect();this.width=this.element.offsetWidth,this.height=this.element.offsetHeight,this.left=e.left,this.top=e.top}update(){let e=this.getValues();this.element.style.transform="perspective("+this.settings.perspective+"px) rotateX("+(this.settings.axis==="x"?0:e.tiltY)+"deg) rotateY("+(this.settings.axis==="y"?0:e.tiltX)+"deg) scale3d("+this.settings.scale+", "+this.settings.scale+", "+this.settings.scale+")",this.glare&&(this.glareElement.style.transform=`rotate(${e.angle}deg) translate(-50%, -50%)`,this.glareElement.style.opacity=`${e.percentageY*this.settings["max-glare"]/100}`),this.element.dispatchEvent(new CustomEvent("tiltChange",{detail:e})),this.updateCall=null}prepareGlare(){if(!this.glarePrerender){const e=document.createElement("div");e.classList.add("js-tilt-glare");const t=document.createElement("div");t.classList.add("js-tilt-glare-inner"),e.appendChild(t),this.element.appendChild(e)}this.glareElementWrapper=this.element.querySelector(".js-tilt-glare"),this.glareElement=this.element.querySelector(".js-tilt-glare-inner"),!this.glarePrerender&&(Object.assign(this.glareElementWrapper.style,{position:"absolute",top:"0",left:"0",width:"100%",height:"100%",overflow:"hidden","pointer-events":"none"}),Object.assign(this.glareElement.style,{position:"absolute",top:"50%",left:"50%","pointer-events":"none","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"}),this.updateGlareSize())}updateGlareSize(){if(this.glare){const e=(this.element.offsetWidth>this.element.offsetHeight?this.element.offsetWidth:this.element.offsetHeight)*2;Object.assign(this.glareElement.style,{width:`${e}px`,height:`${e}px`})}}updateClientSize(){this.clientWidth=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,this.clientHeight=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}onWindowResize(){this.updateGlareSize(),this.updateClientSize()}setTransition(){clearTimeout(this.transitionTimeout),this.element.style.transition=this.settings.speed+"ms "+this.settings.easing,this.glare&&(this.glareElement.style.transition=`opacity ${this.settings.speed}ms ${this.settings.easing}`),this.transitionTimeout=setTimeout(()=>{this.element.style.transition="",this.glare&&(this.glareElement.style.transition="")},this.settings.speed)}extendSettings(e){let t={reverse:!1,max:15,startX:0,startY:0,perspective:1e3,easing:"cubic-bezier(.03,.98,.52,.99)",scale:1,speed:300,transition:!0,axis:null,glare:!1,"max-glare":1,"glare-prerender":!1,"full-page-listening":!1,"mouse-event-element":null,reset:!0,gyroscope:!0,gyroscopeMinAngleX:-45,gyroscopeMaxAngleX:45,gyroscopeMinAngleY:-45,gyroscopeMaxAngleY:45,gyroscopeSamples:10},n={};for(var i in t)if(i in e)n[i]=e[i];else if(this.element.hasAttribute("data-tilt-"+i)){let r=this.element.getAttribute("data-tilt-"+i);try{n[i]=JSON.parse(r)}catch{n[i]=r}}else n[i]=t[i];return n}static init(e,t){e instanceof Node&&(e=[e]),e instanceof NodeList&&(e=[].slice.call(e)),e instanceof Array&&e.forEach(n=>{"vanillaTilt"in n||(n.vanillaTilt=new ni(n,t))})}}typeof document<"u"&&(window.VanillaTilt=ni,ni.init(document.querySelectorAll("[data-tilt]")));const jh=()=>{ni.init(document.querySelectorAll("img,h1,.about-wrapper__info-text"))};function Xh(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var io={exports:{}};/*!
 * jQuery JavaScript Library v3.6.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2022-08-26T17:52Z
 */var Yh=io.exports,Pl;function Jh(){return Pl||(Pl=1,(function(s){(function(e,t){s.exports=e.document?t(e,!0):function(n){if(!n.document)throw new Error("jQuery requires a window with a document");return t(n)}})(typeof window<"u"?window:Yh,function(e,t){var n=[],i=Object.getPrototypeOf,r=n.slice,a=n.flat?function(o){return n.flat.call(o)}:function(o){return n.concat.apply([],o)},l=n.push,u=n.indexOf,h={},p=h.toString,m=h.hasOwnProperty,x=m.toString,_=x.call(Object),M={},S=function(c){return typeof c=="function"&&typeof c.nodeType!="number"&&typeof c.item!="function"},C=function(c){return c!=null&&c===c.window},v=e.document,y={type:!0,src:!0,nonce:!0,noModule:!0};function O(o,c,d){d=d||v;var g,b,w=d.createElement("script");if(w.text=o,c)for(g in y)b=c[g]||c.getAttribute&&c.getAttribute(g),b&&w.setAttribute(g,b);d.head.appendChild(w).parentNode.removeChild(w)}function P(o){return o==null?o+"":typeof o=="object"||typeof o=="function"?h[p.call(o)]||"object":typeof o}var D="3.6.1",f=function(o,c){return new f.fn.init(o,c)};f.fn=f.prototype={jquery:D,constructor:f,length:0,toArray:function(){return r.call(this)},get:function(o){return o==null?r.call(this):o<0?this[o+this.length]:this[o]},pushStack:function(o){var c=f.merge(this.constructor(),o);return c.prevObject=this,c},each:function(o){return f.each(this,o)},map:function(o){return this.pushStack(f.map(this,function(c,d){return o.call(c,d,c)}))},slice:function(){return this.pushStack(r.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(f.grep(this,function(o,c){return(c+1)%2}))},odd:function(){return this.pushStack(f.grep(this,function(o,c){return c%2}))},eq:function(o){var c=this.length,d=+o+(o<0?c:0);return this.pushStack(d>=0&&d<c?[this[d]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:n.sort,splice:n.splice},f.extend=f.fn.extend=function(){var o,c,d,g,b,w,T=arguments[0]||{},B=1,I=arguments.length,G=!1;for(typeof T=="boolean"&&(G=T,T=arguments[B]||{},B++),typeof T!="object"&&!S(T)&&(T={}),B===I&&(T=this,B--);B<I;B++)if((o=arguments[B])!=null)for(c in o)g=o[c],!(c==="__proto__"||T===g)&&(G&&g&&(f.isPlainObject(g)||(b=Array.isArray(g)))?(d=T[c],b&&!Array.isArray(d)?w=[]:!b&&!f.isPlainObject(d)?w={}:w=d,b=!1,T[c]=f.extend(G,w,g)):g!==void 0&&(T[c]=g));return T},f.extend({expando:"jQuery"+(D+Math.random()).replace(/\D/g,""),isReady:!0,error:function(o){throw new Error(o)},noop:function(){},isPlainObject:function(o){var c,d;return!o||p.call(o)!=="[object Object]"?!1:(c=i(o),c?(d=m.call(c,"constructor")&&c.constructor,typeof d=="function"&&x.call(d)===_):!0)},isEmptyObject:function(o){var c;for(c in o)return!1;return!0},globalEval:function(o,c,d){O(o,{nonce:c&&c.nonce},d)},each:function(o,c){var d,g=0;if(W(o))for(d=o.length;g<d&&c.call(o[g],g,o[g])!==!1;g++);else for(g in o)if(c.call(o[g],g,o[g])===!1)break;return o},makeArray:function(o,c){var d=c||[];return o!=null&&(W(Object(o))?f.merge(d,typeof o=="string"?[o]:o):l.call(d,o)),d},inArray:function(o,c,d){return c==null?-1:u.call(c,o,d)},merge:function(o,c){for(var d=+c.length,g=0,b=o.length;g<d;g++)o[b++]=c[g];return o.length=b,o},grep:function(o,c,d){for(var g,b=[],w=0,T=o.length,B=!d;w<T;w++)g=!c(o[w],w),g!==B&&b.push(o[w]);return b},map:function(o,c,d){var g,b,w=0,T=[];if(W(o))for(g=o.length;w<g;w++)b=c(o[w],w,d),b!=null&&T.push(b);else for(w in o)b=c(o[w],w,d),b!=null&&T.push(b);return a(T)},guid:1,support:M}),typeof Symbol=="function"&&(f.fn[Symbol.iterator]=n[Symbol.iterator]),f.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(o,c){h["[object "+c+"]"]=c.toLowerCase()});function W(o){var c=!!o&&"length"in o&&o.length,d=P(o);return S(o)||C(o)?!1:d==="array"||c===0||typeof c=="number"&&c>0&&c-1 in o}var fe=(function(o){var c,d,g,b,w,T,B,I,G,Y,pe,q,ee,Ge,st,We,Vt,Ut,vn,Tt="sizzle"+1*new Date,it=o.document,fn=0,gt=0,Bt=bs(),Fr=bs(),vs=bs(),yn=bs(),Ci=function(E,F){return E===F&&(pe=!0),0},Li={}.hasOwnProperty,dn=[],oi=dn.pop,Cn=dn.push,ai=dn.push,Ml=dn.slice,Ri=function(E,F){for(var H=0,re=E.length;H<re;H++)if(E[H]===F)return H;return-1},No="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",yt="[\\x20\\t\\r\\n\\f]",Pi="(?:\\\\[\\da-fA-F]{1,6}"+yt+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",wl="\\["+yt+"*("+Pi+")(?:"+yt+"*([*^$|!~]?=)"+yt+`*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(`+Pi+"))|)"+yt+"*\\]",Fo=":("+Pi+`)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|`+wl+")*)|.*)\\)|)",Dh=new RegExp(yt+"+","g"),ys=new RegExp("^"+yt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+yt+"+$","g"),Ih=new RegExp("^"+yt+"*,"+yt+"*"),Sl=new RegExp("^"+yt+"*([>+~]|"+yt+")"+yt+"*"),Nh=new RegExp(yt+"|>"),Fh=new RegExp(Fo),Bh=new RegExp("^"+Pi+"$"),_s={ID:new RegExp("^#("+Pi+")"),CLASS:new RegExp("^\\.("+Pi+")"),TAG:new RegExp("^("+Pi+"|[*])"),ATTR:new RegExp("^"+wl),PSEUDO:new RegExp("^"+Fo),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+yt+"*(even|odd|(([+-]|)(\\d*)n|)"+yt+"*(?:([+-]|)"+yt+"*(\\d+)|))"+yt+"*\\)|)","i"),bool:new RegExp("^(?:"+No+")$","i"),needsContext:new RegExp("^"+yt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+yt+"*((?:-\\d)?\\d*)"+yt+"*\\)|)(?=[^-]|$)","i")},zh=/HTML$/i,Oh=/^(?:input|select|textarea|button)$/i,Hh=/^h\d$/i,Br=/^[^{]+\{\s*\[native \w/,Uh=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Bo=/[+~]/,Xn=new RegExp("\\\\[\\da-fA-F]{1,6}"+yt+"?|\\\\([^\\r\\n\\f])","g"),Yn=function(E,F){var H="0x"+E.slice(1)-65536;return F||(H<0?String.fromCharCode(H+65536):String.fromCharCode(H>>10|55296,H&1023|56320))},Tl=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,El=function(E,F){return F?E==="\0"?"�":E.slice(0,-1)+"\\"+E.charCodeAt(E.length-1).toString(16)+" ":"\\"+E},Al=function(){q()},kh=ws(function(E){return E.disabled===!0&&E.nodeName.toLowerCase()==="fieldset"},{dir:"parentNode",next:"legend"});try{ai.apply(dn=Ml.call(it.childNodes),it.childNodes),dn[it.childNodes.length].nodeType}catch{ai={apply:dn.length?function(F,H){Cn.apply(F,Ml.call(H))}:function(F,H){for(var re=F.length,V=0;F[re++]=H[V++];);F.length=re-1}}}function Et(E,F,H,re){var V,he,me,Me,Te,Ye,je,Ze=F&&F.ownerDocument,lt=F?F.nodeType:9;if(H=H||[],typeof E!="string"||!E||lt!==1&&lt!==9&&lt!==11)return H;if(!re&&(q(F),F=F||ee,st)){if(lt!==11&&(Te=Uh.exec(E)))if(V=Te[1]){if(lt===9)if(me=F.getElementById(V)){if(me.id===V)return H.push(me),H}else return H;else if(Ze&&(me=Ze.getElementById(V))&&vn(F,me)&&me.id===V)return H.push(me),H}else{if(Te[2])return ai.apply(H,F.getElementsByTagName(E)),H;if((V=Te[3])&&d.getElementsByClassName&&F.getElementsByClassName)return ai.apply(H,F.getElementsByClassName(V)),H}if(d.qsa&&!yn[E+" "]&&(!We||!We.test(E))&&(lt!==1||F.nodeName.toLowerCase()!=="object")){if(je=E,Ze=F,lt===1&&(Nh.test(E)||Sl.test(E))){for(Ze=Bo.test(E)&&Oo(F.parentNode)||F,(Ze!==F||!d.scope)&&((Me=F.getAttribute("id"))?Me=Me.replace(Tl,El):F.setAttribute("id",Me=Tt)),Ye=T(E),he=Ye.length;he--;)Ye[he]=(Me?"#"+Me:":scope")+" "+Ms(Ye[he]);je=Ye.join(",")}try{return ai.apply(H,Ze.querySelectorAll(je)),H}catch{yn(E,!0)}finally{Me===Tt&&F.removeAttribute("id")}}}return I(E.replace(ys,"$1"),F,H,re)}function bs(){var E=[];function F(H,re){return E.push(H+" ")>g.cacheLength&&delete F[E.shift()],F[H+" "]=re}return F}function Fn(E){return E[Tt]=!0,E}function Bn(E){var F=ee.createElement("fieldset");try{return!!E(F)}catch{return!1}finally{F.parentNode&&F.parentNode.removeChild(F),F=null}}function zo(E,F){for(var H=E.split("|"),re=H.length;re--;)g.attrHandle[H[re]]=F}function Cl(E,F){var H=F&&E,re=H&&E.nodeType===1&&F.nodeType===1&&E.sourceIndex-F.sourceIndex;if(re)return re;if(H){for(;H=H.nextSibling;)if(H===F)return-1}return E?1:-1}function Vh(E){return function(F){var H=F.nodeName.toLowerCase();return H==="input"&&F.type===E}}function Gh(E){return function(F){var H=F.nodeName.toLowerCase();return(H==="input"||H==="button")&&F.type===E}}function Ll(E){return function(F){return"form"in F?F.parentNode&&F.disabled===!1?"label"in F?"label"in F.parentNode?F.parentNode.disabled===E:F.disabled===E:F.isDisabled===E||F.isDisabled!==!E&&kh(F)===E:F.disabled===E:"label"in F?F.disabled===E:!1}}function Di(E){return Fn(function(F){return F=+F,Fn(function(H,re){for(var V,he=E([],H.length,F),me=he.length;me--;)H[V=he[me]]&&(H[V]=!(re[V]=H[V]))})})}function Oo(E){return E&&typeof E.getElementsByTagName<"u"&&E}d=Et.support={},w=Et.isXML=function(E){var F=E&&E.namespaceURI,H=E&&(E.ownerDocument||E).documentElement;return!zh.test(F||H&&H.nodeName||"HTML")},q=Et.setDocument=function(E){var F,H,re=E?E.ownerDocument||E:it;return re==ee||re.nodeType!==9||!re.documentElement||(ee=re,Ge=ee.documentElement,st=!w(ee),it!=ee&&(H=ee.defaultView)&&H.top!==H&&(H.addEventListener?H.addEventListener("unload",Al,!1):H.attachEvent&&H.attachEvent("onunload",Al)),d.scope=Bn(function(V){return Ge.appendChild(V).appendChild(ee.createElement("div")),typeof V.querySelectorAll<"u"&&!V.querySelectorAll(":scope fieldset div").length}),d.attributes=Bn(function(V){return V.className="i",!V.getAttribute("className")}),d.getElementsByTagName=Bn(function(V){return V.appendChild(ee.createComment("")),!V.getElementsByTagName("*").length}),d.getElementsByClassName=Br.test(ee.getElementsByClassName),d.getById=Bn(function(V){return Ge.appendChild(V).id=Tt,!ee.getElementsByName||!ee.getElementsByName(Tt).length}),d.getById?(g.filter.ID=function(V){var he=V.replace(Xn,Yn);return function(me){return me.getAttribute("id")===he}},g.find.ID=function(V,he){if(typeof he.getElementById<"u"&&st){var me=he.getElementById(V);return me?[me]:[]}}):(g.filter.ID=function(V){var he=V.replace(Xn,Yn);return function(me){var Me=typeof me.getAttributeNode<"u"&&me.getAttributeNode("id");return Me&&Me.value===he}},g.find.ID=function(V,he){if(typeof he.getElementById<"u"&&st){var me,Me,Te,Ye=he.getElementById(V);if(Ye){if(me=Ye.getAttributeNode("id"),me&&me.value===V)return[Ye];for(Te=he.getElementsByName(V),Me=0;Ye=Te[Me++];)if(me=Ye.getAttributeNode("id"),me&&me.value===V)return[Ye]}return[]}}),g.find.TAG=d.getElementsByTagName?function(V,he){if(typeof he.getElementsByTagName<"u")return he.getElementsByTagName(V);if(d.qsa)return he.querySelectorAll(V)}:function(V,he){var me,Me=[],Te=0,Ye=he.getElementsByTagName(V);if(V==="*"){for(;me=Ye[Te++];)me.nodeType===1&&Me.push(me);return Me}return Ye},g.find.CLASS=d.getElementsByClassName&&function(V,he){if(typeof he.getElementsByClassName<"u"&&st)return he.getElementsByClassName(V)},Vt=[],We=[],(d.qsa=Br.test(ee.querySelectorAll))&&(Bn(function(V){var he;Ge.appendChild(V).innerHTML="<a id='"+Tt+"'></a><select id='"+Tt+"-\r\\' msallowcapture=''><option selected=''></option></select>",V.querySelectorAll("[msallowcapture^='']").length&&We.push("[*^$]="+yt+`*(?:''|"")`),V.querySelectorAll("[selected]").length||We.push("\\["+yt+"*(?:value|"+No+")"),V.querySelectorAll("[id~="+Tt+"-]").length||We.push("~="),he=ee.createElement("input"),he.setAttribute("name",""),V.appendChild(he),V.querySelectorAll("[name='']").length||We.push("\\["+yt+"*name"+yt+"*="+yt+`*(?:''|"")`),V.querySelectorAll(":checked").length||We.push(":checked"),V.querySelectorAll("a#"+Tt+"+*").length||We.push(".#.+[+~]"),V.querySelectorAll("\\\f"),We.push("[\\r\\n\\f]")}),Bn(function(V){V.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var he=ee.createElement("input");he.setAttribute("type","hidden"),V.appendChild(he).setAttribute("name","D"),V.querySelectorAll("[name=d]").length&&We.push("name"+yt+"*[*^$|!~]?="),V.querySelectorAll(":enabled").length!==2&&We.push(":enabled",":disabled"),Ge.appendChild(V).disabled=!0,V.querySelectorAll(":disabled").length!==2&&We.push(":enabled",":disabled"),V.querySelectorAll("*,:x"),We.push(",.*:")})),(d.matchesSelector=Br.test(Ut=Ge.matches||Ge.webkitMatchesSelector||Ge.mozMatchesSelector||Ge.oMatchesSelector||Ge.msMatchesSelector))&&Bn(function(V){d.disconnectedMatch=Ut.call(V,"*"),Ut.call(V,"[s!='']:x"),Vt.push("!=",Fo)}),We=We.length&&new RegExp(We.join("|")),Vt=Vt.length&&new RegExp(Vt.join("|")),F=Br.test(Ge.compareDocumentPosition),vn=F||Br.test(Ge.contains)?function(V,he){var me=V.nodeType===9?V.documentElement:V,Me=he&&he.parentNode;return V===Me||!!(Me&&Me.nodeType===1&&(me.contains?me.contains(Me):V.compareDocumentPosition&&V.compareDocumentPosition(Me)&16))}:function(V,he){if(he){for(;he=he.parentNode;)if(he===V)return!0}return!1},Ci=F?function(V,he){if(V===he)return pe=!0,0;var me=!V.compareDocumentPosition-!he.compareDocumentPosition;return me||(me=(V.ownerDocument||V)==(he.ownerDocument||he)?V.compareDocumentPosition(he):1,me&1||!d.sortDetached&&he.compareDocumentPosition(V)===me?V==ee||V.ownerDocument==it&&vn(it,V)?-1:he==ee||he.ownerDocument==it&&vn(it,he)?1:Y?Ri(Y,V)-Ri(Y,he):0:me&4?-1:1)}:function(V,he){if(V===he)return pe=!0,0;var me,Me=0,Te=V.parentNode,Ye=he.parentNode,je=[V],Ze=[he];if(!Te||!Ye)return V==ee?-1:he==ee?1:Te?-1:Ye?1:Y?Ri(Y,V)-Ri(Y,he):0;if(Te===Ye)return Cl(V,he);for(me=V;me=me.parentNode;)je.unshift(me);for(me=he;me=me.parentNode;)Ze.unshift(me);for(;je[Me]===Ze[Me];)Me++;return Me?Cl(je[Me],Ze[Me]):je[Me]==it?-1:Ze[Me]==it?1:0}),ee},Et.matches=function(E,F){return Et(E,null,null,F)},Et.matchesSelector=function(E,F){if(q(E),d.matchesSelector&&st&&!yn[F+" "]&&(!Vt||!Vt.test(F))&&(!We||!We.test(F)))try{var H=Ut.call(E,F);if(H||d.disconnectedMatch||E.document&&E.document.nodeType!==11)return H}catch{yn(F,!0)}return Et(F,ee,null,[E]).length>0},Et.contains=function(E,F){return(E.ownerDocument||E)!=ee&&q(E),vn(E,F)},Et.attr=function(E,F){(E.ownerDocument||E)!=ee&&q(E);var H=g.attrHandle[F.toLowerCase()],re=H&&Li.call(g.attrHandle,F.toLowerCase())?H(E,F,!st):void 0;return re!==void 0?re:d.attributes||!st?E.getAttribute(F):(re=E.getAttributeNode(F))&&re.specified?re.value:null},Et.escape=function(E){return(E+"").replace(Tl,El)},Et.error=function(E){throw new Error("Syntax error, unrecognized expression: "+E)},Et.uniqueSort=function(E){var F,H=[],re=0,V=0;if(pe=!d.detectDuplicates,Y=!d.sortStable&&E.slice(0),E.sort(Ci),pe){for(;F=E[V++];)F===E[V]&&(re=H.push(V));for(;re--;)E.splice(H[re],1)}return Y=null,E},b=Et.getText=function(E){var F,H="",re=0,V=E.nodeType;if(V){if(V===1||V===9||V===11){if(typeof E.textContent=="string")return E.textContent;for(E=E.firstChild;E;E=E.nextSibling)H+=b(E)}else if(V===3||V===4)return E.nodeValue}else for(;F=E[re++];)H+=b(F);return H},g=Et.selectors={cacheLength:50,createPseudo:Fn,match:_s,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(E){return E[1]=E[1].replace(Xn,Yn),E[3]=(E[3]||E[4]||E[5]||"").replace(Xn,Yn),E[2]==="~="&&(E[3]=" "+E[3]+" "),E.slice(0,4)},CHILD:function(E){return E[1]=E[1].toLowerCase(),E[1].slice(0,3)==="nth"?(E[3]||Et.error(E[0]),E[4]=+(E[4]?E[5]+(E[6]||1):2*(E[3]==="even"||E[3]==="odd")),E[5]=+(E[7]+E[8]||E[3]==="odd")):E[3]&&Et.error(E[0]),E},PSEUDO:function(E){var F,H=!E[6]&&E[2];return _s.CHILD.test(E[0])?null:(E[3]?E[2]=E[4]||E[5]||"":H&&Fh.test(H)&&(F=T(H,!0))&&(F=H.indexOf(")",H.length-F)-H.length)&&(E[0]=E[0].slice(0,F),E[2]=H.slice(0,F)),E.slice(0,3))}},filter:{TAG:function(E){var F=E.replace(Xn,Yn).toLowerCase();return E==="*"?function(){return!0}:function(H){return H.nodeName&&H.nodeName.toLowerCase()===F}},CLASS:function(E){var F=Bt[E+" "];return F||(F=new RegExp("(^|"+yt+")"+E+"("+yt+"|$)"))&&Bt(E,function(H){return F.test(typeof H.className=="string"&&H.className||typeof H.getAttribute<"u"&&H.getAttribute("class")||"")})},ATTR:function(E,F,H){return function(re){var V=Et.attr(re,E);return V==null?F==="!=":F?(V+="",F==="="?V===H:F==="!="?V!==H:F==="^="?H&&V.indexOf(H)===0:F==="*="?H&&V.indexOf(H)>-1:F==="$="?H&&V.slice(-H.length)===H:F==="~="?(" "+V.replace(Dh," ")+" ").indexOf(H)>-1:F==="|="?V===H||V.slice(0,H.length+1)===H+"-":!1):!0}},CHILD:function(E,F,H,re,V){var he=E.slice(0,3)!=="nth",me=E.slice(-4)!=="last",Me=F==="of-type";return re===1&&V===0?function(Te){return!!Te.parentNode}:function(Te,Ye,je){var Ze,lt,At,Je,Gt,tn,_n=he!==me?"nextSibling":"previousSibling",Dt=Te.parentNode,zr=Me&&Te.nodeName.toLowerCase(),Or=!je&&!Me,bn=!1;if(Dt){if(he){for(;_n;){for(Je=Te;Je=Je[_n];)if(Me?Je.nodeName.toLowerCase()===zr:Je.nodeType===1)return!1;tn=_n=E==="only"&&!tn&&"nextSibling"}return!0}if(tn=[me?Dt.firstChild:Dt.lastChild],me&&Or){for(Je=Dt,At=Je[Tt]||(Je[Tt]={}),lt=At[Je.uniqueID]||(At[Je.uniqueID]={}),Ze=lt[E]||[],Gt=Ze[0]===fn&&Ze[1],bn=Gt&&Ze[2],Je=Gt&&Dt.childNodes[Gt];Je=++Gt&&Je&&Je[_n]||(bn=Gt=0)||tn.pop();)if(Je.nodeType===1&&++bn&&Je===Te){lt[E]=[fn,Gt,bn];break}}else if(Or&&(Je=Te,At=Je[Tt]||(Je[Tt]={}),lt=At[Je.uniqueID]||(At[Je.uniqueID]={}),Ze=lt[E]||[],Gt=Ze[0]===fn&&Ze[1],bn=Gt),bn===!1)for(;(Je=++Gt&&Je&&Je[_n]||(bn=Gt=0)||tn.pop())&&!((Me?Je.nodeName.toLowerCase()===zr:Je.nodeType===1)&&++bn&&(Or&&(At=Je[Tt]||(Je[Tt]={}),lt=At[Je.uniqueID]||(At[Je.uniqueID]={}),lt[E]=[fn,bn]),Je===Te)););return bn-=V,bn===re||bn%re===0&&bn/re>=0}}},PSEUDO:function(E,F){var H,re=g.pseudos[E]||g.setFilters[E.toLowerCase()]||Et.error("unsupported pseudo: "+E);return re[Tt]?re(F):re.length>1?(H=[E,E,"",F],g.setFilters.hasOwnProperty(E.toLowerCase())?Fn(function(V,he){for(var me,Me=re(V,F),Te=Me.length;Te--;)me=Ri(V,Me[Te]),V[me]=!(he[me]=Me[Te])}):function(V){return re(V,0,H)}):re}},pseudos:{not:Fn(function(E){var F=[],H=[],re=B(E.replace(ys,"$1"));return re[Tt]?Fn(function(V,he,me,Me){for(var Te,Ye=re(V,null,Me,[]),je=V.length;je--;)(Te=Ye[je])&&(V[je]=!(he[je]=Te))}):function(V,he,me){return F[0]=V,re(F,null,me,H),F[0]=null,!H.pop()}}),has:Fn(function(E){return function(F){return Et(E,F).length>0}}),contains:Fn(function(E){return E=E.replace(Xn,Yn),function(F){return(F.textContent||b(F)).indexOf(E)>-1}}),lang:Fn(function(E){return Bh.test(E||"")||Et.error("unsupported lang: "+E),E=E.replace(Xn,Yn).toLowerCase(),function(F){var H;do if(H=st?F.lang:F.getAttribute("xml:lang")||F.getAttribute("lang"))return H=H.toLowerCase(),H===E||H.indexOf(E+"-")===0;while((F=F.parentNode)&&F.nodeType===1);return!1}}),target:function(E){var F=o.location&&o.location.hash;return F&&F.slice(1)===E.id},root:function(E){return E===Ge},focus:function(E){return E===ee.activeElement&&(!ee.hasFocus||ee.hasFocus())&&!!(E.type||E.href||~E.tabIndex)},enabled:Ll(!1),disabled:Ll(!0),checked:function(E){var F=E.nodeName.toLowerCase();return F==="input"&&!!E.checked||F==="option"&&!!E.selected},selected:function(E){return E.parentNode&&E.parentNode.selectedIndex,E.selected===!0},empty:function(E){for(E=E.firstChild;E;E=E.nextSibling)if(E.nodeType<6)return!1;return!0},parent:function(E){return!g.pseudos.empty(E)},header:function(E){return Hh.test(E.nodeName)},input:function(E){return Oh.test(E.nodeName)},button:function(E){var F=E.nodeName.toLowerCase();return F==="input"&&E.type==="button"||F==="button"},text:function(E){var F;return E.nodeName.toLowerCase()==="input"&&E.type==="text"&&((F=E.getAttribute("type"))==null||F.toLowerCase()==="text")},first:Di(function(){return[0]}),last:Di(function(E,F){return[F-1]}),eq:Di(function(E,F,H){return[H<0?H+F:H]}),even:Di(function(E,F){for(var H=0;H<F;H+=2)E.push(H);return E}),odd:Di(function(E,F){for(var H=1;H<F;H+=2)E.push(H);return E}),lt:Di(function(E,F,H){for(var re=H<0?H+F:H>F?F:H;--re>=0;)E.push(re);return E}),gt:Di(function(E,F,H){for(var re=H<0?H+F:H;++re<F;)E.push(re);return E})}},g.pseudos.nth=g.pseudos.eq;for(c in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})g.pseudos[c]=Vh(c);for(c in{submit:!0,reset:!0})g.pseudos[c]=Gh(c);function Rl(){}Rl.prototype=g.filters=g.pseudos,g.setFilters=new Rl,T=Et.tokenize=function(E,F){var H,re,V,he,me,Me,Te,Ye=Fr[E+" "];if(Ye)return F?0:Ye.slice(0);for(me=E,Me=[],Te=g.preFilter;me;){(!H||(re=Ih.exec(me)))&&(re&&(me=me.slice(re[0].length)||me),Me.push(V=[])),H=!1,(re=Sl.exec(me))&&(H=re.shift(),V.push({value:H,type:re[0].replace(ys," ")}),me=me.slice(H.length));for(he in g.filter)(re=_s[he].exec(me))&&(!Te[he]||(re=Te[he](re)))&&(H=re.shift(),V.push({value:H,type:he,matches:re}),me=me.slice(H.length));if(!H)break}return F?me.length:me?Et.error(E):Fr(E,Me).slice(0)};function Ms(E){for(var F=0,H=E.length,re="";F<H;F++)re+=E[F].value;return re}function ws(E,F,H){var re=F.dir,V=F.next,he=V||re,me=H&&he==="parentNode",Me=gt++;return F.first?function(Te,Ye,je){for(;Te=Te[re];)if(Te.nodeType===1||me)return E(Te,Ye,je);return!1}:function(Te,Ye,je){var Ze,lt,At,Je=[fn,Me];if(je){for(;Te=Te[re];)if((Te.nodeType===1||me)&&E(Te,Ye,je))return!0}else for(;Te=Te[re];)if(Te.nodeType===1||me)if(At=Te[Tt]||(Te[Tt]={}),lt=At[Te.uniqueID]||(At[Te.uniqueID]={}),V&&V===Te.nodeName.toLowerCase())Te=Te[re]||Te;else{if((Ze=lt[he])&&Ze[0]===fn&&Ze[1]===Me)return Je[2]=Ze[2];if(lt[he]=Je,Je[2]=E(Te,Ye,je))return!0}return!1}}function Ho(E){return E.length>1?function(F,H,re){for(var V=E.length;V--;)if(!E[V](F,H,re))return!1;return!0}:E[0]}function Wh(E,F,H){for(var re=0,V=F.length;re<V;re++)Et(E,F[re],H);return H}function Ss(E,F,H,re,V){for(var he,me=[],Me=0,Te=E.length,Ye=F!=null;Me<Te;Me++)(he=E[Me])&&(!H||H(he,re,V))&&(me.push(he),Ye&&F.push(Me));return me}function Uo(E,F,H,re,V,he){return re&&!re[Tt]&&(re=Uo(re)),V&&!V[Tt]&&(V=Uo(V,he)),Fn(function(me,Me,Te,Ye){var je,Ze,lt,At=[],Je=[],Gt=Me.length,tn=me||Wh(F||"*",Te.nodeType?[Te]:Te,[]),_n=E&&(me||!F)?Ss(tn,At,E,Te,Ye):tn,Dt=H?V||(me?E:Gt||re)?[]:Me:_n;if(H&&H(_n,Dt,Te,Ye),re)for(je=Ss(Dt,Je),re(je,[],Te,Ye),Ze=je.length;Ze--;)(lt=je[Ze])&&(Dt[Je[Ze]]=!(_n[Je[Ze]]=lt));if(me){if(V||E){if(V){for(je=[],Ze=Dt.length;Ze--;)(lt=Dt[Ze])&&je.push(_n[Ze]=lt);V(null,Dt=[],je,Ye)}for(Ze=Dt.length;Ze--;)(lt=Dt[Ze])&&(je=V?Ri(me,lt):At[Ze])>-1&&(me[je]=!(Me[je]=lt))}}else Dt=Ss(Dt===Me?Dt.splice(Gt,Dt.length):Dt),V?V(null,Me,Dt,Ye):ai.apply(Me,Dt)})}function ko(E){for(var F,H,re,V=E.length,he=g.relative[E[0].type],me=he||g.relative[" "],Me=he?1:0,Te=ws(function(Ze){return Ze===F},me,!0),Ye=ws(function(Ze){return Ri(F,Ze)>-1},me,!0),je=[function(Ze,lt,At){var Je=!he&&(At||lt!==G)||((F=lt).nodeType?Te(Ze,lt,At):Ye(Ze,lt,At));return F=null,Je}];Me<V;Me++)if(H=g.relative[E[Me].type])je=[ws(Ho(je),H)];else{if(H=g.filter[E[Me].type].apply(null,E[Me].matches),H[Tt]){for(re=++Me;re<V&&!g.relative[E[re].type];re++);return Uo(Me>1&&Ho(je),Me>1&&Ms(E.slice(0,Me-1).concat({value:E[Me-2].type===" "?"*":""})).replace(ys,"$1"),H,Me<re&&ko(E.slice(Me,re)),re<V&&ko(E=E.slice(re)),re<V&&Ms(E))}je.push(H)}return Ho(je)}function qh(E,F){var H=F.length>0,re=E.length>0,V=function(he,me,Me,Te,Ye){var je,Ze,lt,At=0,Je="0",Gt=he&&[],tn=[],_n=G,Dt=he||re&&g.find.TAG("*",Ye),zr=fn+=_n==null?1:Math.random()||.1,Or=Dt.length;for(Ye&&(G=me==ee||me||Ye);Je!==Or&&(je=Dt[Je])!=null;Je++){if(re&&je){for(Ze=0,!me&&je.ownerDocument!=ee&&(q(je),Me=!st);lt=E[Ze++];)if(lt(je,me||ee,Me)){Te.push(je);break}Ye&&(fn=zr)}H&&((je=!lt&&je)&&At--,he&&Gt.push(je))}if(At+=Je,H&&Je!==At){for(Ze=0;lt=F[Ze++];)lt(Gt,tn,me,Me);if(he){if(At>0)for(;Je--;)Gt[Je]||tn[Je]||(tn[Je]=oi.call(Te));tn=Ss(tn)}ai.apply(Te,tn),Ye&&!he&&tn.length>0&&At+F.length>1&&Et.uniqueSort(Te)}return Ye&&(fn=zr,G=_n),Gt};return H?Fn(V):V}return B=Et.compile=function(E,F){var H,re=[],V=[],he=vs[E+" "];if(!he){for(F||(F=T(E)),H=F.length;H--;)he=ko(F[H]),he[Tt]?re.push(he):V.push(he);he=vs(E,qh(V,re)),he.selector=E}return he},I=Et.select=function(E,F,H,re){var V,he,me,Me,Te,Ye=typeof E=="function"&&E,je=!re&&T(E=Ye.selector||E);if(H=H||[],je.length===1){if(he=je[0]=je[0].slice(0),he.length>2&&(me=he[0]).type==="ID"&&F.nodeType===9&&st&&g.relative[he[1].type]){if(F=(g.find.ID(me.matches[0].replace(Xn,Yn),F)||[])[0],F)Ye&&(F=F.parentNode);else return H;E=E.slice(he.shift().value.length)}for(V=_s.needsContext.test(E)?0:he.length;V--&&(me=he[V],!g.relative[Me=me.type]);)if((Te=g.find[Me])&&(re=Te(me.matches[0].replace(Xn,Yn),Bo.test(he[0].type)&&Oo(F.parentNode)||F))){if(he.splice(V,1),E=re.length&&Ms(he),!E)return ai.apply(H,re),H;break}}return(Ye||B(E,je))(re,F,!st,H,!F||Bo.test(E)&&Oo(F.parentNode)||F),H},d.sortStable=Tt.split("").sort(Ci).join("")===Tt,d.detectDuplicates=!!pe,q(),d.sortDetached=Bn(function(E){return E.compareDocumentPosition(ee.createElement("fieldset"))&1}),Bn(function(E){return E.innerHTML="<a href='#'></a>",E.firstChild.getAttribute("href")==="#"})||zo("type|href|height|width",function(E,F,H){if(!H)return E.getAttribute(F,F.toLowerCase()==="type"?1:2)}),(!d.attributes||!Bn(function(E){return E.innerHTML="<input/>",E.firstChild.setAttribute("value",""),E.firstChild.getAttribute("value")===""}))&&zo("value",function(E,F,H){if(!H&&E.nodeName.toLowerCase()==="input")return E.defaultValue}),Bn(function(E){return E.getAttribute("disabled")==null})||zo(No,function(E,F,H){var re;if(!H)return E[F]===!0?F.toLowerCase():(re=E.getAttributeNode(F))&&re.specified?re.value:null}),Et})(e);f.find=fe,f.expr=fe.selectors,f.expr[":"]=f.expr.pseudos,f.uniqueSort=f.unique=fe.uniqueSort,f.text=fe.getText,f.isXMLDoc=fe.isXML,f.contains=fe.contains,f.escapeSelector=fe.escape;var Pe=function(o,c,d){for(var g=[],b=d!==void 0;(o=o[c])&&o.nodeType!==9;)if(o.nodeType===1){if(b&&f(o).is(d))break;g.push(o)}return g},ge=function(o,c){for(var d=[];o;o=o.nextSibling)o.nodeType===1&&o!==c&&d.push(o);return d},A=f.expr.match.needsContext;function k(o,c){return o.nodeName&&o.nodeName.toLowerCase()===c.toLowerCase()}var X=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function J(o,c,d){return S(c)?f.grep(o,function(g,b){return!!c.call(g,b,g)!==d}):c.nodeType?f.grep(o,function(g){return g===c!==d}):typeof c!="string"?f.grep(o,function(g){return u.call(c,g)>-1!==d}):f.filter(c,o,d)}f.filter=function(o,c,d){var g=c[0];return d&&(o=":not("+o+")"),c.length===1&&g.nodeType===1?f.find.matchesSelector(g,o)?[g]:[]:f.find.matches(o,f.grep(c,function(b){return b.nodeType===1}))},f.fn.extend({find:function(o){var c,d,g=this.length,b=this;if(typeof o!="string")return this.pushStack(f(o).filter(function(){for(c=0;c<g;c++)if(f.contains(b[c],this))return!0}));for(d=this.pushStack([]),c=0;c<g;c++)f.find(o,b[c],d);return g>1?f.uniqueSort(d):d},filter:function(o){return this.pushStack(J(this,o||[],!1))},not:function(o){return this.pushStack(J(this,o||[],!0))},is:function(o){return!!J(this,typeof o=="string"&&A.test(o)?f(o):o||[],!1).length}});var Z,K=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,oe=f.fn.init=function(o,c,d){var g,b;if(!o)return this;if(d=d||Z,typeof o=="string")if(o[0]==="<"&&o[o.length-1]===">"&&o.length>=3?g=[null,o,null]:g=K.exec(o),g&&(g[1]||!c))if(g[1]){if(c=c instanceof f?c[0]:c,f.merge(this,f.parseHTML(g[1],c&&c.nodeType?c.ownerDocument||c:v,!0)),X.test(g[1])&&f.isPlainObject(c))for(g in c)S(this[g])?this[g](c[g]):this.attr(g,c[g]);return this}else return b=v.getElementById(g[2]),b&&(this[0]=b,this.length=1),this;else return!c||c.jquery?(c||d).find(o):this.constructor(c).find(o);else{if(o.nodeType)return this[0]=o,this.length=1,this;if(S(o))return d.ready!==void 0?d.ready(o):o(f)}return f.makeArray(o,this)};oe.prototype=f.fn,Z=f(v);var xe=/^(?:parents|prev(?:Until|All))/,Ce={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({has:function(o){var c=f(o,this),d=c.length;return this.filter(function(){for(var g=0;g<d;g++)if(f.contains(this,c[g]))return!0})},closest:function(o,c){var d,g=0,b=this.length,w=[],T=typeof o!="string"&&f(o);if(!A.test(o)){for(;g<b;g++)for(d=this[g];d&&d!==c;d=d.parentNode)if(d.nodeType<11&&(T?T.index(d)>-1:d.nodeType===1&&f.find.matchesSelector(d,o))){w.push(d);break}}return this.pushStack(w.length>1?f.uniqueSort(w):w)},index:function(o){return o?typeof o=="string"?u.call(f(o),this[0]):u.call(this,o.jquery?o[0]:o):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(o,c){return this.pushStack(f.uniqueSort(f.merge(this.get(),f(o,c))))},addBack:function(o){return this.add(o==null?this.prevObject:this.prevObject.filter(o))}});function ae(o,c){for(;(o=o[c])&&o.nodeType!==1;);return o}f.each({parent:function(o){var c=o.parentNode;return c&&c.nodeType!==11?c:null},parents:function(o){return Pe(o,"parentNode")},parentsUntil:function(o,c,d){return Pe(o,"parentNode",d)},next:function(o){return ae(o,"nextSibling")},prev:function(o){return ae(o,"previousSibling")},nextAll:function(o){return Pe(o,"nextSibling")},prevAll:function(o){return Pe(o,"previousSibling")},nextUntil:function(o,c,d){return Pe(o,"nextSibling",d)},prevUntil:function(o,c,d){return Pe(o,"previousSibling",d)},siblings:function(o){return ge((o.parentNode||{}).firstChild,o)},children:function(o){return ge(o.firstChild)},contents:function(o){return o.contentDocument!=null&&i(o.contentDocument)?o.contentDocument:(k(o,"template")&&(o=o.content||o),f.merge([],o.childNodes))}},function(o,c){f.fn[o]=function(d,g){var b=f.map(this,c,d);return o.slice(-5)!=="Until"&&(g=d),g&&typeof g=="string"&&(b=f.filter(g,b)),this.length>1&&(Ce[o]||f.uniqueSort(b),xe.test(o)&&b.reverse()),this.pushStack(b)}});var ce=/[^\x20\t\r\n\f]+/g;function Le(o){var c={};return f.each(o.match(ce)||[],function(d,g){c[g]=!0}),c}f.Callbacks=function(o){o=typeof o=="string"?Le(o):f.extend({},o);var c,d,g,b,w=[],T=[],B=-1,I=function(){for(b=b||o.once,g=c=!0;T.length;B=-1)for(d=T.shift();++B<w.length;)w[B].apply(d[0],d[1])===!1&&o.stopOnFalse&&(B=w.length,d=!1);o.memory||(d=!1),c=!1,b&&(d?w=[]:w="")},G={add:function(){return w&&(d&&!c&&(B=w.length-1,T.push(d)),(function Y(pe){f.each(pe,function(q,ee){S(ee)?(!o.unique||!G.has(ee))&&w.push(ee):ee&&ee.length&&P(ee)!=="string"&&Y(ee)})})(arguments),d&&!c&&I()),this},remove:function(){return f.each(arguments,function(Y,pe){for(var q;(q=f.inArray(pe,w,q))>-1;)w.splice(q,1),q<=B&&B--}),this},has:function(Y){return Y?f.inArray(Y,w)>-1:w.length>0},empty:function(){return w&&(w=[]),this},disable:function(){return b=T=[],w=d="",this},disabled:function(){return!w},lock:function(){return b=T=[],!d&&!c&&(w=d=""),this},locked:function(){return!!b},fireWith:function(Y,pe){return b||(pe=pe||[],pe=[Y,pe.slice?pe.slice():pe],T.push(pe),c||I()),this},fire:function(){return G.fireWith(this,arguments),this},fired:function(){return!!g}};return G};function Ie(o){return o}function He(o){throw o}function ie(o,c,d,g){var b;try{o&&S(b=o.promise)?b.call(o).done(c).fail(d):o&&S(b=o.then)?b.call(o,c,d):c.apply(void 0,[o].slice(g))}catch(w){d.apply(void 0,[w])}}f.extend({Deferred:function(o){var c=[["notify","progress",f.Callbacks("memory"),f.Callbacks("memory"),2],["resolve","done",f.Callbacks("once memory"),f.Callbacks("once memory"),0,"resolved"],["reject","fail",f.Callbacks("once memory"),f.Callbacks("once memory"),1,"rejected"]],d="pending",g={state:function(){return d},always:function(){return b.done(arguments).fail(arguments),this},catch:function(w){return g.then(null,w)},pipe:function(){var w=arguments;return f.Deferred(function(T){f.each(c,function(B,I){var G=S(w[I[4]])&&w[I[4]];b[I[1]](function(){var Y=G&&G.apply(this,arguments);Y&&S(Y.promise)?Y.promise().progress(T.notify).done(T.resolve).fail(T.reject):T[I[0]+"With"](this,G?[Y]:arguments)})}),w=null}).promise()},then:function(w,T,B){var I=0;function G(Y,pe,q,ee){return function(){var Ge=this,st=arguments,We=function(){var Ut,vn;if(!(Y<I)){if(Ut=q.apply(Ge,st),Ut===pe.promise())throw new TypeError("Thenable self-resolution");vn=Ut&&(typeof Ut=="object"||typeof Ut=="function")&&Ut.then,S(vn)?ee?vn.call(Ut,G(I,pe,Ie,ee),G(I,pe,He,ee)):(I++,vn.call(Ut,G(I,pe,Ie,ee),G(I,pe,He,ee),G(I,pe,Ie,pe.notifyWith))):(q!==Ie&&(Ge=void 0,st=[Ut]),(ee||pe.resolveWith)(Ge,st))}},Vt=ee?We:function(){try{We()}catch(Ut){f.Deferred.exceptionHook&&f.Deferred.exceptionHook(Ut,Vt.stackTrace),Y+1>=I&&(q!==He&&(Ge=void 0,st=[Ut]),pe.rejectWith(Ge,st))}};Y?Vt():(f.Deferred.getStackHook&&(Vt.stackTrace=f.Deferred.getStackHook()),e.setTimeout(Vt))}}return f.Deferred(function(Y){c[0][3].add(G(0,Y,S(B)?B:Ie,Y.notifyWith)),c[1][3].add(G(0,Y,S(w)?w:Ie)),c[2][3].add(G(0,Y,S(T)?T:He))}).promise()},promise:function(w){return w!=null?f.extend(w,g):g}},b={};return f.each(c,function(w,T){var B=T[2],I=T[5];g[T[1]]=B.add,I&&B.add(function(){d=I},c[3-w][2].disable,c[3-w][3].disable,c[0][2].lock,c[0][3].lock),B.add(T[3].fire),b[T[0]]=function(){return b[T[0]+"With"](this===b?void 0:this,arguments),this},b[T[0]+"With"]=B.fireWith}),g.promise(b),o&&o.call(b,b),b},when:function(o){var c=arguments.length,d=c,g=Array(d),b=r.call(arguments),w=f.Deferred(),T=function(B){return function(I){g[B]=this,b[B]=arguments.length>1?r.call(arguments):I,--c||w.resolveWith(g,b)}};if(c<=1&&(ie(o,w.done(T(d)).resolve,w.reject,!c),w.state()==="pending"||S(b[d]&&b[d].then)))return w.then();for(;d--;)ie(b[d],T(d),w.reject);return w.promise()}});var mt=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;f.Deferred.exceptionHook=function(o,c){e.console&&e.console.warn&&o&&mt.test(o.name)&&e.console.warn("jQuery.Deferred exception: "+o.message,o.stack,c)},f.readyException=function(o){e.setTimeout(function(){throw o})};var ze=f.Deferred();f.fn.ready=function(o){return ze.then(o).catch(function(c){f.readyException(c)}),this},f.extend({isReady:!1,readyWait:1,ready:function(o){(o===!0?--f.readyWait:f.isReady)||(f.isReady=!0,!(o!==!0&&--f.readyWait>0)&&ze.resolveWith(v,[f]))}}),f.ready.then=ze.then;function Xe(){v.removeEventListener("DOMContentLoaded",Xe),e.removeEventListener("load",Xe),f.ready()}v.readyState==="complete"||v.readyState!=="loading"&&!v.documentElement.doScroll?e.setTimeout(f.ready):(v.addEventListener("DOMContentLoaded",Xe),e.addEventListener("load",Xe));var Se=function(o,c,d,g,b,w,T){var B=0,I=o.length,G=d==null;if(P(d)==="object"){b=!0;for(B in d)Se(o,c,B,d[B],!0,w,T)}else if(g!==void 0&&(b=!0,S(g)||(T=!0),G&&(T?(c.call(o,g),c=null):(G=c,c=function(Y,pe,q){return G.call(f(Y),q)})),c))for(;B<I;B++)c(o[B],d,T?g:g.call(o[B],B,c(o[B],d)));return b?o:G?c.call(o):I?c(o[0],d):w},at=/^-ms-/,Qe=/-([a-z])/g;function de(o,c){return c.toUpperCase()}function ye(o){return o.replace(at,"ms-").replace(Qe,de)}var _e=function(o){return o.nodeType===1||o.nodeType===9||!+o.nodeType};function Re(){this.expando=f.expando+Re.uid++}Re.uid=1,Re.prototype={cache:function(o){var c=o[this.expando];return c||(c={},_e(o)&&(o.nodeType?o[this.expando]=c:Object.defineProperty(o,this.expando,{value:c,configurable:!0}))),c},set:function(o,c,d){var g,b=this.cache(o);if(typeof c=="string")b[ye(c)]=d;else for(g in c)b[ye(g)]=c[g];return b},get:function(o,c){return c===void 0?this.cache(o):o[this.expando]&&o[this.expando][ye(c)]},access:function(o,c,d){return c===void 0||c&&typeof c=="string"&&d===void 0?this.get(o,c):(this.set(o,c,d),d!==void 0?d:c)},remove:function(o,c){var d,g=o[this.expando];if(g!==void 0){if(c!==void 0)for(Array.isArray(c)?c=c.map(ye):(c=ye(c),c=c in g?[c]:c.match(ce)||[]),d=c.length;d--;)delete g[c[d]];(c===void 0||f.isEmptyObject(g))&&(o.nodeType?o[this.expando]=void 0:delete o[this.expando])}},hasData:function(o){var c=o[this.expando];return c!==void 0&&!f.isEmptyObject(c)}};var se=new Re,Fe=new Re,et=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ht=/[A-Z]/g;function St(o){return o==="true"?!0:o==="false"?!1:o==="null"?null:o===+o+""?+o:et.test(o)?JSON.parse(o):o}function vt(o,c,d){var g;if(d===void 0&&o.nodeType===1)if(g="data-"+c.replace(ht,"-$&").toLowerCase(),d=o.getAttribute(g),typeof d=="string"){try{d=St(d)}catch{}Fe.set(o,c,d)}else d=void 0;return d}f.extend({hasData:function(o){return Fe.hasData(o)||se.hasData(o)},data:function(o,c,d){return Fe.access(o,c,d)},removeData:function(o,c){Fe.remove(o,c)},_data:function(o,c,d){return se.access(o,c,d)},_removeData:function(o,c){se.remove(o,c)}}),f.fn.extend({data:function(o,c){var d,g,b,w=this[0],T=w&&w.attributes;if(o===void 0){if(this.length&&(b=Fe.get(w),w.nodeType===1&&!se.get(w,"hasDataAttrs"))){for(d=T.length;d--;)T[d]&&(g=T[d].name,g.indexOf("data-")===0&&(g=ye(g.slice(5)),vt(w,g,b[g])));se.set(w,"hasDataAttrs",!0)}return b}return typeof o=="object"?this.each(function(){Fe.set(this,o)}):Se(this,function(B){var I;if(w&&B===void 0)return I=Fe.get(w,o),I!==void 0||(I=vt(w,o),I!==void 0)?I:void 0;this.each(function(){Fe.set(this,o,B)})},null,c,arguments.length>1,null,!0)},removeData:function(o){return this.each(function(){Fe.remove(this,o)})}}),f.extend({queue:function(o,c,d){var g;if(o)return c=(c||"fx")+"queue",g=se.get(o,c),d&&(!g||Array.isArray(d)?g=se.access(o,c,f.makeArray(d)):g.push(d)),g||[]},dequeue:function(o,c){c=c||"fx";var d=f.queue(o,c),g=d.length,b=d.shift(),w=f._queueHooks(o,c),T=function(){f.dequeue(o,c)};b==="inprogress"&&(b=d.shift(),g--),b&&(c==="fx"&&d.unshift("inprogress"),delete w.stop,b.call(o,T,w)),!g&&w&&w.empty.fire()},_queueHooks:function(o,c){var d=c+"queueHooks";return se.get(o,d)||se.access(o,d,{empty:f.Callbacks("once memory").add(function(){se.remove(o,[c+"queue",d])})})}}),f.fn.extend({queue:function(o,c){var d=2;return typeof o!="string"&&(c=o,o="fx",d--),arguments.length<d?f.queue(this[0],o):c===void 0?this:this.each(function(){var g=f.queue(this,o,c);f._queueHooks(this,o),o==="fx"&&g[0]!=="inprogress"&&f.dequeue(this,o)})},dequeue:function(o){return this.each(function(){f.dequeue(this,o)})},clearQueue:function(o){return this.queue(o||"fx",[])},promise:function(o,c){var d,g=1,b=f.Deferred(),w=this,T=this.length,B=function(){--g||b.resolveWith(w,[w])};for(typeof o!="string"&&(c=o,o=void 0),o=o||"fx";T--;)d=se.get(w[T],o+"queueHooks"),d&&d.empty&&(g++,d.empty.add(B));return B(),b.promise(c)}});var N=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,L=new RegExp("^(?:([+-])=|)("+N+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],be=v.documentElement,Ne=function(o){return f.contains(o.ownerDocument,o)},le={composed:!0};be.getRootNode&&(Ne=function(o){return f.contains(o.ownerDocument,o)||o.getRootNode(le)===o.ownerDocument});var Ve=function(o,c){return o=c||o,o.style.display==="none"||o.style.display===""&&Ne(o)&&f.css(o,"display")==="none"};function Ue(o,c,d,g){var b,w,T=20,B=g?function(){return g.cur()}:function(){return f.css(o,c,"")},I=B(),G=d&&d[3]||(f.cssNumber[c]?"":"px"),Y=o.nodeType&&(f.cssNumber[c]||G!=="px"&&+I)&&L.exec(f.css(o,c));if(Y&&Y[3]!==G){for(I=I/2,G=G||Y[3],Y=+I||1;T--;)f.style(o,c,Y+G),(1-w)*(1-(w=B()/I||.5))<=0&&(T=0),Y=Y/w;Y=Y*2,f.style(o,c,Y+G),d=d||[]}return d&&(Y=+Y||+I||0,b=d[1]?Y+(d[1]+1)*d[2]:+d[2],g&&(g.unit=G,g.start=Y,g.end=b)),b}var Ee={};function Ae(o){var c,d=o.ownerDocument,g=o.nodeName,b=Ee[g];return b||(c=d.body.appendChild(d.createElement(g)),b=f.css(c,"display"),c.parentNode.removeChild(c),b==="none"&&(b="block"),Ee[g]=b,b)}function $e(o,c){for(var d,g,b=[],w=0,T=o.length;w<T;w++)g=o[w],g.style&&(d=g.style.display,c?(d==="none"&&(b[w]=se.get(g,"display")||null,b[w]||(g.style.display="")),g.style.display===""&&Ve(g)&&(b[w]=Ae(g))):d!=="none"&&(b[w]="none",se.set(g,"display",d)));for(w=0;w<T;w++)b[w]!=null&&(o[w].style.display=b[w]);return o}f.fn.extend({show:function(){return $e(this,!0)},hide:function(){return $e(this)},toggle:function(o){return typeof o=="boolean"?o?this.show():this.hide():this.each(function(){Ve(this)?f(this).show():f(this).hide()})}});var U=/^(?:checkbox|radio)$/i,Be=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,De=/^$|^module$|\/(?:java|ecma)script/i;(function(){var o=v.createDocumentFragment(),c=o.appendChild(v.createElement("div")),d=v.createElement("input");d.setAttribute("type","radio"),d.setAttribute("checked","checked"),d.setAttribute("name","t"),c.appendChild(d),M.checkClone=c.cloneNode(!0).cloneNode(!0).lastChild.checked,c.innerHTML="<textarea>x</textarea>",M.noCloneChecked=!!c.cloneNode(!0).lastChild.defaultValue,c.innerHTML="<option></option>",M.option=!!c.lastChild})();var Oe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Oe.tbody=Oe.tfoot=Oe.colgroup=Oe.caption=Oe.thead,Oe.th=Oe.td,M.option||(Oe.optgroup=Oe.option=[1,"<select multiple='multiple'>","</select>"]);function te(o,c){var d;return typeof o.getElementsByTagName<"u"?d=o.getElementsByTagName(c||"*"):typeof o.querySelectorAll<"u"?d=o.querySelectorAll(c||"*"):d=[],c===void 0||c&&k(o,c)?f.merge([o],d):d}function qe(o,c){for(var d=0,g=o.length;d<g;d++)se.set(o[d],"globalEval",!c||se.get(c[d],"globalEval"))}var ct=/<|&#?\w+;/;function Lt(o,c,d,g,b){for(var w,T,B,I,G,Y,pe=c.createDocumentFragment(),q=[],ee=0,Ge=o.length;ee<Ge;ee++)if(w=o[ee],w||w===0)if(P(w)==="object")f.merge(q,w.nodeType?[w]:w);else if(!ct.test(w))q.push(c.createTextNode(w));else{for(T=T||pe.appendChild(c.createElement("div")),B=(Be.exec(w)||["",""])[1].toLowerCase(),I=Oe[B]||Oe._default,T.innerHTML=I[1]+f.htmlPrefilter(w)+I[2],Y=I[0];Y--;)T=T.lastChild;f.merge(q,T.childNodes),T=pe.firstChild,T.textContent=""}for(pe.textContent="",ee=0;w=q[ee++];){if(g&&f.inArray(w,g)>-1){b&&b.push(w);continue}if(G=Ne(w),T=te(pe.appendChild(w),"script"),G&&qe(T),d)for(Y=0;w=T[Y++];)De.test(w.type||"")&&d.push(w)}return pe}var en=/^([^.]*)(?:\.(.+)|)/;function _t(){return!0}function Zt(){return!1}function Dn(o,c){return o===Vi()==(c==="focus")}function Vi(){try{return v.activeElement}catch{}}function Pr(o,c,d,g,b,w){var T,B;if(typeof c=="object"){typeof d!="string"&&(g=g||d,d=void 0);for(B in c)Pr(o,B,d,g,c[B],w);return o}if(g==null&&b==null?(b=d,g=d=void 0):b==null&&(typeof d=="string"?(b=g,g=void 0):(b=g,g=d,d=void 0)),b===!1)b=Zt;else if(!b)return o;return w===1&&(T=b,b=function(I){return f().off(I),T.apply(this,arguments)},b.guid=T.guid||(T.guid=f.guid++)),o.each(function(){f.event.add(this,c,b,g,d)})}f.event={global:{},add:function(o,c,d,g,b){var w,T,B,I,G,Y,pe,q,ee,Ge,st,We=se.get(o);if(_e(o))for(d.handler&&(w=d,d=w.handler,b=w.selector),b&&f.find.matchesSelector(be,b),d.guid||(d.guid=f.guid++),(I=We.events)||(I=We.events=Object.create(null)),(T=We.handle)||(T=We.handle=function(Vt){return typeof f<"u"&&f.event.triggered!==Vt.type?f.event.dispatch.apply(o,arguments):void 0}),c=(c||"").match(ce)||[""],G=c.length;G--;)B=en.exec(c[G])||[],ee=st=B[1],Ge=(B[2]||"").split(".").sort(),ee&&(pe=f.event.special[ee]||{},ee=(b?pe.delegateType:pe.bindType)||ee,pe=f.event.special[ee]||{},Y=f.extend({type:ee,origType:st,data:g,handler:d,guid:d.guid,selector:b,needsContext:b&&f.expr.match.needsContext.test(b),namespace:Ge.join(".")},w),(q=I[ee])||(q=I[ee]=[],q.delegateCount=0,(!pe.setup||pe.setup.call(o,g,Ge,T)===!1)&&o.addEventListener&&o.addEventListener(ee,T)),pe.add&&(pe.add.call(o,Y),Y.handler.guid||(Y.handler.guid=d.guid)),b?q.splice(q.delegateCount++,0,Y):q.push(Y),f.event.global[ee]=!0)},remove:function(o,c,d,g,b){var w,T,B,I,G,Y,pe,q,ee,Ge,st,We=se.hasData(o)&&se.get(o);if(!(!We||!(I=We.events))){for(c=(c||"").match(ce)||[""],G=c.length;G--;){if(B=en.exec(c[G])||[],ee=st=B[1],Ge=(B[2]||"").split(".").sort(),!ee){for(ee in I)f.event.remove(o,ee+c[G],d,g,!0);continue}for(pe=f.event.special[ee]||{},ee=(g?pe.delegateType:pe.bindType)||ee,q=I[ee]||[],B=B[2]&&new RegExp("(^|\\.)"+Ge.join("\\.(?:.*\\.|)")+"(\\.|$)"),T=w=q.length;w--;)Y=q[w],(b||st===Y.origType)&&(!d||d.guid===Y.guid)&&(!B||B.test(Y.namespace))&&(!g||g===Y.selector||g==="**"&&Y.selector)&&(q.splice(w,1),Y.selector&&q.delegateCount--,pe.remove&&pe.remove.call(o,Y));T&&!q.length&&((!pe.teardown||pe.teardown.call(o,Ge,We.handle)===!1)&&f.removeEvent(o,ee,We.handle),delete I[ee])}f.isEmptyObject(I)&&se.remove(o,"handle events")}},dispatch:function(o){var c,d,g,b,w,T,B=new Array(arguments.length),I=f.event.fix(o),G=(se.get(this,"events")||Object.create(null))[I.type]||[],Y=f.event.special[I.type]||{};for(B[0]=I,c=1;c<arguments.length;c++)B[c]=arguments[c];if(I.delegateTarget=this,!(Y.preDispatch&&Y.preDispatch.call(this,I)===!1)){for(T=f.event.handlers.call(this,I,G),c=0;(b=T[c++])&&!I.isPropagationStopped();)for(I.currentTarget=b.elem,d=0;(w=b.handlers[d++])&&!I.isImmediatePropagationStopped();)(!I.rnamespace||w.namespace===!1||I.rnamespace.test(w.namespace))&&(I.handleObj=w,I.data=w.data,g=((f.event.special[w.origType]||{}).handle||w.handler).apply(b.elem,B),g!==void 0&&(I.result=g)===!1&&(I.preventDefault(),I.stopPropagation()));return Y.postDispatch&&Y.postDispatch.call(this,I),I.result}},handlers:function(o,c){var d,g,b,w,T,B=[],I=c.delegateCount,G=o.target;if(I&&G.nodeType&&!(o.type==="click"&&o.button>=1)){for(;G!==this;G=G.parentNode||this)if(G.nodeType===1&&!(o.type==="click"&&G.disabled===!0)){for(w=[],T={},d=0;d<I;d++)g=c[d],b=g.selector+" ",T[b]===void 0&&(T[b]=g.needsContext?f(b,this).index(G)>-1:f.find(b,this,null,[G]).length),T[b]&&w.push(g);w.length&&B.push({elem:G,handlers:w})}}return G=this,I<c.length&&B.push({elem:G,handlers:c.slice(I)}),B},addProp:function(o,c){Object.defineProperty(f.Event.prototype,o,{enumerable:!0,configurable:!0,get:S(c)?function(){if(this.originalEvent)return c(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[o]},set:function(d){Object.defineProperty(this,o,{enumerable:!0,configurable:!0,writable:!0,value:d})}})},fix:function(o){return o[f.expando]?o:new f.Event(o)},special:{load:{noBubble:!0},click:{setup:function(o){var c=this||o;return U.test(c.type)&&c.click&&k(c,"input")&&ii(c,"click",_t),!1},trigger:function(o){var c=this||o;return U.test(c.type)&&c.click&&k(c,"input")&&ii(c,"click"),!0},_default:function(o){var c=o.target;return U.test(c.type)&&c.click&&k(c,"input")&&se.get(c,"click")||k(c,"a")}},beforeunload:{postDispatch:function(o){o.result!==void 0&&o.originalEvent&&(o.originalEvent.returnValue=o.result)}}}};function ii(o,c,d){if(!d){se.get(o,c)===void 0&&f.event.add(o,c,_t);return}se.set(o,c,!1),f.event.add(o,c,{namespace:!1,handler:function(g){var b,w,T=se.get(this,c);if(g.isTrigger&1&&this[c]){if(T.length)(f.event.special[c]||{}).delegateType&&g.stopPropagation();else if(T=r.call(arguments),se.set(this,c,T),b=d(this,c),this[c](),w=se.get(this,c),T!==w||b?se.set(this,c,!1):w={},T!==w)return g.stopImmediatePropagation(),g.preventDefault(),w&&w.value}else T.length&&(se.set(this,c,{value:f.event.trigger(f.extend(T[0],f.Event.prototype),T.slice(1),this)}),g.stopImmediatePropagation())}})}f.removeEvent=function(o,c,d){o.removeEventListener&&o.removeEventListener(c,d)},f.Event=function(o,c){if(!(this instanceof f.Event))return new f.Event(o,c);o&&o.type?(this.originalEvent=o,this.type=o.type,this.isDefaultPrevented=o.defaultPrevented||o.defaultPrevented===void 0&&o.returnValue===!1?_t:Zt,this.target=o.target&&o.target.nodeType===3?o.target.parentNode:o.target,this.currentTarget=o.currentTarget,this.relatedTarget=o.relatedTarget):this.type=o,c&&f.extend(this,c),this.timeStamp=o&&o.timeStamp||Date.now(),this[f.expando]=!0},f.Event.prototype={constructor:f.Event,isDefaultPrevented:Zt,isPropagationStopped:Zt,isImmediatePropagationStopped:Zt,isSimulated:!1,preventDefault:function(){var o=this.originalEvent;this.isDefaultPrevented=_t,o&&!this.isSimulated&&o.preventDefault()},stopPropagation:function(){var o=this.originalEvent;this.isPropagationStopped=_t,o&&!this.isSimulated&&o.stopPropagation()},stopImmediatePropagation:function(){var o=this.originalEvent;this.isImmediatePropagationStopped=_t,o&&!this.isSimulated&&o.stopImmediatePropagation(),this.stopPropagation()}},f.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},f.event.addProp),f.each({focus:"focusin",blur:"focusout"},function(o,c){f.event.special[o]={setup:function(){return ii(this,o,Dn),!1},trigger:function(){return ii(this,o),!0},_default:function(d){return se.get(d.target,o)},delegateType:c}}),f.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(o,c){f.event.special[o]={delegateType:c,bindType:c,handle:function(d){var g,b=this,w=d.relatedTarget,T=d.handleObj;return(!w||w!==b&&!f.contains(b,w))&&(d.type=T.origType,g=T.handler.apply(this,arguments),d.type=c),g}}}),f.fn.extend({on:function(o,c,d,g){return Pr(this,o,c,d,g)},one:function(o,c,d,g){return Pr(this,o,c,d,g,1)},off:function(o,c,d){var g,b;if(o&&o.preventDefault&&o.handleObj)return g=o.handleObj,f(o.delegateTarget).off(g.namespace?g.origType+"."+g.namespace:g.origType,g.selector,g.handler),this;if(typeof o=="object"){for(b in o)this.off(b,c,o[b]);return this}return(c===!1||typeof c=="function")&&(d=c,c=void 0),d===!1&&(d=Zt),this.each(function(){f.event.remove(this,o,d,c)})}});var ps=/<script|<style|<link/i,So=/checked\s*(?:[^=]|=\s*.checked.)/i,To=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function ms(o,c){return k(o,"table")&&k(c.nodeType!==11?c:c.firstChild,"tr")&&f(o).children("tbody")[0]||o}function R(o){return o.type=(o.getAttribute("type")!==null)+"/"+o.type,o}function j(o){return(o.type||"").slice(0,5)==="true/"?o.type=o.type.slice(5):o.removeAttribute("type"),o}function Q(o,c){var d,g,b,w,T,B,I;if(c.nodeType===1){if(se.hasData(o)&&(w=se.get(o),I=w.events,I)){se.remove(c,"handle events");for(b in I)for(d=0,g=I[b].length;d<g;d++)f.event.add(c,b,I[b][d])}Fe.hasData(o)&&(T=Fe.access(o),B=f.extend({},T),Fe.set(c,B))}}function $(o,c){var d=c.nodeName.toLowerCase();d==="input"&&U.test(o.type)?c.checked=o.checked:(d==="input"||d==="textarea")&&(c.defaultValue=o.defaultValue)}function ue(o,c,d,g){c=a(c);var b,w,T,B,I,G,Y=0,pe=o.length,q=pe-1,ee=c[0],Ge=S(ee);if(Ge||pe>1&&typeof ee=="string"&&!M.checkClone&&So.test(ee))return o.each(function(st){var We=o.eq(st);Ge&&(c[0]=ee.call(this,st,We.html())),ue(We,c,d,g)});if(pe&&(b=Lt(c,o[0].ownerDocument,!1,o,g),w=b.firstChild,b.childNodes.length===1&&(b=w),w||g)){for(T=f.map(te(b,"script"),R),B=T.length;Y<pe;Y++)I=b,Y!==q&&(I=f.clone(I,!0,!0),B&&f.merge(T,te(I,"script"))),d.call(o[Y],I,Y);if(B)for(G=T[T.length-1].ownerDocument,f.map(T,j),Y=0;Y<B;Y++)I=T[Y],De.test(I.type||"")&&!se.access(I,"globalEval")&&f.contains(G,I)&&(I.src&&(I.type||"").toLowerCase()!=="module"?f._evalUrl&&!I.noModule&&f._evalUrl(I.src,{nonce:I.nonce||I.getAttribute("nonce")},G):O(I.textContent.replace(To,""),I,G))}return o}function tt(o,c,d){for(var g,b=c?f.filter(c,o):o,w=0;(g=b[w])!=null;w++)!d&&g.nodeType===1&&f.cleanData(te(g)),g.parentNode&&(d&&Ne(g)&&qe(te(g,"script")),g.parentNode.removeChild(g));return o}f.extend({htmlPrefilter:function(o){return o},clone:function(o,c,d){var g,b,w,T,B=o.cloneNode(!0),I=Ne(o);if(!M.noCloneChecked&&(o.nodeType===1||o.nodeType===11)&&!f.isXMLDoc(o))for(T=te(B),w=te(o),g=0,b=w.length;g<b;g++)$(w[g],T[g]);if(c)if(d)for(w=w||te(o),T=T||te(B),g=0,b=w.length;g<b;g++)Q(w[g],T[g]);else Q(o,B);return T=te(B,"script"),T.length>0&&qe(T,!I&&te(o,"script")),B},cleanData:function(o){for(var c,d,g,b=f.event.special,w=0;(d=o[w])!==void 0;w++)if(_e(d)){if(c=d[se.expando]){if(c.events)for(g in c.events)b[g]?f.event.remove(d,g):f.removeEvent(d,g,c.handle);d[se.expando]=void 0}d[Fe.expando]&&(d[Fe.expando]=void 0)}}}),f.fn.extend({detach:function(o){return tt(this,o,!0)},remove:function(o){return tt(this,o)},text:function(o){return Se(this,function(c){return c===void 0?f.text(this):this.empty().each(function(){(this.nodeType===1||this.nodeType===11||this.nodeType===9)&&(this.textContent=c)})},null,o,arguments.length)},append:function(){return ue(this,arguments,function(o){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var c=ms(this,o);c.appendChild(o)}})},prepend:function(){return ue(this,arguments,function(o){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var c=ms(this,o);c.insertBefore(o,c.firstChild)}})},before:function(){return ue(this,arguments,function(o){this.parentNode&&this.parentNode.insertBefore(o,this)})},after:function(){return ue(this,arguments,function(o){this.parentNode&&this.parentNode.insertBefore(o,this.nextSibling)})},empty:function(){for(var o,c=0;(o=this[c])!=null;c++)o.nodeType===1&&(f.cleanData(te(o,!1)),o.textContent="");return this},clone:function(o,c){return o=o??!1,c=c??o,this.map(function(){return f.clone(this,o,c)})},html:function(o){return Se(this,function(c){var d=this[0]||{},g=0,b=this.length;if(c===void 0&&d.nodeType===1)return d.innerHTML;if(typeof c=="string"&&!ps.test(c)&&!Oe[(Be.exec(c)||["",""])[1].toLowerCase()]){c=f.htmlPrefilter(c);try{for(;g<b;g++)d=this[g]||{},d.nodeType===1&&(f.cleanData(te(d,!1)),d.innerHTML=c);d=0}catch{}}d&&this.empty().append(c)},null,o,arguments.length)},replaceWith:function(){var o=[];return ue(this,arguments,function(c){var d=this.parentNode;f.inArray(this,o)<0&&(f.cleanData(te(this)),d&&d.replaceChild(c,this))},o)}}),f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(o,c){f.fn[o]=function(d){for(var g,b=[],w=f(d),T=w.length-1,B=0;B<=T;B++)g=B===T?this:this.clone(!0),f(w[B])[c](g),l.apply(b,g.get());return this.pushStack(b)}});var nt=new RegExp("^("+N+")(?!px)[a-z%]+$","i"),ot=/^--/,rt=function(o){var c=o.ownerDocument.defaultView;return(!c||!c.opener)&&(c=e),c.getComputedStyle(o)},xt=function(o,c,d){var g,b,w={};for(b in c)w[b]=o.style[b],o.style[b]=c[b];g=d.call(o);for(b in c)o.style[b]=w[b];return g},ft=new RegExp(ne.join("|"),"i"),dt="[\\x20\\t\\r\\n\\f]",Pt=new RegExp("^"+dt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+dt+"+$","g");(function(){function o(){if(G){I.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",G.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",be.appendChild(I).appendChild(G);var Y=e.getComputedStyle(G);d=Y.top!=="1%",B=c(Y.marginLeft)===12,G.style.right="60%",w=c(Y.right)===36,g=c(Y.width)===36,G.style.position="absolute",b=c(G.offsetWidth/3)===12,be.removeChild(I),G=null}}function c(Y){return Math.round(parseFloat(Y))}var d,g,b,w,T,B,I=v.createElement("div"),G=v.createElement("div");G.style&&(G.style.backgroundClip="content-box",G.cloneNode(!0).style.backgroundClip="",M.clearCloneStyle=G.style.backgroundClip==="content-box",f.extend(M,{boxSizingReliable:function(){return o(),g},pixelBoxStyles:function(){return o(),w},pixelPosition:function(){return o(),d},reliableMarginLeft:function(){return o(),B},scrollboxSize:function(){return o(),b},reliableTrDimensions:function(){var Y,pe,q,ee;return T==null&&(Y=v.createElement("table"),pe=v.createElement("tr"),q=v.createElement("div"),Y.style.cssText="position:absolute;left:-11111px;border-collapse:separate",pe.style.cssText="border:1px solid",pe.style.height="1px",q.style.height="9px",q.style.display="block",be.appendChild(Y).appendChild(pe).appendChild(q),ee=e.getComputedStyle(pe),T=parseInt(ee.height,10)+parseInt(ee.borderTopWidth,10)+parseInt(ee.borderBottomWidth,10)===pe.offsetHeight,be.removeChild(Y)),T}}))})();function gn(o,c,d){var g,b,w,T,B=ot.test(c),I=o.style;return d=d||rt(o),d&&(T=d.getPropertyValue(c)||d[c],B&&(T=T.replace(Pt,"$1")),T===""&&!Ne(o)&&(T=f.style(o,c)),!M.pixelBoxStyles()&&nt.test(T)&&ft.test(c)&&(g=I.width,b=I.minWidth,w=I.maxWidth,I.minWidth=I.maxWidth=I.width=T,T=d.width,I.width=g,I.minWidth=b,I.maxWidth=w)),T!==void 0?T+"":T}function jn(o,c){return{get:function(){if(o()){delete this.get;return}return(this.get=c).apply(this,arguments)}}}var pt=["Webkit","Moz","ms"],xn=v.createElement("div").style,Ot={};function En(o){for(var c=o[0].toUpperCase()+o.slice(1),d=pt.length;d--;)if(o=pt[d]+c,o in xn)return o}function ri(o){var c=f.cssProps[o]||Ot[o];return c||(o in xn?o:Ot[o]=En(o)||o)}var An=/^(none|table(?!-c[ea]).+)/,In={position:"absolute",visibility:"hidden",display:"block"},kt={letterSpacing:"0",fontWeight:"400"};function si(o,c,d){var g=L.exec(c);return g?Math.max(0,g[2]-(d||0))+(g[3]||"px"):c}function an(o,c,d,g,b,w){var T=c==="width"?1:0,B=0,I=0;if(d===(g?"border":"content"))return 0;for(;T<4;T+=2)d==="margin"&&(I+=f.css(o,d+ne[T],!0,b)),g?(d==="content"&&(I-=f.css(o,"padding"+ne[T],!0,b)),d!=="margin"&&(I-=f.css(o,"border"+ne[T]+"Width",!0,b))):(I+=f.css(o,"padding"+ne[T],!0,b),d!=="padding"?I+=f.css(o,"border"+ne[T]+"Width",!0,b):B+=f.css(o,"border"+ne[T]+"Width",!0,b));return!g&&w>=0&&(I+=Math.max(0,Math.ceil(o["offset"+c[0].toUpperCase()+c.slice(1)]-w-I-B-.5))||0),I}function cl(o,c,d){var g=rt(o),b=!M.boxSizingReliable()||d,w=b&&f.css(o,"boxSizing",!1,g)==="border-box",T=w,B=gn(o,c,g),I="offset"+c[0].toUpperCase()+c.slice(1);if(nt.test(B)){if(!d)return B;B="auto"}return(!M.boxSizingReliable()&&w||!M.reliableTrDimensions()&&k(o,"tr")||B==="auto"||!parseFloat(B)&&f.css(o,"display",!1,g)==="inline")&&o.getClientRects().length&&(w=f.css(o,"boxSizing",!1,g)==="border-box",T=I in o,T&&(B=o[I])),B=parseFloat(B)||0,B+an(o,c,d||(w?"border":"content"),T,g,B)+"px"}f.extend({cssHooks:{opacity:{get:function(o,c){if(c){var d=gn(o,"opacity");return d===""?"1":d}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(o,c,d,g){if(!(!o||o.nodeType===3||o.nodeType===8||!o.style)){var b,w,T,B=ye(c),I=ot.test(c),G=o.style;if(I||(c=ri(B)),T=f.cssHooks[c]||f.cssHooks[B],d!==void 0){if(w=typeof d,w==="string"&&(b=L.exec(d))&&b[1]&&(d=Ue(o,c,b),w="number"),d==null||d!==d)return;w==="number"&&!I&&(d+=b&&b[3]||(f.cssNumber[B]?"":"px")),!M.clearCloneStyle&&d===""&&c.indexOf("background")===0&&(G[c]="inherit"),(!T||!("set"in T)||(d=T.set(o,d,g))!==void 0)&&(I?G.setProperty(c,d):G[c]=d)}else return T&&"get"in T&&(b=T.get(o,!1,g))!==void 0?b:G[c]}},css:function(o,c,d,g){var b,w,T,B=ye(c),I=ot.test(c);return I||(c=ri(B)),T=f.cssHooks[c]||f.cssHooks[B],T&&"get"in T&&(b=T.get(o,!0,d)),b===void 0&&(b=gn(o,c,g)),b==="normal"&&c in kt&&(b=kt[c]),d===""||d?(w=parseFloat(b),d===!0||isFinite(w)?w||0:b):b}}),f.each(["height","width"],function(o,c){f.cssHooks[c]={get:function(d,g,b){if(g)return An.test(f.css(d,"display"))&&(!d.getClientRects().length||!d.getBoundingClientRect().width)?xt(d,In,function(){return cl(d,c,b)}):cl(d,c,b)},set:function(d,g,b){var w,T=rt(d),B=!M.scrollboxSize()&&T.position==="absolute",I=B||b,G=I&&f.css(d,"boxSizing",!1,T)==="border-box",Y=b?an(d,c,b,G,T):0;return G&&B&&(Y-=Math.ceil(d["offset"+c[0].toUpperCase()+c.slice(1)]-parseFloat(T[c])-an(d,c,"border",!1,T)-.5)),Y&&(w=L.exec(g))&&(w[3]||"px")!=="px"&&(d.style[c]=g,g=f.css(d,c)),si(d,g,Y)}}}),f.cssHooks.marginLeft=jn(M.reliableMarginLeft,function(o,c){if(c)return(parseFloat(gn(o,"marginLeft"))||o.getBoundingClientRect().left-xt(o,{marginLeft:0},function(){return o.getBoundingClientRect().left}))+"px"}),f.each({margin:"",padding:"",border:"Width"},function(o,c){f.cssHooks[o+c]={expand:function(d){for(var g=0,b={},w=typeof d=="string"?d.split(" "):[d];g<4;g++)b[o+ne[g]+c]=w[g]||w[g-2]||w[0];return b}},o!=="margin"&&(f.cssHooks[o+c].set=si)}),f.fn.extend({css:function(o,c){return Se(this,function(d,g,b){var w,T,B={},I=0;if(Array.isArray(g)){for(w=rt(d),T=g.length;I<T;I++)B[g[I]]=f.css(d,g[I],!1,w);return B}return b!==void 0?f.style(d,g,b):f.css(d,g)},o,c,arguments.length>1)}});function hn(o,c,d,g,b){return new hn.prototype.init(o,c,d,g,b)}f.Tween=hn,hn.prototype={constructor:hn,init:function(o,c,d,g,b,w){this.elem=o,this.prop=d,this.easing=b||f.easing._default,this.options=c,this.start=this.now=this.cur(),this.end=g,this.unit=w||(f.cssNumber[d]?"":"px")},cur:function(){var o=hn.propHooks[this.prop];return o&&o.get?o.get(this):hn.propHooks._default.get(this)},run:function(o){var c,d=hn.propHooks[this.prop];return this.options.duration?this.pos=c=f.easing[this.easing](o,this.options.duration*o,0,1,this.options.duration):this.pos=c=o,this.now=(this.end-this.start)*c+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),d&&d.set?d.set(this):hn.propHooks._default.set(this),this}},hn.prototype.init.prototype=hn.prototype,hn.propHooks={_default:{get:function(o){var c;return o.elem.nodeType!==1||o.elem[o.prop]!=null&&o.elem.style[o.prop]==null?o.elem[o.prop]:(c=f.css(o.elem,o.prop,""),!c||c==="auto"?0:c)},set:function(o){f.fx.step[o.prop]?f.fx.step[o.prop](o):o.elem.nodeType===1&&(f.cssHooks[o.prop]||o.elem.style[ri(o.prop)]!=null)?f.style(o.elem,o.prop,o.now+o.unit):o.elem[o.prop]=o.now}}},hn.propHooks.scrollTop=hn.propHooks.scrollLeft={set:function(o){o.elem.nodeType&&o.elem.parentNode&&(o.elem[o.prop]=o.now)}},f.easing={linear:function(o){return o},swing:function(o){return .5-Math.cos(o*Math.PI)/2},_default:"swing"},f.fx=hn.prototype.init,f.fx.step={};var Gi,gs,ch=/^(?:toggle|show|hide)$/,uh=/queueHooks$/;function Eo(){gs&&(v.hidden===!1&&e.requestAnimationFrame?e.requestAnimationFrame(Eo):e.setTimeout(Eo,f.fx.interval),f.fx.tick())}function ul(){return e.setTimeout(function(){Gi=void 0}),Gi=Date.now()}function xs(o,c){var d,g=0,b={height:o};for(c=c?1:0;g<4;g+=2-c)d=ne[g],b["margin"+d]=b["padding"+d]=o;return c&&(b.opacity=b.width=o),b}function hl(o,c,d){for(var g,b=(Nn.tweeners[c]||[]).concat(Nn.tweeners["*"]),w=0,T=b.length;w<T;w++)if(g=b[w].call(d,c,o))return g}function hh(o,c,d){var g,b,w,T,B,I,G,Y,pe="width"in c||"height"in c,q=this,ee={},Ge=o.style,st=o.nodeType&&Ve(o),We=se.get(o,"fxshow");d.queue||(T=f._queueHooks(o,"fx"),T.unqueued==null&&(T.unqueued=0,B=T.empty.fire,T.empty.fire=function(){T.unqueued||B()}),T.unqueued++,q.always(function(){q.always(function(){T.unqueued--,f.queue(o,"fx").length||T.empty.fire()})}));for(g in c)if(b=c[g],ch.test(b)){if(delete c[g],w=w||b==="toggle",b===(st?"hide":"show"))if(b==="show"&&We&&We[g]!==void 0)st=!0;else continue;ee[g]=We&&We[g]||f.style(o,g)}if(I=!f.isEmptyObject(c),!(!I&&f.isEmptyObject(ee))){pe&&o.nodeType===1&&(d.overflow=[Ge.overflow,Ge.overflowX,Ge.overflowY],G=We&&We.display,G==null&&(G=se.get(o,"display")),Y=f.css(o,"display"),Y==="none"&&(G?Y=G:($e([o],!0),G=o.style.display||G,Y=f.css(o,"display"),$e([o]))),(Y==="inline"||Y==="inline-block"&&G!=null)&&f.css(o,"float")==="none"&&(I||(q.done(function(){Ge.display=G}),G==null&&(Y=Ge.display,G=Y==="none"?"":Y)),Ge.display="inline-block")),d.overflow&&(Ge.overflow="hidden",q.always(function(){Ge.overflow=d.overflow[0],Ge.overflowX=d.overflow[1],Ge.overflowY=d.overflow[2]})),I=!1;for(g in ee)I||(We?"hidden"in We&&(st=We.hidden):We=se.access(o,"fxshow",{display:G}),w&&(We.hidden=!st),st&&$e([o],!0),q.done(function(){st||$e([o]),se.remove(o,"fxshow");for(g in ee)f.style(o,g,ee[g])})),I=hl(st?We[g]:0,g,q),g in We||(We[g]=I.start,st&&(I.end=I.start,I.start=0))}}function fh(o,c){var d,g,b,w,T;for(d in o)if(g=ye(d),b=c[g],w=o[d],Array.isArray(w)&&(b=w[1],w=o[d]=w[0]),d!==g&&(o[g]=w,delete o[d]),T=f.cssHooks[g],T&&"expand"in T){w=T.expand(w),delete o[g];for(d in w)d in o||(o[d]=w[d],c[d]=b)}else c[g]=b}function Nn(o,c,d){var g,b,w=0,T=Nn.prefilters.length,B=f.Deferred().always(function(){delete I.elem}),I=function(){if(b)return!1;for(var pe=Gi||ul(),q=Math.max(0,G.startTime+G.duration-pe),ee=q/G.duration||0,Ge=1-ee,st=0,We=G.tweens.length;st<We;st++)G.tweens[st].run(Ge);return B.notifyWith(o,[G,Ge,q]),Ge<1&&We?q:(We||B.notifyWith(o,[G,1,0]),B.resolveWith(o,[G]),!1)},G=B.promise({elem:o,props:f.extend({},c),opts:f.extend(!0,{specialEasing:{},easing:f.easing._default},d),originalProperties:c,originalOptions:d,startTime:Gi||ul(),duration:d.duration,tweens:[],createTween:function(pe,q){var ee=f.Tween(o,G.opts,pe,q,G.opts.specialEasing[pe]||G.opts.easing);return G.tweens.push(ee),ee},stop:function(pe){var q=0,ee=pe?G.tweens.length:0;if(b)return this;for(b=!0;q<ee;q++)G.tweens[q].run(1);return pe?(B.notifyWith(o,[G,1,0]),B.resolveWith(o,[G,pe])):B.rejectWith(o,[G,pe]),this}}),Y=G.props;for(fh(Y,G.opts.specialEasing);w<T;w++)if(g=Nn.prefilters[w].call(G,o,Y,G.opts),g)return S(g.stop)&&(f._queueHooks(G.elem,G.opts.queue).stop=g.stop.bind(g)),g;return f.map(Y,hl,G),S(G.opts.start)&&G.opts.start.call(o,G),G.progress(G.opts.progress).done(G.opts.done,G.opts.complete).fail(G.opts.fail).always(G.opts.always),f.fx.timer(f.extend(I,{elem:o,anim:G,queue:G.opts.queue})),G}f.Animation=f.extend(Nn,{tweeners:{"*":[function(o,c){var d=this.createTween(o,c);return Ue(d.elem,o,L.exec(c),d),d}]},tweener:function(o,c){S(o)?(c=o,o=["*"]):o=o.match(ce);for(var d,g=0,b=o.length;g<b;g++)d=o[g],Nn.tweeners[d]=Nn.tweeners[d]||[],Nn.tweeners[d].unshift(c)},prefilters:[hh],prefilter:function(o,c){c?Nn.prefilters.unshift(o):Nn.prefilters.push(o)}}),f.speed=function(o,c,d){var g=o&&typeof o=="object"?f.extend({},o):{complete:d||!d&&c||S(o)&&o,duration:o,easing:d&&c||c&&!S(c)&&c};return f.fx.off?g.duration=0:typeof g.duration!="number"&&(g.duration in f.fx.speeds?g.duration=f.fx.speeds[g.duration]:g.duration=f.fx.speeds._default),(g.queue==null||g.queue===!0)&&(g.queue="fx"),g.old=g.complete,g.complete=function(){S(g.old)&&g.old.call(this),g.queue&&f.dequeue(this,g.queue)},g},f.fn.extend({fadeTo:function(o,c,d,g){return this.filter(Ve).css("opacity",0).show().end().animate({opacity:c},o,d,g)},animate:function(o,c,d,g){var b=f.isEmptyObject(o),w=f.speed(c,d,g),T=function(){var B=Nn(this,f.extend({},o),w);(b||se.get(this,"finish"))&&B.stop(!0)};return T.finish=T,b||w.queue===!1?this.each(T):this.queue(w.queue,T)},stop:function(o,c,d){var g=function(b){var w=b.stop;delete b.stop,w(d)};return typeof o!="string"&&(d=c,c=o,o=void 0),c&&this.queue(o||"fx",[]),this.each(function(){var b=!0,w=o!=null&&o+"queueHooks",T=f.timers,B=se.get(this);if(w)B[w]&&B[w].stop&&g(B[w]);else for(w in B)B[w]&&B[w].stop&&uh.test(w)&&g(B[w]);for(w=T.length;w--;)T[w].elem===this&&(o==null||T[w].queue===o)&&(T[w].anim.stop(d),b=!1,T.splice(w,1));(b||!d)&&f.dequeue(this,o)})},finish:function(o){return o!==!1&&(o=o||"fx"),this.each(function(){var c,d=se.get(this),g=d[o+"queue"],b=d[o+"queueHooks"],w=f.timers,T=g?g.length:0;for(d.finish=!0,f.queue(this,o,[]),b&&b.stop&&b.stop.call(this,!0),c=w.length;c--;)w[c].elem===this&&w[c].queue===o&&(w[c].anim.stop(!0),w.splice(c,1));for(c=0;c<T;c++)g[c]&&g[c].finish&&g[c].finish.call(this);delete d.finish})}}),f.each(["toggle","show","hide"],function(o,c){var d=f.fn[c];f.fn[c]=function(g,b,w){return g==null||typeof g=="boolean"?d.apply(this,arguments):this.animate(xs(c,!0),g,b,w)}}),f.each({slideDown:xs("show"),slideUp:xs("hide"),slideToggle:xs("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(o,c){f.fn[o]=function(d,g,b){return this.animate(c,d,g,b)}}),f.timers=[],f.fx.tick=function(){var o,c=0,d=f.timers;for(Gi=Date.now();c<d.length;c++)o=d[c],!o()&&d[c]===o&&d.splice(c--,1);d.length||f.fx.stop(),Gi=void 0},f.fx.timer=function(o){f.timers.push(o),f.fx.start()},f.fx.interval=13,f.fx.start=function(){gs||(gs=!0,Eo())},f.fx.stop=function(){gs=null},f.fx.speeds={slow:600,fast:200,_default:400},f.fn.delay=function(o,c){return o=f.fx&&f.fx.speeds[o]||o,c=c||"fx",this.queue(c,function(d,g){var b=e.setTimeout(d,o);g.stop=function(){e.clearTimeout(b)}})},(function(){var o=v.createElement("input"),c=v.createElement("select"),d=c.appendChild(v.createElement("option"));o.type="checkbox",M.checkOn=o.value!=="",M.optSelected=d.selected,o=v.createElement("input"),o.value="t",o.type="radio",M.radioValue=o.value==="t"})();var fl,Dr=f.expr.attrHandle;f.fn.extend({attr:function(o,c){return Se(this,f.attr,o,c,arguments.length>1)},removeAttr:function(o){return this.each(function(){f.removeAttr(this,o)})}}),f.extend({attr:function(o,c,d){var g,b,w=o.nodeType;if(!(w===3||w===8||w===2)){if(typeof o.getAttribute>"u")return f.prop(o,c,d);if((w!==1||!f.isXMLDoc(o))&&(b=f.attrHooks[c.toLowerCase()]||(f.expr.match.bool.test(c)?fl:void 0)),d!==void 0){if(d===null){f.removeAttr(o,c);return}return b&&"set"in b&&(g=b.set(o,d,c))!==void 0?g:(o.setAttribute(c,d+""),d)}return b&&"get"in b&&(g=b.get(o,c))!==null?g:(g=f.find.attr(o,c),g??void 0)}},attrHooks:{type:{set:function(o,c){if(!M.radioValue&&c==="radio"&&k(o,"input")){var d=o.value;return o.setAttribute("type",c),d&&(o.value=d),c}}}},removeAttr:function(o,c){var d,g=0,b=c&&c.match(ce);if(b&&o.nodeType===1)for(;d=b[g++];)o.removeAttribute(d)}}),fl={set:function(o,c,d){return c===!1?f.removeAttr(o,d):o.setAttribute(d,d),d}},f.each(f.expr.match.bool.source.match(/\w+/g),function(o,c){var d=Dr[c]||f.find.attr;Dr[c]=function(g,b,w){var T,B,I=b.toLowerCase();return w||(B=Dr[I],Dr[I]=T,T=d(g,b,w)!=null?I:null,Dr[I]=B),T}});var dh=/^(?:input|select|textarea|button)$/i,ph=/^(?:a|area)$/i;f.fn.extend({prop:function(o,c){return Se(this,f.prop,o,c,arguments.length>1)},removeProp:function(o){return this.each(function(){delete this[f.propFix[o]||o]})}}),f.extend({prop:function(o,c,d){var g,b,w=o.nodeType;if(!(w===3||w===8||w===2))return(w!==1||!f.isXMLDoc(o))&&(c=f.propFix[c]||c,b=f.propHooks[c]),d!==void 0?b&&"set"in b&&(g=b.set(o,d,c))!==void 0?g:o[c]=d:b&&"get"in b&&(g=b.get(o,c))!==null?g:o[c]},propHooks:{tabIndex:{get:function(o){var c=f.find.attr(o,"tabindex");return c?parseInt(c,10):dh.test(o.nodeName)||ph.test(o.nodeName)&&o.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),M.optSelected||(f.propHooks.selected={get:function(o){var c=o.parentNode;return c&&c.parentNode&&c.parentNode.selectedIndex,null},set:function(o){var c=o.parentNode;c&&(c.selectedIndex,c.parentNode&&c.parentNode.selectedIndex)}}),f.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){f.propFix[this.toLowerCase()]=this});function Ei(o){var c=o.match(ce)||[];return c.join(" ")}function Ai(o){return o.getAttribute&&o.getAttribute("class")||""}function Ao(o){return Array.isArray(o)?o:typeof o=="string"?o.match(ce)||[]:[]}f.fn.extend({addClass:function(o){var c,d,g,b,w,T;return S(o)?this.each(function(B){f(this).addClass(o.call(this,B,Ai(this)))}):(c=Ao(o),c.length?this.each(function(){if(g=Ai(this),d=this.nodeType===1&&" "+Ei(g)+" ",d){for(w=0;w<c.length;w++)b=c[w],d.indexOf(" "+b+" ")<0&&(d+=b+" ");T=Ei(d),g!==T&&this.setAttribute("class",T)}}):this)},removeClass:function(o){var c,d,g,b,w,T;return S(o)?this.each(function(B){f(this).removeClass(o.call(this,B,Ai(this)))}):arguments.length?(c=Ao(o),c.length?this.each(function(){if(g=Ai(this),d=this.nodeType===1&&" "+Ei(g)+" ",d){for(w=0;w<c.length;w++)for(b=c[w];d.indexOf(" "+b+" ")>-1;)d=d.replace(" "+b+" "," ");T=Ei(d),g!==T&&this.setAttribute("class",T)}}):this):this.attr("class","")},toggleClass:function(o,c){var d,g,b,w,T=typeof o,B=T==="string"||Array.isArray(o);return S(o)?this.each(function(I){f(this).toggleClass(o.call(this,I,Ai(this),c),c)}):typeof c=="boolean"&&B?c?this.addClass(o):this.removeClass(o):(d=Ao(o),this.each(function(){if(B)for(w=f(this),b=0;b<d.length;b++)g=d[b],w.hasClass(g)?w.removeClass(g):w.addClass(g);else(o===void 0||T==="boolean")&&(g=Ai(this),g&&se.set(this,"__className__",g),this.setAttribute&&this.setAttribute("class",g||o===!1?"":se.get(this,"__className__")||""))}))},hasClass:function(o){var c,d,g=0;for(c=" "+o+" ";d=this[g++];)if(d.nodeType===1&&(" "+Ei(Ai(d))+" ").indexOf(c)>-1)return!0;return!1}});var mh=/\r/g;f.fn.extend({val:function(o){var c,d,g,b=this[0];return arguments.length?(g=S(o),this.each(function(w){var T;this.nodeType===1&&(g?T=o.call(this,w,f(this).val()):T=o,T==null?T="":typeof T=="number"?T+="":Array.isArray(T)&&(T=f.map(T,function(B){return B==null?"":B+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()],(!c||!("set"in c)||c.set(this,T,"value")===void 0)&&(this.value=T))})):b?(c=f.valHooks[b.type]||f.valHooks[b.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(b,"value"))!==void 0?d:(d=b.value,typeof d=="string"?d.replace(mh,""):d??"")):void 0}}),f.extend({valHooks:{option:{get:function(o){var c=f.find.attr(o,"value");return c??Ei(f.text(o))}},select:{get:function(o){var c,d,g,b=o.options,w=o.selectedIndex,T=o.type==="select-one",B=T?null:[],I=T?w+1:b.length;for(w<0?g=I:g=T?w:0;g<I;g++)if(d=b[g],(d.selected||g===w)&&!d.disabled&&(!d.parentNode.disabled||!k(d.parentNode,"optgroup"))){if(c=f(d).val(),T)return c;B.push(c)}return B},set:function(o,c){for(var d,g,b=o.options,w=f.makeArray(c),T=b.length;T--;)g=b[T],(g.selected=f.inArray(f.valHooks.option.get(g),w)>-1)&&(d=!0);return d||(o.selectedIndex=-1),w}}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]={set:function(o,c){if(Array.isArray(c))return o.checked=f.inArray(f(o).val(),c)>-1}},M.checkOn||(f.valHooks[this].get=function(o){return o.getAttribute("value")===null?"on":o.value})}),M.focusin="onfocusin"in e;var dl=/^(?:focusinfocus|focusoutblur)$/,pl=function(o){o.stopPropagation()};f.extend(f.event,{trigger:function(o,c,d,g){var b,w,T,B,I,G,Y,pe,q=[d||v],ee=m.call(o,"type")?o.type:o,Ge=m.call(o,"namespace")?o.namespace.split("."):[];if(w=pe=T=d=d||v,!(d.nodeType===3||d.nodeType===8)&&!dl.test(ee+f.event.triggered)&&(ee.indexOf(".")>-1&&(Ge=ee.split("."),ee=Ge.shift(),Ge.sort()),I=ee.indexOf(":")<0&&"on"+ee,o=o[f.expando]?o:new f.Event(ee,typeof o=="object"&&o),o.isTrigger=g?2:3,o.namespace=Ge.join("."),o.rnamespace=o.namespace?new RegExp("(^|\\.)"+Ge.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,o.result=void 0,o.target||(o.target=d),c=c==null?[o]:f.makeArray(c,[o]),Y=f.event.special[ee]||{},!(!g&&Y.trigger&&Y.trigger.apply(d,c)===!1))){if(!g&&!Y.noBubble&&!C(d)){for(B=Y.delegateType||ee,dl.test(B+ee)||(w=w.parentNode);w;w=w.parentNode)q.push(w),T=w;T===(d.ownerDocument||v)&&q.push(T.defaultView||T.parentWindow||e)}for(b=0;(w=q[b++])&&!o.isPropagationStopped();)pe=w,o.type=b>1?B:Y.bindType||ee,G=(se.get(w,"events")||Object.create(null))[o.type]&&se.get(w,"handle"),G&&G.apply(w,c),G=I&&w[I],G&&G.apply&&_e(w)&&(o.result=G.apply(w,c),o.result===!1&&o.preventDefault());return o.type=ee,!g&&!o.isDefaultPrevented()&&(!Y._default||Y._default.apply(q.pop(),c)===!1)&&_e(d)&&I&&S(d[ee])&&!C(d)&&(T=d[I],T&&(d[I]=null),f.event.triggered=ee,o.isPropagationStopped()&&pe.addEventListener(ee,pl),d[ee](),o.isPropagationStopped()&&pe.removeEventListener(ee,pl),f.event.triggered=void 0,T&&(d[I]=T)),o.result}},simulate:function(o,c,d){var g=f.extend(new f.Event,d,{type:o,isSimulated:!0});f.event.trigger(g,null,c)}}),f.fn.extend({trigger:function(o,c){return this.each(function(){f.event.trigger(o,c,this)})},triggerHandler:function(o,c){var d=this[0];if(d)return f.event.trigger(o,c,d,!0)}}),M.focusin||f.each({focus:"focusin",blur:"focusout"},function(o,c){var d=function(g){f.event.simulate(c,g.target,f.event.fix(g))};f.event.special[c]={setup:function(){var g=this.ownerDocument||this.document||this,b=se.access(g,c);b||g.addEventListener(o,d,!0),se.access(g,c,(b||0)+1)},teardown:function(){var g=this.ownerDocument||this.document||this,b=se.access(g,c)-1;b?se.access(g,c,b):(g.removeEventListener(o,d,!0),se.remove(g,c))}}});var Ir=e.location,ml={guid:Date.now()},Co=/\?/;f.parseXML=function(o){var c,d;if(!o||typeof o!="string")return null;try{c=new e.DOMParser().parseFromString(o,"text/xml")}catch{}return d=c&&c.getElementsByTagName("parsererror")[0],(!c||d)&&f.error("Invalid XML: "+(d?f.map(d.childNodes,function(g){return g.textContent}).join(`
`):o)),c};var gh=/\[\]$/,gl=/\r?\n/g,xh=/^(?:submit|button|image|reset|file)$/i,vh=/^(?:input|select|textarea|keygen)/i;function Lo(o,c,d,g){var b;if(Array.isArray(c))f.each(c,function(w,T){d||gh.test(o)?g(o,T):Lo(o+"["+(typeof T=="object"&&T!=null?w:"")+"]",T,d,g)});else if(!d&&P(c)==="object")for(b in c)Lo(o+"["+b+"]",c[b],d,g);else g(o,c)}f.param=function(o,c){var d,g=[],b=function(w,T){var B=S(T)?T():T;g[g.length]=encodeURIComponent(w)+"="+encodeURIComponent(B??"")};if(o==null)return"";if(Array.isArray(o)||o.jquery&&!f.isPlainObject(o))f.each(o,function(){b(this.name,this.value)});else for(d in o)Lo(d,o[d],c,b);return g.join("&")},f.fn.extend({serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var o=f.prop(this,"elements");return o?f.makeArray(o):this}).filter(function(){var o=this.type;return this.name&&!f(this).is(":disabled")&&vh.test(this.nodeName)&&!xh.test(o)&&(this.checked||!U.test(o))}).map(function(o,c){var d=f(this).val();return d==null?null:Array.isArray(d)?f.map(d,function(g){return{name:c.name,value:g.replace(gl,`\r
`)}}):{name:c.name,value:d.replace(gl,`\r
`)}}).get()}});var yh=/%20/g,_h=/#.*$/,bh=/([?&])_=[^&]*/,Mh=/^(.*?):[ \t]*([^\r\n]*)$/mg,wh=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Sh=/^(?:GET|HEAD)$/,Th=/^\/\//,xl={},Ro={},vl="*/".concat("*"),Po=v.createElement("a");Po.href=Ir.href;function yl(o){return function(c,d){typeof c!="string"&&(d=c,c="*");var g,b=0,w=c.toLowerCase().match(ce)||[];if(S(d))for(;g=w[b++];)g[0]==="+"?(g=g.slice(1)||"*",(o[g]=o[g]||[]).unshift(d)):(o[g]=o[g]||[]).push(d)}}function _l(o,c,d,g){var b={},w=o===Ro;function T(B){var I;return b[B]=!0,f.each(o[B]||[],function(G,Y){var pe=Y(c,d,g);if(typeof pe=="string"&&!w&&!b[pe])return c.dataTypes.unshift(pe),T(pe),!1;if(w)return!(I=pe)}),I}return T(c.dataTypes[0])||!b["*"]&&T("*")}function Do(o,c){var d,g,b=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==void 0&&((b[d]?o:g||(g={}))[d]=c[d]);return g&&f.extend(!0,o,g),o}function Eh(o,c,d){for(var g,b,w,T,B=o.contents,I=o.dataTypes;I[0]==="*";)I.shift(),g===void 0&&(g=o.mimeType||c.getResponseHeader("Content-Type"));if(g){for(b in B)if(B[b]&&B[b].test(g)){I.unshift(b);break}}if(I[0]in d)w=I[0];else{for(b in d){if(!I[0]||o.converters[b+" "+I[0]]){w=b;break}T||(T=b)}w=w||T}if(w)return w!==I[0]&&I.unshift(w),d[w]}function Ah(o,c,d,g){var b,w,T,B,I,G={},Y=o.dataTypes.slice();if(Y[1])for(T in o.converters)G[T.toLowerCase()]=o.converters[T];for(w=Y.shift();w;)if(o.responseFields[w]&&(d[o.responseFields[w]]=c),!I&&g&&o.dataFilter&&(c=o.dataFilter(c,o.dataType)),I=w,w=Y.shift(),w){if(w==="*")w=I;else if(I!=="*"&&I!==w){if(T=G[I+" "+w]||G["* "+w],!T){for(b in G)if(B=b.split(" "),B[1]===w&&(T=G[I+" "+B[0]]||G["* "+B[0]],T)){T===!0?T=G[b]:G[b]!==!0&&(w=B[0],Y.unshift(B[1]));break}}if(T!==!0)if(T&&o.throws)c=T(c);else try{c=T(c)}catch(pe){return{state:"parsererror",error:T?pe:"No conversion from "+I+" to "+w}}}}return{state:"success",data:c}}f.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ir.href,type:"GET",isLocal:wh.test(Ir.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":vl,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":f.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(o,c){return c?Do(Do(o,f.ajaxSettings),c):Do(f.ajaxSettings,o)},ajaxPrefilter:yl(xl),ajaxTransport:yl(Ro),ajax:function(o,c){typeof o=="object"&&(c=o,o=void 0),c=c||{};var d,g,b,w,T,B,I,G,Y,pe,q=f.ajaxSetup({},c),ee=q.context||q,Ge=q.context&&(ee.nodeType||ee.jquery)?f(ee):f.event,st=f.Deferred(),We=f.Callbacks("once memory"),Vt=q.statusCode||{},Ut={},vn={},Tt="canceled",it={readyState:0,getResponseHeader:function(gt){var Bt;if(I){if(!w)for(w={};Bt=Mh.exec(b);)w[Bt[1].toLowerCase()+" "]=(w[Bt[1].toLowerCase()+" "]||[]).concat(Bt[2]);Bt=w[gt.toLowerCase()+" "]}return Bt==null?null:Bt.join(", ")},getAllResponseHeaders:function(){return I?b:null},setRequestHeader:function(gt,Bt){return I==null&&(gt=vn[gt.toLowerCase()]=vn[gt.toLowerCase()]||gt,Ut[gt]=Bt),this},overrideMimeType:function(gt){return I==null&&(q.mimeType=gt),this},statusCode:function(gt){var Bt;if(gt)if(I)it.always(gt[it.status]);else for(Bt in gt)Vt[Bt]=[Vt[Bt],gt[Bt]];return this},abort:function(gt){var Bt=gt||Tt;return d&&d.abort(Bt),fn(0,Bt),this}};if(st.promise(it),q.url=((o||q.url||Ir.href)+"").replace(Th,Ir.protocol+"//"),q.type=c.method||c.type||q.method||q.type,q.dataTypes=(q.dataType||"*").toLowerCase().match(ce)||[""],q.crossDomain==null){B=v.createElement("a");try{B.href=q.url,B.href=B.href,q.crossDomain=Po.protocol+"//"+Po.host!=B.protocol+"//"+B.host}catch{q.crossDomain=!0}}if(q.data&&q.processData&&typeof q.data!="string"&&(q.data=f.param(q.data,q.traditional)),_l(xl,q,c,it),I)return it;G=f.event&&q.global,G&&f.active++===0&&f.event.trigger("ajaxStart"),q.type=q.type.toUpperCase(),q.hasContent=!Sh.test(q.type),g=q.url.replace(_h,""),q.hasContent?q.data&&q.processData&&(q.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&(q.data=q.data.replace(yh,"+")):(pe=q.url.slice(g.length),q.data&&(q.processData||typeof q.data=="string")&&(g+=(Co.test(g)?"&":"?")+q.data,delete q.data),q.cache===!1&&(g=g.replace(bh,"$1"),pe=(Co.test(g)?"&":"?")+"_="+ml.guid+++pe),q.url=g+pe),q.ifModified&&(f.lastModified[g]&&it.setRequestHeader("If-Modified-Since",f.lastModified[g]),f.etag[g]&&it.setRequestHeader("If-None-Match",f.etag[g])),(q.data&&q.hasContent&&q.contentType!==!1||c.contentType)&&it.setRequestHeader("Content-Type",q.contentType),it.setRequestHeader("Accept",q.dataTypes[0]&&q.accepts[q.dataTypes[0]]?q.accepts[q.dataTypes[0]]+(q.dataTypes[0]!=="*"?", "+vl+"; q=0.01":""):q.accepts["*"]);for(Y in q.headers)it.setRequestHeader(Y,q.headers[Y]);if(q.beforeSend&&(q.beforeSend.call(ee,it,q)===!1||I))return it.abort();if(Tt="abort",We.add(q.complete),it.done(q.success),it.fail(q.error),d=_l(Ro,q,c,it),!d)fn(-1,"No Transport");else{if(it.readyState=1,G&&Ge.trigger("ajaxSend",[it,q]),I)return it;q.async&&q.timeout>0&&(T=e.setTimeout(function(){it.abort("timeout")},q.timeout));try{I=!1,d.send(Ut,fn)}catch(gt){if(I)throw gt;fn(-1,gt)}}function fn(gt,Bt,Fr,vs){var yn,Ci,Li,dn,oi,Cn=Bt;I||(I=!0,T&&e.clearTimeout(T),d=void 0,b=vs||"",it.readyState=gt>0?4:0,yn=gt>=200&&gt<300||gt===304,Fr&&(dn=Eh(q,it,Fr)),!yn&&f.inArray("script",q.dataTypes)>-1&&f.inArray("json",q.dataTypes)<0&&(q.converters["text script"]=function(){}),dn=Ah(q,dn,it,yn),yn?(q.ifModified&&(oi=it.getResponseHeader("Last-Modified"),oi&&(f.lastModified[g]=oi),oi=it.getResponseHeader("etag"),oi&&(f.etag[g]=oi)),gt===204||q.type==="HEAD"?Cn="nocontent":gt===304?Cn="notmodified":(Cn=dn.state,Ci=dn.data,Li=dn.error,yn=!Li)):(Li=Cn,(gt||!Cn)&&(Cn="error",gt<0&&(gt=0))),it.status=gt,it.statusText=(Bt||Cn)+"",yn?st.resolveWith(ee,[Ci,Cn,it]):st.rejectWith(ee,[it,Cn,Li]),it.statusCode(Vt),Vt=void 0,G&&Ge.trigger(yn?"ajaxSuccess":"ajaxError",[it,q,yn?Ci:Li]),We.fireWith(ee,[it,Cn]),G&&(Ge.trigger("ajaxComplete",[it,q]),--f.active||f.event.trigger("ajaxStop")))}return it},getJSON:function(o,c,d){return f.get(o,c,d,"json")},getScript:function(o,c){return f.get(o,void 0,c,"script")}}),f.each(["get","post"],function(o,c){f[c]=function(d,g,b,w){return S(g)&&(w=w||b,b=g,g=void 0),f.ajax(f.extend({url:d,type:c,dataType:w,data:g,success:b},f.isPlainObject(d)&&d))}}),f.ajaxPrefilter(function(o){var c;for(c in o.headers)c.toLowerCase()==="content-type"&&(o.contentType=o.headers[c]||"")}),f._evalUrl=function(o,c,d){return f.ajax({url:o,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(g){f.globalEval(g,c,d)}})},f.fn.extend({wrapAll:function(o){var c;return this[0]&&(S(o)&&(o=o.call(this[0])),c=f(o,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&c.insertBefore(this[0]),c.map(function(){for(var d=this;d.firstElementChild;)d=d.firstElementChild;return d}).append(this)),this},wrapInner:function(o){return S(o)?this.each(function(c){f(this).wrapInner(o.call(this,c))}):this.each(function(){var c=f(this),d=c.contents();d.length?d.wrapAll(o):c.append(o)})},wrap:function(o){var c=S(o);return this.each(function(d){f(this).wrapAll(c?o.call(this,d):o)})},unwrap:function(o){return this.parent(o).not("body").each(function(){f(this).replaceWith(this.childNodes)}),this}}),f.expr.pseudos.hidden=function(o){return!f.expr.pseudos.visible(o)},f.expr.pseudos.visible=function(o){return!!(o.offsetWidth||o.offsetHeight||o.getClientRects().length)},f.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch{}};var Ch={0:200,1223:204},Nr=f.ajaxSettings.xhr();M.cors=!!Nr&&"withCredentials"in Nr,M.ajax=Nr=!!Nr,f.ajaxTransport(function(o){var c,d;if(M.cors||Nr&&!o.crossDomain)return{send:function(g,b){var w,T=o.xhr();if(T.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(w in o.xhrFields)T[w]=o.xhrFields[w];o.mimeType&&T.overrideMimeType&&T.overrideMimeType(o.mimeType),!o.crossDomain&&!g["X-Requested-With"]&&(g["X-Requested-With"]="XMLHttpRequest");for(w in g)T.setRequestHeader(w,g[w]);c=function(B){return function(){c&&(c=d=T.onload=T.onerror=T.onabort=T.ontimeout=T.onreadystatechange=null,B==="abort"?T.abort():B==="error"?typeof T.status!="number"?b(0,"error"):b(T.status,T.statusText):b(Ch[T.status]||T.status,T.statusText,(T.responseType||"text")!=="text"||typeof T.responseText!="string"?{binary:T.response}:{text:T.responseText},T.getAllResponseHeaders()))}},T.onload=c(),d=T.onerror=T.ontimeout=c("error"),T.onabort!==void 0?T.onabort=d:T.onreadystatechange=function(){T.readyState===4&&e.setTimeout(function(){c&&d()})},c=c("abort");try{T.send(o.hasContent&&o.data||null)}catch(B){if(c)throw B}},abort:function(){c&&c()}}}),f.ajaxPrefilter(function(o){o.crossDomain&&(o.contents.script=!1)}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(o){return f.globalEval(o),o}}}),f.ajaxPrefilter("script",function(o){o.cache===void 0&&(o.cache=!1),o.crossDomain&&(o.type="GET")}),f.ajaxTransport("script",function(o){if(o.crossDomain||o.scriptAttrs){var c,d;return{send:function(g,b){c=f("<script>").attr(o.scriptAttrs||{}).prop({charset:o.scriptCharset,src:o.url}).on("load error",d=function(w){c.remove(),d=null,w&&b(w.type==="error"?404:200,w.type)}),v.head.appendChild(c[0])},abort:function(){d&&d()}}}});var bl=[],Io=/(=)\?(?=&|$)|\?\?/;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var o=bl.pop()||f.expando+"_"+ml.guid++;return this[o]=!0,o}}),f.ajaxPrefilter("json jsonp",function(o,c,d){var g,b,w,T=o.jsonp!==!1&&(Io.test(o.url)?"url":typeof o.data=="string"&&(o.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&Io.test(o.data)&&"data");if(T||o.dataTypes[0]==="jsonp")return g=o.jsonpCallback=S(o.jsonpCallback)?o.jsonpCallback():o.jsonpCallback,T?o[T]=o[T].replace(Io,"$1"+g):o.jsonp!==!1&&(o.url+=(Co.test(o.url)?"&":"?")+o.jsonp+"="+g),o.converters["script json"]=function(){return w||f.error(g+" was not called"),w[0]},o.dataTypes[0]="json",b=e[g],e[g]=function(){w=arguments},d.always(function(){b===void 0?f(e).removeProp(g):e[g]=b,o[g]&&(o.jsonpCallback=c.jsonpCallback,bl.push(g)),w&&S(b)&&b(w[0]),w=b=void 0}),"script"}),M.createHTMLDocument=(function(){var o=v.implementation.createHTMLDocument("").body;return o.innerHTML="<form></form><form></form>",o.childNodes.length===2})(),f.parseHTML=function(o,c,d){if(typeof o!="string")return[];typeof c=="boolean"&&(d=c,c=!1);var g,b,w;return c||(M.createHTMLDocument?(c=v.implementation.createHTMLDocument(""),g=c.createElement("base"),g.href=v.location.href,c.head.appendChild(g)):c=v),b=X.exec(o),w=!d&&[],b?[c.createElement(b[1])]:(b=Lt([o],c,w),w&&w.length&&f(w).remove(),f.merge([],b.childNodes))},f.fn.load=function(o,c,d){var g,b,w,T=this,B=o.indexOf(" ");return B>-1&&(g=Ei(o.slice(B)),o=o.slice(0,B)),S(c)?(d=c,c=void 0):c&&typeof c=="object"&&(b="POST"),T.length>0&&f.ajax({url:o,type:b||"GET",dataType:"html",data:c}).done(function(I){w=arguments,T.html(g?f("<div>").append(f.parseHTML(I)).find(g):I)}).always(d&&function(I,G){T.each(function(){d.apply(this,w||[I.responseText,G,I])})}),this},f.expr.pseudos.animated=function(o){return f.grep(f.timers,function(c){return o===c.elem}).length},f.offset={setOffset:function(o,c,d){var g,b,w,T,B,I,G,Y=f.css(o,"position"),pe=f(o),q={};Y==="static"&&(o.style.position="relative"),B=pe.offset(),w=f.css(o,"top"),I=f.css(o,"left"),G=(Y==="absolute"||Y==="fixed")&&(w+I).indexOf("auto")>-1,G?(g=pe.position(),T=g.top,b=g.left):(T=parseFloat(w)||0,b=parseFloat(I)||0),S(c)&&(c=c.call(o,d,f.extend({},B))),c.top!=null&&(q.top=c.top-B.top+T),c.left!=null&&(q.left=c.left-B.left+b),"using"in c?c.using.call(o,q):pe.css(q)}},f.fn.extend({offset:function(o){if(arguments.length)return o===void 0?this:this.each(function(b){f.offset.setOffset(this,o,b)});var c,d,g=this[0];if(g)return g.getClientRects().length?(c=g.getBoundingClientRect(),d=g.ownerDocument.defaultView,{top:c.top+d.pageYOffset,left:c.left+d.pageXOffset}):{top:0,left:0}},position:function(){if(this[0]){var o,c,d,g=this[0],b={top:0,left:0};if(f.css(g,"position")==="fixed")c=g.getBoundingClientRect();else{for(c=this.offset(),d=g.ownerDocument,o=g.offsetParent||d.documentElement;o&&(o===d.body||o===d.documentElement)&&f.css(o,"position")==="static";)o=o.parentNode;o&&o!==g&&o.nodeType===1&&(b=f(o).offset(),b.top+=f.css(o,"borderTopWidth",!0),b.left+=f.css(o,"borderLeftWidth",!0))}return{top:c.top-b.top-f.css(g,"marginTop",!0),left:c.left-b.left-f.css(g,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var o=this.offsetParent;o&&f.css(o,"position")==="static";)o=o.offsetParent;return o||be})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(o,c){var d=c==="pageYOffset";f.fn[o]=function(g){return Se(this,function(b,w,T){var B;if(C(b)?B=b:b.nodeType===9&&(B=b.defaultView),T===void 0)return B?B[c]:b[w];B?B.scrollTo(d?B.pageXOffset:T,d?T:B.pageYOffset):b[w]=T},o,g,arguments.length)}}),f.each(["top","left"],function(o,c){f.cssHooks[c]=jn(M.pixelPosition,function(d,g){if(g)return g=gn(d,c),nt.test(g)?f(d).position()[c]+"px":g})}),f.each({Height:"height",Width:"width"},function(o,c){f.each({padding:"inner"+o,content:c,"":"outer"+o},function(d,g){f.fn[g]=function(b,w){var T=arguments.length&&(d||typeof b!="boolean"),B=d||(b===!0||w===!0?"margin":"border");return Se(this,function(I,G,Y){var pe;return C(I)?g.indexOf("outer")===0?I["inner"+o]:I.document.documentElement["client"+o]:I.nodeType===9?(pe=I.documentElement,Math.max(I.body["scroll"+o],pe["scroll"+o],I.body["offset"+o],pe["offset"+o],pe["client"+o])):Y===void 0?f.css(I,G,B):f.style(I,G,Y,B)},c,T?b:void 0,T)}})}),f.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(o,c){f.fn[c]=function(d){return this.on(c,d)}}),f.fn.extend({bind:function(o,c,d){return this.on(o,null,c,d)},unbind:function(o,c){return this.off(o,null,c)},delegate:function(o,c,d,g){return this.on(c,o,d,g)},undelegate:function(o,c,d){return arguments.length===1?this.off(o,"**"):this.off(c,o||"**",d)},hover:function(o,c){return this.mouseenter(o).mouseleave(c||o)}}),f.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(o,c){f.fn[c]=function(d,g){return arguments.length>0?this.on(c,null,d,g):this.trigger(c)}});var Lh=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;f.proxy=function(o,c){var d,g,b;if(typeof c=="string"&&(d=o[c],c=o,o=d),!!S(o))return g=r.call(arguments,2),b=function(){return o.apply(c||this,g.concat(r.call(arguments)))},b.guid=o.guid=o.guid||f.guid++,b},f.holdReady=function(o){o?f.readyWait++:f.ready(!0)},f.isArray=Array.isArray,f.parseJSON=JSON.parse,f.nodeName=k,f.isFunction=S,f.isWindow=C,f.camelCase=ye,f.type=P,f.now=Date.now,f.isNumeric=function(o){var c=f.type(o);return(c==="number"||c==="string")&&!isNaN(o-parseFloat(o))},f.trim=function(o){return o==null?"":(o+"").replace(Lh,"$1")};var Rh=e.jQuery,Ph=e.$;return f.noConflict=function(o){return e.$===f&&(e.$=Ph),o&&e.jQuery===f&&(e.jQuery=Rh),f},typeof t>"u"&&(e.jQuery=e.$=f),f})})(io)),io.exports}var $h=Jh();const du=Xh($h);(function(s,e,t,n){var i=null,r=[],a=s(e),l=function(){};s.expr[":"].hasClassStartingWith=function(u,h,p){return new RegExp("\\b"+p[3]).test(u.className)},l.defaults=(l.prototype={globals:{pluginName:"fadeThis",bufferTime:300},defaults:{baseName:"slide-",speed:500,easing:"swing",offset:0,reverse:!0,distance:50,scrolledIn:null,scrolledOut:null},init:function(u,h){this.addElements(u,h),this._setEvent(),this._checkVisibleElements()},addElements:function(u,h){var p=u===t.body?e:u,m=s(p===e?"body":p),x=this,_=h&&h.baseName?h.baseName:this.defaults.baseName;return m.is(":hasClassStartingWith('"+_+"')")?x._addElement(m,h):m.find(":hasClassStartingWith('"+_+"')").each((function(){x._addElement(s(this),h)})),m},_addElement:function(u,h){var p=u.data("plugin-options"),m={element:u,options:s.extend({},this.defaults,h,p),invp:!1};return r.push(m),this._prepareElement(m),u},_prepareElement:function(u){var h={opacity:0,visibility:"visible",position:"relative"},p=null;if(u.element.hasClass(u.options.baseName+"right"))p="left";else if(u.element.hasClass(u.options.baseName+"left"))p="right";else if(u.element.hasClass(u.options.baseName+"top"))p="bottom";else{if(!u.element.hasClass(u.options.baseName+"bottom"))return!1;p="top"}h[p]=u.options.distance,u.element.css(h)},_setEvent:function(){var u=this;a.on("scroll",(function(h){i||(i=setTimeout((function(){u._checkVisibleElements(h),i=null}),u.globals.bufferTime))}))},_checkVisibleElements:function(u){var h=this;s.each(r,(function(p,m){h._isVisible(m)?m.invp||(m.invp=!0,h._triggerFading(m),m.options.scrolledIn&&m.options.scrolledIn.call(m.element,u),m.element.trigger("fadethisscrolledin",u)):m.invp&&(m.invp=!1,m.options.reverse&&h._triggerFading(m,!1),m.options.scrolledOut&&m.options.scrolledOut.call(m.element,u),m.element.trigger("fadethisscrolledout",u))}))},_isVisible:function(u){var h=a.scrollTop()+u.options.offset,p=h+a.height()-2*u.options.offset,m=u.element.offset().top,x=m+u.element.height();return x>=h&&m<=p&&x<=p&&m>=h},_triggerFading:function(u,h){h=h===void 0||h;var p={opacity:1},m={opacity:0},x=null;if(u.element.hasClass(u.options.baseName+"right"))x="left";else if(u.element.hasClass(u.options.baseName+"left"))x="right";else if(u.element.hasClass(u.options.baseName+"top"))x="bottom";else{if(!u.element.hasClass(u.options.baseName+"bottom"))return!1;x="top"}p[x]=0,m[x]=u.options.distance,h?u.element.stop(!0).animate(p,u.options.speed,u.options.easing):u.element.stop(!0).animate(m,u.options.speed,u.options.easing)}}).defaults,l.globals=l.prototype.globals,e.Plugin=new l,s.fn[l.globals.pluginName]=function(u){return this.each((function(){s.data(e,"plugin_"+l.globals.pluginName)?s.data(this,"plugin_"+l.globals.pluginName)||s.data(this,"plugin_"+l.globals.pluginName,e.Plugin.addElements(this,u)):(s.data(e,"plugin_"+l.globals.pluginName,"set"),s.data(this,"plugin_"+l.globals.pluginName,e.Plugin.init(this,u)))})),this}})(du,window,document);function Zh(){document.addEventListener("DOMContentLoaded",function(){du(window).fadeThis()})}function Kh(s){var e=document.createElement("div");e.style.top=`${s.clientY}px`,e.style.left=`${s.clientX}px`,e.style.position="fixed",e.style.borderStyle="solid",e.style.borderColor="black",e.style.borderRadius="50%",e.style.userSelect="none",e.id="ripple",document.body.appendChild(e),e.addEventListener("animationend",(function(){e.parentElement.removeChild(e)}).bind(this))}function Qh(){var s=0,e=["❤️","🧡","💛","💚","💙","💜"],t=window.innerWidth,n={x:t/2,y:t/2},i=[];function r(){a(),x()}function a(){document.addEventListener("mousemove",h),document.addEventListener("touchmove",u),document.addEventListener("touchstart",u),window.addEventListener("resize",l)}function l(S){t=window.innerWidth}function u(S){if(S.touches.length>0)for(var C=0;C<S.touches.length;C++)p(S.touches[C].clientX,S.touches[C].clientY,e[s++%e.length])}function h(S){n.x=S.clientX,n.y=S.clientY,p(n.x,n.y+(window.pageYOffset!==void 0?window.pageYOffset:(document.documentElement||document.body.parentNode||document.body).scrollTop),e[s++%e.length])}function p(S,C,v){var y=new _;y.init(S,C,v),i.push(y)}function m(){for(var S=0;S<i.length;S++)i[S].update();for(var S=i.length-1;S>=0;S--)i[S].lifeSpan<0&&(i[S].die(),i.splice(S,1))}function x(){requestAnimationFrame(x),m()}function _(){this.lifeSpan=150,this.initialStyles={position:"absolute",display:"block",pointerEvents:"none","z-index":"10000000",fontSize:"16px","will-change":"transform"},this.init=function(S,C,v){this.velocity={x:(Math.random()<.5?-1:1)*(Math.random()/2),y:1},this.position={x:S-10,y:C-20},this.element=document.createElement("span"),this.element.innerHTML=v,M(this.element,this.initialStyles),this.update(),document.body.insertBefore(this.element,document.body.firstChild)},this.update=function(){this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.lifeSpan--,this.element.style.transform="translate3d("+this.position.x+"px,"+this.position.y+"px,0) scale("+this.lifeSpan/120+")"},this.die=function(){this.element.parentNode.removeChild(this.element)}}function M(S,C){for(var v in C)S.style[v]=C[v]}r()}function ef(s){var e=1,t=setInterval(function(){if(e<=.1){clearInterval(t),s.style.display="none",document.body.style.display="initial",document.body.style.perspective="initial",document.getElementById("undisplay").disabled=!0,document.getElementsByTagName("canvas")[0].style.display="block";var n=window.document.createEvent("UIEvents");n.initUIEvent("resize",!0,!1,window,0),window.dispatchEvent(n)}else s&&s.style&&(s.style.opacity=e,s.style.filter="alpha(opacity="+e*100+")",e-=e*.1)},50)}function tf(){window.onload=function(){var s=document.getElementsByClassName("cubes")[0].childNodes;setTimeout(()=>{for(var e=0;e<s.length;e++)ef(s[e])},50)}}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Va="137",nf=0,Dl=1,rf=2,pu=1,sf=2,Yr=3,es=0,Wt=1,vr=2,mu=1,gi=0,Zr=1,Il=2,Nl=3,Fl=4,of=5,cr=100,af=101,lf=102,Bl=103,zl=104,cf=200,uf=201,hf=202,ff=203,gu=204,xu=205,df=206,pf=207,mf=208,gf=209,xf=210,vf=0,yf=1,_f=2,Ca=3,bf=4,Mf=5,wf=6,Sf=7,ho=0,Tf=1,Ef=2,xi=0,Af=1,Cf=2,Lf=3,Rf=4,Pf=5,vu=300,ls=301,cs=302,La=303,Ra=304,fo=306,Ga=307,Pa=1e3,Tn=1001,Da=1002,qt=1003,Ol=1004,Hl=1005,rn=1006,Df=1007,po=1008,vi=1009,If=1010,Nf=1011,ts=1012,Ff=1013,ro=1014,zi=1015,pr=1016,Bf=1017,zf=1018,mr=1020,Of=1021,Hf=1022,ln=1023,Uf=1024,kf=1025,Oi=1026,yr=1027,Vf=1028,Gf=1029,Wf=1030,qf=1031,jf=1033,Vo=33776,Go=33777,Wo=33778,qo=33779,Ul=35840,kl=35841,Vl=35842,Gl=35843,Xf=36196,Wl=37492,ql=37496,jl=37808,Xl=37809,Yl=37810,Jl=37811,$l=37812,Zl=37813,Kl=37814,Ql=37815,ec=37816,tc=37817,nc=37818,ic=37819,rc=37820,sc=37821,oc=36492,Yf=2200,Jf=2201,$f=2202,so=2300,oo=2301,jo=2302,ur=2400,hr=2401,ao=2402,Wa=2500,yu=2501,Zf=0,Mi=3e3,It=3001,Kf=3200,Qf=3201,Mr=0,ed=1,Xo=7680,td=519,ns=35044,lo=35048,ac="300 es",Ia=1035;class Ui{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const Kt=[];for(let s=0;s<256;s++)Kt[s]=(s<16?"0":"")+s.toString(16);const Yo=Math.PI/180,Na=180/Math.PI;function Gn(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Kt[s&255]+Kt[s>>8&255]+Kt[s>>16&255]+Kt[s>>24&255]+"-"+Kt[e&255]+Kt[e>>8&255]+"-"+Kt[e>>16&15|64]+Kt[e>>24&255]+"-"+Kt[t&63|128]+Kt[t>>8&255]+"-"+Kt[t>>16&255]+Kt[t>>24&255]+Kt[n&255]+Kt[n>>8&255]+Kt[n>>16&255]+Kt[n>>24&255]).toUpperCase()}function Sn(s,e,t){return Math.max(e,Math.min(t,s))}function nd(s,e){return(s%e+e)%e}function Jo(s,e,t){return(1-t)*s+t*e}function lc(s){return(s&s-1)===0&&s!==0}function id(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}class ve{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ve.prototype.isVector2=!0;class Qt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,l,u,h){const p=this.elements;return p[0]=e,p[1]=i,p[2]=l,p[3]=t,p[4]=r,p[5]=u,p[6]=n,p[7]=a,p[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[3],u=n[6],h=n[1],p=n[4],m=n[7],x=n[2],_=n[5],M=n[8],S=i[0],C=i[3],v=i[6],y=i[1],O=i[4],P=i[7],D=i[2],f=i[5],W=i[8];return r[0]=a*S+l*y+u*D,r[3]=a*C+l*O+u*f,r[6]=a*v+l*P+u*W,r[1]=h*S+p*y+m*D,r[4]=h*C+p*O+m*f,r[7]=h*v+p*P+m*W,r[2]=x*S+_*y+M*D,r[5]=x*C+_*O+M*f,r[8]=x*v+_*P+M*W,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],u=e[6],h=e[7],p=e[8];return t*a*p-t*l*h-n*r*p+n*l*u+i*r*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],u=e[6],h=e[7],p=e[8],m=p*a-l*h,x=l*u-p*r,_=h*r-a*u,M=t*m+n*x+i*_;if(M===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/M;return e[0]=m*S,e[1]=(i*h-p*n)*S,e[2]=(l*n-i*a)*S,e[3]=x*S,e[4]=(p*t-i*u)*S,e[5]=(i*r-l*t)*S,e[6]=_*S,e[7]=(n*u-h*t)*S,e[8]=(a*t-n*r)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,l){const u=Math.cos(r),h=Math.sin(r);return this.set(n*u,n*h,-n*(u*a+h*l)+a+e,-i*h,i*u,-i*(-h*a+u*l)+l+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],l=i[6],u=i[1],h=i[4],p=i[7];return i[0]=t*r+n*u,i[3]=t*a+n*h,i[6]=t*l+n*p,i[1]=-n*r+t*u,i[4]=-n*a+t*h,i[7]=-n*l+t*p,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Qt.prototype.isMatrix3=!0;function _u(s){for(let e=s.length-1;e>=0;--e)if(s[e]>65535)return!0;return!1}function is(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const bu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},zn={h:0,s:0,l:0},Ts={h:0,s:0,l:0};function $o(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}function gr(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Zo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let ke=class{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=nd(e,1),t=Sn(t,0,1),n=Sn(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=$o(r,i,e+1/3),this.g=$o(r,i,e),this.b=$o(r,i,e-1/3)}return this}setStyle(e){function t(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(i[1])/360,u=parseInt(i[2],10)/100,h=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(l,u,h)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=n[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=bu[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=gr(e.r),this.g=gr(e.g),this.b=gr(e.b),this}copyLinearToSRGB(e){return this.r=Zo(e.r),this.g=Zo(e.g),this.b=Zo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),a=Math.min(t,n,i);let l,u;const h=(a+r)/2;if(a===r)l=0,u=0;else{const p=r-a;switch(u=h<=.5?p/(r+a):p/(2-r-a),r){case t:l=(n-i)/p+(n<i?6:0);break;case n:l=(i-t)/p+2;break;case i:l=(t-n)/p+4;break}l/=6}return e.h=l,e.s=u,e.l=h,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(zn),zn.h+=e,zn.s+=t,zn.l+=n,this.setHSL(zn.h,zn.s,zn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(zn),e.getHSL(Ts);const n=Jo(zn.h,Ts.h,t),i=Jo(zn.s,Ts.s,t),r=Jo(zn.l,Ts.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}};ke.NAMES=bu;ke.prototype.isColor=!0;ke.prototype.r=1;ke.prototype.g=1;ke.prototype.b=1;let Wi;class ki{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Wi===void 0&&(Wi=is("canvas")),Wi.width=e.width,Wi.height=e.height;const n=Wi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Wi}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=is("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=gr(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(gr(t[n]/255)*255):t[n]=gr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let rd=0;class $t extends Ui{constructor(e=$t.DEFAULT_IMAGE,t=$t.DEFAULT_MAPPING,n=Tn,i=Tn,r=rn,a=po,l=ln,u=vi,h=1,p=Mi){super(),Object.defineProperty(this,"id",{value:rd++}),this.uuid=Gn(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=u,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Gn()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let a=0,l=i.length;a<l;a++)i[a].isDataTexture?r.push(Ko(i[a].image)):r.push(Ko(i[a]))}else r=Ko(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==vu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Pa:e.x=e.x-Math.floor(e.x);break;case Tn:e.x=e.x<0?0:1;break;case Da:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Pa:e.y=e.y-Math.floor(e.y);break;case Tn:e.y=e.y<0?0:1;break;case Da:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}$t.DEFAULT_IMAGE=void 0;$t.DEFAULT_MAPPING=vu;$t.prototype.isTexture=!0;function Ko(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ki.getDataURL(s):s.data?{data:Array.prototype.slice.call(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Ct{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,h=u[0],p=u[4],m=u[8],x=u[1],_=u[5],M=u[9],S=u[2],C=u[6],v=u[10];if(Math.abs(p-x)<.01&&Math.abs(m-S)<.01&&Math.abs(M-C)<.01){if(Math.abs(p+x)<.1&&Math.abs(m+S)<.1&&Math.abs(M+C)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const O=(h+1)/2,P=(_+1)/2,D=(v+1)/2,f=(p+x)/4,W=(m+S)/4,fe=(M+C)/4;return O>P&&O>D?O<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(O),i=f/n,r=W/n):P>D?P<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(P),n=f/i,r=fe/i):D<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(D),n=W/r,i=fe/r),this.set(n,i,r,t),this}let y=Math.sqrt((C-M)*(C-M)+(m-S)*(m-S)+(x-p)*(x-p));return Math.abs(y)<.001&&(y=1),this.x=(C-M)/y,this.y=(m-S)/y,this.z=(x-p)/y,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ct.prototype.isVector4=!0;class Rn extends Ui{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t),this.texture=new $t(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Rn.prototype.isWebGLRenderTarget=!0;class sd extends Rn{constructor(e,t,n){super(e,t);const i=this.texture;this.texture=[];for(let r=0;r<n;r++)this.texture[r]=i.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}sd.prototype.isWebGLMultipleRenderTargets=!0;class qa extends Rn{constructor(e,t,n={}){super(e,t,n),this.samples=4,this.ignoreDepthForMultisampleCopy=n.ignoreDepth!==void 0?n.ignoreDepth:!0,this.useRenderToTexture=n.useRenderToTexture!==void 0?n.useRenderToTexture:!1,this.useRenderbuffer=this.useRenderToTexture===!1}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}qa.prototype.isWebGLMultisampleRenderTarget=!0;class mn{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,a,l){let u=n[i+0],h=n[i+1],p=n[i+2],m=n[i+3];const x=r[a+0],_=r[a+1],M=r[a+2],S=r[a+3];if(l===0){e[t+0]=u,e[t+1]=h,e[t+2]=p,e[t+3]=m;return}if(l===1){e[t+0]=x,e[t+1]=_,e[t+2]=M,e[t+3]=S;return}if(m!==S||u!==x||h!==_||p!==M){let C=1-l;const v=u*x+h*_+p*M+m*S,y=v>=0?1:-1,O=1-v*v;if(O>Number.EPSILON){const D=Math.sqrt(O),f=Math.atan2(D,v*y);C=Math.sin(C*f)/D,l=Math.sin(l*f)/D}const P=l*y;if(u=u*C+x*P,h=h*C+_*P,p=p*C+M*P,m=m*C+S*P,C===1-l){const D=1/Math.sqrt(u*u+h*h+p*p+m*m);u*=D,h*=D,p*=D,m*=D}}e[t]=u,e[t+1]=h,e[t+2]=p,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,r,a){const l=n[i],u=n[i+1],h=n[i+2],p=n[i+3],m=r[a],x=r[a+1],_=r[a+2],M=r[a+3];return e[t]=l*M+p*m+u*_-h*x,e[t+1]=u*M+p*x+h*m-l*_,e[t+2]=h*M+p*_+l*x-u*m,e[t+3]=p*M-l*m-u*x-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,a=e._order,l=Math.cos,u=Math.sin,h=l(n/2),p=l(i/2),m=l(r/2),x=u(n/2),_=u(i/2),M=u(r/2);switch(a){case"XYZ":this._x=x*p*m+h*_*M,this._y=h*_*m-x*p*M,this._z=h*p*M+x*_*m,this._w=h*p*m-x*_*M;break;case"YXZ":this._x=x*p*m+h*_*M,this._y=h*_*m-x*p*M,this._z=h*p*M-x*_*m,this._w=h*p*m+x*_*M;break;case"ZXY":this._x=x*p*m-h*_*M,this._y=h*_*m+x*p*M,this._z=h*p*M+x*_*m,this._w=h*p*m-x*_*M;break;case"ZYX":this._x=x*p*m-h*_*M,this._y=h*_*m+x*p*M,this._z=h*p*M-x*_*m,this._w=h*p*m+x*_*M;break;case"YZX":this._x=x*p*m+h*_*M,this._y=h*_*m+x*p*M,this._z=h*p*M-x*_*m,this._w=h*p*m-x*_*M;break;case"XZY":this._x=x*p*m-h*_*M,this._y=h*_*m-x*p*M,this._z=h*p*M+x*_*m,this._w=h*p*m+x*_*M;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],l=t[5],u=t[9],h=t[2],p=t[6],m=t[10],x=n+l+m;if(x>0){const _=.5/Math.sqrt(x+1);this._w=.25/_,this._x=(p-u)*_,this._y=(r-h)*_,this._z=(a-i)*_}else if(n>l&&n>m){const _=2*Math.sqrt(1+n-l-m);this._w=(p-u)/_,this._x=.25*_,this._y=(i+a)/_,this._z=(r+h)/_}else if(l>m){const _=2*Math.sqrt(1+l-n-m);this._w=(r-h)/_,this._x=(i+a)/_,this._y=.25*_,this._z=(u+p)/_}else{const _=2*Math.sqrt(1+m-n-l);this._w=(a-i)/_,this._x=(r+h)/_,this._y=(u+p)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Sn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,l=t._x,u=t._y,h=t._z,p=t._w;return this._x=n*p+a*l+i*h-r*u,this._y=i*p+a*u+r*l-n*h,this._z=r*p+a*h+n*u-i*l,this._w=a*p-n*l-i*u-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let l=a*e._w+n*e._x+i*e._y+r*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const u=1-l*l;if(u<=Number.EPSILON){const _=1-t;return this._w=_*a+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),p=Math.atan2(h,l),m=Math.sin((1-t)*p)/h,x=Math.sin(t*p)/h;return this._w=a*m+this._w*x,this._x=n*m+this._x*x,this._y=i*m+this._y*x,this._z=r*m+this._z*x,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}mn.prototype.isQuaternion=!0;class z{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(cc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,l=e.z,u=e.w,h=u*t+a*i-l*n,p=u*n+l*t-r*i,m=u*i+r*n-a*t,x=-r*t-a*n-l*i;return this.x=h*u+x*-r+p*-l-m*-a,this.y=p*u+x*-a+m*-r-h*-l,this.z=m*u+x*-l+h*-a-p*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,l=t.y,u=t.z;return this.x=i*u-r*l,this.y=r*a-n*u,this.z=n*l-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Qo.copy(this).projectOnVector(e),this.sub(Qo)}reflect(e){return this.sub(Qo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Sn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}z.prototype.isVector3=!0;const Qo=new z,cc=new mn;class Un{constructor(e=new z(1/0,1/0,1/0),t=new z(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,l=-1/0;for(let u=0,h=e.length;u<h;u+=3){const p=e[u],m=e[u+1],x=e[u+2];p<t&&(t=p),m<n&&(n=m),x<i&&(i=x),p>r&&(r=p),m>a&&(a=m),x>l&&(l=x)}return this.min.set(t,n,i),this.max.set(r,a,l),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,l=-1/0;for(let u=0,h=e.count;u<h;u++){const p=e.getX(u),m=e.getY(u),x=e.getZ(u);p<t&&(t=p),m<n&&(n=m),x<i&&(i=x),p>r&&(r=p),m>a&&(a=m),x>l&&(l=x)}return this.min.set(t,n,i),this.max.set(r,a,l),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ii.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,l=r.count;a<l;a++)Ii.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ii)}else n.boundingBox===null&&n.computeBoundingBox(),ea.copy(n.boundingBox),ea.applyMatrix4(e.matrixWorld),this.union(ea);const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ii),Ii.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Hr),Es.subVectors(this.max,Hr),qi.subVectors(e.a,Hr),ji.subVectors(e.b,Hr),Xi.subVectors(e.c,Hr),li.subVectors(ji,qi),ci.subVectors(Xi,ji),Ni.subVectors(qi,Xi);let t=[0,-li.z,li.y,0,-ci.z,ci.y,0,-Ni.z,Ni.y,li.z,0,-li.x,ci.z,0,-ci.x,Ni.z,0,-Ni.x,-li.y,li.x,0,-ci.y,ci.x,0,-Ni.y,Ni.x,0];return!ta(t,qi,ji,Xi,Es)||(t=[1,0,0,0,1,0,0,0,1],!ta(t,qi,ji,Xi,Es))?!1:(As.crossVectors(li,ci),t=[As.x,As.y,As.z],ta(t,qi,ji,Xi,Es))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ii.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ii).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Jn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Jn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Jn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Jn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Jn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Jn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Jn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Jn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Jn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Un.prototype.isBox3=!0;const Jn=[new z,new z,new z,new z,new z,new z,new z,new z],Ii=new z,ea=new Un,qi=new z,ji=new z,Xi=new z,li=new z,ci=new z,Ni=new z,Hr=new z,Es=new z,As=new z,Fi=new z;function ta(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){Fi.fromArray(s,r);const l=i.x*Math.abs(Fi.x)+i.y*Math.abs(Fi.y)+i.z*Math.abs(Fi.z),u=e.dot(Fi),h=t.dot(Fi),p=n.dot(Fi);if(Math.max(-Math.max(u,h,p),Math.min(u,h,p))>l)return!1}return!0}const od=new Un,uc=new z,Cs=new z,na=new z;class wr{constructor(e=new z,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):od.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){na.subVectors(e,this.center);const t=na.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(na.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Cs.set(0,0,1).multiplyScalar(e.radius):Cs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(uc.copy(e.center).add(Cs)),this.expandByPoint(uc.copy(e.center).sub(Cs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const $n=new z,ia=new z,Ls=new z,ui=new z,ra=new z,Rs=new z,sa=new z;class Sr{constructor(e=new z,t=new z(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$n)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=$n.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($n.copy(this.direction).multiplyScalar(t).add(this.origin),$n.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ia.copy(e).add(t).multiplyScalar(.5),Ls.copy(t).sub(e).normalize(),ui.copy(this.origin).sub(ia);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Ls),l=ui.dot(this.direction),u=-ui.dot(Ls),h=ui.lengthSq(),p=Math.abs(1-a*a);let m,x,_,M;if(p>0)if(m=a*u-l,x=a*l-u,M=r*p,m>=0)if(x>=-M)if(x<=M){const S=1/p;m*=S,x*=S,_=m*(m+a*x+2*l)+x*(a*m+x+2*u)+h}else x=r,m=Math.max(0,-(a*x+l)),_=-m*m+x*(x+2*u)+h;else x=-r,m=Math.max(0,-(a*x+l)),_=-m*m+x*(x+2*u)+h;else x<=-M?(m=Math.max(0,-(-a*r+l)),x=m>0?-r:Math.min(Math.max(-r,-u),r),_=-m*m+x*(x+2*u)+h):x<=M?(m=0,x=Math.min(Math.max(-r,-u),r),_=x*(x+2*u)+h):(m=Math.max(0,-(a*r+l)),x=m>0?r:Math.min(Math.max(-r,-u),r),_=-m*m+x*(x+2*u)+h);else x=a>0?-r:r,m=Math.max(0,-(a*x+l)),_=-m*m+x*(x+2*u)+h;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),i&&i.copy(Ls).multiplyScalar(x).add(ia),_}intersectSphere(e,t){$n.subVectors(e.center,this.origin);const n=$n.dot(this.direction),i=$n.dot($n)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),l=n-a,u=n+a;return l<0&&u<0?null:l<0?this.at(u,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,l,u;const h=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,x=this.origin;return h>=0?(n=(e.min.x-x.x)*h,i=(e.max.x-x.x)*h):(n=(e.max.x-x.x)*h,i=(e.min.x-x.x)*h),p>=0?(r=(e.min.y-x.y)*p,a=(e.max.y-x.y)*p):(r=(e.max.y-x.y)*p,a=(e.min.y-x.y)*p),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),m>=0?(l=(e.min.z-x.z)*m,u=(e.max.z-x.z)*m):(l=(e.max.z-x.z)*m,u=(e.min.z-x.z)*m),n>u||l>i)||((l>n||n!==n)&&(n=l),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,$n)!==null}intersectTriangle(e,t,n,i,r){ra.subVectors(t,e),Rs.subVectors(n,e),sa.crossVectors(ra,Rs);let a=this.direction.dot(sa),l;if(a>0){if(i)return null;l=1}else if(a<0)l=-1,a=-a;else return null;ui.subVectors(this.origin,e);const u=l*this.direction.dot(Rs.crossVectors(ui,Rs));if(u<0)return null;const h=l*this.direction.dot(ra.cross(ui));if(h<0||u+h>a)return null;const p=-l*ui.dot(sa);return p<0?null:this.at(p/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ke{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,l,u,h,p,m,x,_,M,S,C){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=a,v[9]=l,v[13]=u,v[2]=h,v[6]=p,v[10]=m,v[14]=x,v[3]=_,v[7]=M,v[11]=S,v[15]=C,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Yi.setFromMatrixColumn(e,0).length(),r=1/Yi.setFromMatrixColumn(e,1).length(),a=1/Yi.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),l=Math.sin(n),u=Math.cos(i),h=Math.sin(i),p=Math.cos(r),m=Math.sin(r);if(e.order==="XYZ"){const x=a*p,_=a*m,M=l*p,S=l*m;t[0]=u*p,t[4]=-u*m,t[8]=h,t[1]=_+M*h,t[5]=x-S*h,t[9]=-l*u,t[2]=S-x*h,t[6]=M+_*h,t[10]=a*u}else if(e.order==="YXZ"){const x=u*p,_=u*m,M=h*p,S=h*m;t[0]=x+S*l,t[4]=M*l-_,t[8]=a*h,t[1]=a*m,t[5]=a*p,t[9]=-l,t[2]=_*l-M,t[6]=S+x*l,t[10]=a*u}else if(e.order==="ZXY"){const x=u*p,_=u*m,M=h*p,S=h*m;t[0]=x-S*l,t[4]=-a*m,t[8]=M+_*l,t[1]=_+M*l,t[5]=a*p,t[9]=S-x*l,t[2]=-a*h,t[6]=l,t[10]=a*u}else if(e.order==="ZYX"){const x=a*p,_=a*m,M=l*p,S=l*m;t[0]=u*p,t[4]=M*h-_,t[8]=x*h+S,t[1]=u*m,t[5]=S*h+x,t[9]=_*h-M,t[2]=-h,t[6]=l*u,t[10]=a*u}else if(e.order==="YZX"){const x=a*u,_=a*h,M=l*u,S=l*h;t[0]=u*p,t[4]=S-x*m,t[8]=M*m+_,t[1]=m,t[5]=a*p,t[9]=-l*p,t[2]=-h*p,t[6]=_*m+M,t[10]=x-S*m}else if(e.order==="XZY"){const x=a*u,_=a*h,M=l*u,S=l*h;t[0]=u*p,t[4]=-m,t[8]=h*p,t[1]=x*m+S,t[5]=a*p,t[9]=_*m-M,t[2]=M*m-_,t[6]=l*p,t[10]=S*m+x}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ad,e,ld)}lookAt(e,t,n){const i=this.elements;return Mn.subVectors(e,t),Mn.lengthSq()===0&&(Mn.z=1),Mn.normalize(),hi.crossVectors(n,Mn),hi.lengthSq()===0&&(Math.abs(n.z)===1?Mn.x+=1e-4:Mn.z+=1e-4,Mn.normalize(),hi.crossVectors(n,Mn)),hi.normalize(),Ps.crossVectors(Mn,hi),i[0]=hi.x,i[4]=Ps.x,i[8]=Mn.x,i[1]=hi.y,i[5]=Ps.y,i[9]=Mn.y,i[2]=hi.z,i[6]=Ps.z,i[10]=Mn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[4],u=n[8],h=n[12],p=n[1],m=n[5],x=n[9],_=n[13],M=n[2],S=n[6],C=n[10],v=n[14],y=n[3],O=n[7],P=n[11],D=n[15],f=i[0],W=i[4],fe=i[8],Pe=i[12],ge=i[1],A=i[5],k=i[9],X=i[13],J=i[2],Z=i[6],K=i[10],oe=i[14],xe=i[3],Ce=i[7],ae=i[11],ce=i[15];return r[0]=a*f+l*ge+u*J+h*xe,r[4]=a*W+l*A+u*Z+h*Ce,r[8]=a*fe+l*k+u*K+h*ae,r[12]=a*Pe+l*X+u*oe+h*ce,r[1]=p*f+m*ge+x*J+_*xe,r[5]=p*W+m*A+x*Z+_*Ce,r[9]=p*fe+m*k+x*K+_*ae,r[13]=p*Pe+m*X+x*oe+_*ce,r[2]=M*f+S*ge+C*J+v*xe,r[6]=M*W+S*A+C*Z+v*Ce,r[10]=M*fe+S*k+C*K+v*ae,r[14]=M*Pe+S*X+C*oe+v*ce,r[3]=y*f+O*ge+P*J+D*xe,r[7]=y*W+O*A+P*Z+D*Ce,r[11]=y*fe+O*k+P*K+D*ae,r[15]=y*Pe+O*X+P*oe+D*ce,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],l=e[5],u=e[9],h=e[13],p=e[2],m=e[6],x=e[10],_=e[14],M=e[3],S=e[7],C=e[11],v=e[15];return M*(+r*u*m-i*h*m-r*l*x+n*h*x+i*l*_-n*u*_)+S*(+t*u*_-t*h*x+r*a*x-i*a*_+i*h*p-r*u*p)+C*(+t*h*m-t*l*_-r*a*m+n*a*_+r*l*p-n*h*p)+v*(-i*l*p-t*u*m+t*l*x+i*a*m-n*a*x+n*u*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],u=e[6],h=e[7],p=e[8],m=e[9],x=e[10],_=e[11],M=e[12],S=e[13],C=e[14],v=e[15],y=m*C*h-S*x*h+S*u*_-l*C*_-m*u*v+l*x*v,O=M*x*h-p*C*h-M*u*_+a*C*_+p*u*v-a*x*v,P=p*S*h-M*m*h+M*l*_-a*S*_-p*l*v+a*m*v,D=M*m*u-p*S*u-M*l*x+a*S*x+p*l*C-a*m*C,f=t*y+n*O+i*P+r*D;if(f===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const W=1/f;return e[0]=y*W,e[1]=(S*x*r-m*C*r-S*i*_+n*C*_+m*i*v-n*x*v)*W,e[2]=(l*C*r-S*u*r+S*i*h-n*C*h-l*i*v+n*u*v)*W,e[3]=(m*u*r-l*x*r-m*i*h+n*x*h+l*i*_-n*u*_)*W,e[4]=O*W,e[5]=(p*C*r-M*x*r+M*i*_-t*C*_-p*i*v+t*x*v)*W,e[6]=(M*u*r-a*C*r-M*i*h+t*C*h+a*i*v-t*u*v)*W,e[7]=(a*x*r-p*u*r+p*i*h-t*x*h-a*i*_+t*u*_)*W,e[8]=P*W,e[9]=(M*m*r-p*S*r-M*n*_+t*S*_+p*n*v-t*m*v)*W,e[10]=(a*S*r-M*l*r+M*n*h-t*S*h-a*n*v+t*l*v)*W,e[11]=(p*l*r-a*m*r-p*n*h+t*m*h+a*n*_-t*l*_)*W,e[12]=D*W,e[13]=(p*S*i-M*m*i+M*n*x-t*S*x-p*n*C+t*m*C)*W,e[14]=(M*l*i-a*S*i-M*n*u+t*S*u+a*n*C-t*l*C)*W,e[15]=(a*m*i-p*l*i+p*n*u-t*m*u-a*n*x+t*l*x)*W,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,l=e.y,u=e.z,h=r*a,p=r*l;return this.set(h*a+n,h*l-i*u,h*u+i*l,0,h*l+i*u,p*l+n,p*u-i*a,0,h*u-i*l,p*u+i*a,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,l=t._z,u=t._w,h=r+r,p=a+a,m=l+l,x=r*h,_=r*p,M=r*m,S=a*p,C=a*m,v=l*m,y=u*h,O=u*p,P=u*m,D=n.x,f=n.y,W=n.z;return i[0]=(1-(S+v))*D,i[1]=(_+P)*D,i[2]=(M-O)*D,i[3]=0,i[4]=(_-P)*f,i[5]=(1-(x+v))*f,i[6]=(C+y)*f,i[7]=0,i[8]=(M+O)*W,i[9]=(C-y)*W,i[10]=(1-(x+S))*W,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Yi.set(i[0],i[1],i[2]).length();const a=Yi.set(i[4],i[5],i[6]).length(),l=Yi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],On.copy(this);const h=1/r,p=1/a,m=1/l;return On.elements[0]*=h,On.elements[1]*=h,On.elements[2]*=h,On.elements[4]*=p,On.elements[5]*=p,On.elements[6]*=p,On.elements[8]*=m,On.elements[9]*=m,On.elements[10]*=m,t.setFromRotationMatrix(On),n.x=r,n.y=a,n.z=l,this}makePerspective(e,t,n,i,r,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const l=this.elements,u=2*r/(t-e),h=2*r/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i),x=-(a+r)/(a-r),_=-2*a*r/(a-r);return l[0]=u,l[4]=0,l[8]=p,l[12]=0,l[1]=0,l[5]=h,l[9]=m,l[13]=0,l[2]=0,l[6]=0,l[10]=x,l[14]=_,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,a){const l=this.elements,u=1/(t-e),h=1/(n-i),p=1/(a-r),m=(t+e)*u,x=(n+i)*h,_=(a+r)*p;return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-m,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-x,l[2]=0,l[6]=0,l[10]=-2*p,l[14]=-_,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Ke.prototype.isMatrix4=!0;const Yi=new z,On=new Ke,ad=new z(0,0,0),ld=new z(1,1,1),hi=new z,Ps=new z,Mn=new z,hc=new Ke,fc=new mn;class Tr{constructor(e=0,t=0,n=0,i=Tr.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],l=i[8],u=i[1],h=i[5],p=i[9],m=i[2],x=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Sn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-p,_),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(x,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Sn(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(l,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-m,r),this._z=0);break;case"ZXY":this._x=Math.asin(Sn(x,-1,1)),Math.abs(x)<.9999999?(this._y=Math.atan2(-m,_),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-Sn(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(x,_),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(Sn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-p,h),this._y=Math.atan2(-m,r)):(this._x=0,this._y=Math.atan2(l,_));break;case"XZY":this._z=Math.asin(-Sn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(x,h),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-p,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return hc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(hc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return fc.setFromEuler(this),this.setFromQuaternion(fc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new z(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Tr.prototype.isEuler=!0;Tr.DefaultOrder="XYZ";Tr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Mu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let cd=0;const dc=new z,Ji=new mn,Zn=new Ke,Ds=new z,Ur=new z,ud=new z,hd=new mn,pc=new z(1,0,0),mc=new z(0,1,0),gc=new z(0,0,1),fd={type:"added"},xc={type:"removed"};class Mt extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:cd++}),this.uuid=Gn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Mt.DefaultUp.clone();const e=new z,t=new Tr,n=new mn,i=new z(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ke},normalMatrix:{value:new Qt}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=Mt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Mu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ji.setFromAxisAngle(e,t),this.quaternion.multiply(Ji),this}rotateOnWorldAxis(e,t){return Ji.setFromAxisAngle(e,t),this.quaternion.premultiply(Ji),this}rotateX(e){return this.rotateOnAxis(pc,e)}rotateY(e){return this.rotateOnAxis(mc,e)}rotateZ(e){return this.rotateOnAxis(gc,e)}translateOnAxis(e,t){return dc.copy(e).applyQuaternion(this.quaternion),this.position.add(dc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(pc,e)}translateY(e){return this.translateOnAxis(mc,e)}translateZ(e){return this.translateOnAxis(gc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Zn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ds.copy(e):Ds.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ur.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zn.lookAt(Ur,Ds,this.up):Zn.lookAt(Ds,Ur,this.up),this.quaternion.setFromRotationMatrix(Zn),i&&(Zn.extractRotation(i.matrixWorld),Ji.setFromRotationMatrix(Zn),this.quaternion.premultiply(Ji.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(fd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(xc)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(xc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Zn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ur,e,ud),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ur,hd,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(l,u){return l[u.uuid]===void 0&&(l[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const u=l.shapes;if(Array.isArray(u))for(let h=0,p=u.length;h<p;h++){const m=u[h];r(e.shapes,m)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let u=0,h=this.material.length;u<h;u++)l.push(r(e.materials,this.material[u]));i.material=l}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let l=0;l<this.children.length;l++)i.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let l=0;l<this.animations.length;l++){const u=this.animations[l];i.animations.push(r(e.animations,u))}}if(t){const l=a(e.geometries),u=a(e.materials),h=a(e.textures),p=a(e.images),m=a(e.shapes),x=a(e.skeletons),_=a(e.animations);l.length>0&&(n.geometries=l),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),x.length>0&&(n.skeletons=x),_.length>0&&(n.animations=_)}return n.object=i,n;function a(l){const u=[];for(const h in l){const p=l[h];delete p.metadata,u.push(p)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Mt.DefaultUp=new z(0,1,0);Mt.DefaultMatrixAutoUpdate=!0;Mt.prototype.isObject3D=!0;const Hn=new z,Kn=new z,oa=new z,Qn=new z,$i=new z,Zi=new z,vc=new z,aa=new z,la=new z,ca=new z;class jt{constructor(e=new z,t=new z,n=new z){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Hn.subVectors(e,t),i.cross(Hn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Hn.subVectors(i,t),Kn.subVectors(n,t),oa.subVectors(e,t);const a=Hn.dot(Hn),l=Hn.dot(Kn),u=Hn.dot(oa),h=Kn.dot(Kn),p=Kn.dot(oa),m=a*h-l*l;if(m===0)return r.set(-2,-1,-1);const x=1/m,_=(h*u-l*p)*x,M=(a*p-l*u)*x;return r.set(1-_-M,M,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qn),Qn.x>=0&&Qn.y>=0&&Qn.x+Qn.y<=1}static getUV(e,t,n,i,r,a,l,u){return this.getBarycoord(e,t,n,i,Qn),u.set(0,0),u.addScaledVector(r,Qn.x),u.addScaledVector(a,Qn.y),u.addScaledVector(l,Qn.z),u}static isFrontFacing(e,t,n,i){return Hn.subVectors(n,t),Kn.subVectors(e,t),Hn.cross(Kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Hn.subVectors(this.c,this.b),Kn.subVectors(this.a,this.b),Hn.cross(Kn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return jt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return jt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return jt.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return jt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return jt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,l;$i.subVectors(i,n),Zi.subVectors(r,n),aa.subVectors(e,n);const u=$i.dot(aa),h=Zi.dot(aa);if(u<=0&&h<=0)return t.copy(n);la.subVectors(e,i);const p=$i.dot(la),m=Zi.dot(la);if(p>=0&&m<=p)return t.copy(i);const x=u*m-p*h;if(x<=0&&u>=0&&p<=0)return a=u/(u-p),t.copy(n).addScaledVector($i,a);ca.subVectors(e,r);const _=$i.dot(ca),M=Zi.dot(ca);if(M>=0&&_<=M)return t.copy(r);const S=_*h-u*M;if(S<=0&&h>=0&&M<=0)return l=h/(h-M),t.copy(n).addScaledVector(Zi,l);const C=p*M-_*m;if(C<=0&&m-p>=0&&_-M>=0)return vc.subVectors(r,i),l=(m-p)/(m-p+(_-M)),t.copy(i).addScaledVector(vc,l);const v=1/(C+S+x);return a=S*v,l=x*v,t.copy(n).addScaledVector($i,a).addScaledVector(Zi,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let dd=0;class on extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:dd++}),this.uuid=Gn(),this.name="",this.type="Material",this.fog=!0,this.blending=Zr,this.side=es,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=gu,this.blendDst=xu,this.blendEquation=cr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ca,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=td,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Xo,this.stencilZFail=Xo,this.stencilZPass=Xo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===mu;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Zr&&(n.blending=this.blending),this.side!==es&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const a=[];for(const l in r){const u=r[l];delete u.metadata,a.push(u)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}on.prototype.isMaterial=!0;class mo extends on{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ho,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}mo.prototype.isMeshBasicMaterial=!0;const Rt=new z,Is=new ve;class Xt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=ns,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new ke),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new ve),t[n++]=a.x,t[n++]=a.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new z),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Ct),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Is.fromBufferAttribute(this,t),Is.applyMatrix3(e),this.setXY(t,Is.x,Is.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Rt.fromBufferAttribute(this,t),Rt.applyMatrix3(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Rt.x=this.getX(t),Rt.y=this.getY(t),Rt.z=this.getZ(t),Rt.applyMatrix4(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rt.x=this.getX(t),Rt.y=this.getY(t),Rt.z=this.getZ(t),Rt.applyNormalMatrix(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rt.x=this.getX(t),Rt.y=this.getY(t),Rt.z=this.getZ(t),Rt.transformDirection(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ns&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}Xt.prototype.isBufferAttribute=!0;class wu extends Xt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Su extends Xt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class pd extends Xt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}pd.prototype.isFloat16BufferAttribute=!0;class Jt extends Xt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let md=0;const Ln=new Ke,ua=new Mt,Ki=new z,wn=new Un,kr=new Un,Yt=new z;class Ft extends Ui{constructor(){super(),Object.defineProperty(this,"id",{value:md++}),this.uuid=Gn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(_u(e)?Su:wu)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Qt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ln.makeRotationFromQuaternion(e),this.applyMatrix4(Ln),this}rotateX(e){return Ln.makeRotationX(e),this.applyMatrix4(Ln),this}rotateY(e){return Ln.makeRotationY(e),this.applyMatrix4(Ln),this}rotateZ(e){return Ln.makeRotationZ(e),this.applyMatrix4(Ln),this}translate(e,t,n){return Ln.makeTranslation(e,t,n),this.applyMatrix4(Ln),this}scale(e,t,n){return Ln.makeScale(e,t,n),this.applyMatrix4(Ln),this}lookAt(e){return ua.lookAt(e),ua.updateMatrix(),this.applyMatrix4(ua.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ki).negate(),this.translate(Ki.x,Ki.y,Ki.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Jt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Un);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new z(-1/0,-1/0,-1/0),new z(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];wn.setFromBufferAttribute(r),this.morphTargetsRelative?(Yt.addVectors(this.boundingBox.min,wn.min),this.boundingBox.expandByPoint(Yt),Yt.addVectors(this.boundingBox.max,wn.max),this.boundingBox.expandByPoint(Yt)):(this.boundingBox.expandByPoint(wn.min),this.boundingBox.expandByPoint(wn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new z,1/0);return}if(e){const n=this.boundingSphere.center;if(wn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const l=t[r];kr.setFromBufferAttribute(l),this.morphTargetsRelative?(Yt.addVectors(wn.min,kr.min),wn.expandByPoint(Yt),Yt.addVectors(wn.max,kr.max),wn.expandByPoint(Yt)):(wn.expandByPoint(kr.min),wn.expandByPoint(kr.max))}wn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)Yt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Yt));if(t)for(let r=0,a=t.length;r<a;r++){const l=t[r],u=this.morphTargetsRelative;for(let h=0,p=l.count;h<p;h++)Yt.fromBufferAttribute(l,h),u&&(Ki.fromBufferAttribute(e,h),Yt.add(Ki)),i=Math.max(i,n.distanceToSquared(Yt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,l=i.length/3;t.tangent===void 0&&this.setAttribute("tangent",new Xt(new Float32Array(4*l),4));const u=t.tangent.array,h=[],p=[];for(let ge=0;ge<l;ge++)h[ge]=new z,p[ge]=new z;const m=new z,x=new z,_=new z,M=new ve,S=new ve,C=new ve,v=new z,y=new z;function O(ge,A,k){m.fromArray(i,ge*3),x.fromArray(i,A*3),_.fromArray(i,k*3),M.fromArray(a,ge*2),S.fromArray(a,A*2),C.fromArray(a,k*2),x.sub(m),_.sub(m),S.sub(M),C.sub(M);const X=1/(S.x*C.y-C.x*S.y);isFinite(X)&&(v.copy(x).multiplyScalar(C.y).addScaledVector(_,-S.y).multiplyScalar(X),y.copy(_).multiplyScalar(S.x).addScaledVector(x,-C.x).multiplyScalar(X),h[ge].add(v),h[A].add(v),h[k].add(v),p[ge].add(y),p[A].add(y),p[k].add(y))}let P=this.groups;P.length===0&&(P=[{start:0,count:n.length}]);for(let ge=0,A=P.length;ge<A;++ge){const k=P[ge],X=k.start,J=k.count;for(let Z=X,K=X+J;Z<K;Z+=3)O(n[Z+0],n[Z+1],n[Z+2])}const D=new z,f=new z,W=new z,fe=new z;function Pe(ge){W.fromArray(r,ge*3),fe.copy(W);const A=h[ge];D.copy(A),D.sub(W.multiplyScalar(W.dot(A))).normalize(),f.crossVectors(fe,A);const X=f.dot(p[ge])<0?-1:1;u[ge*4]=D.x,u[ge*4+1]=D.y,u[ge*4+2]=D.z,u[ge*4+3]=X}for(let ge=0,A=P.length;ge<A;++ge){const k=P[ge],X=k.start,J=k.count;for(let Z=X,K=X+J;Z<K;Z+=3)Pe(n[Z+0]),Pe(n[Z+1]),Pe(n[Z+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Xt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let x=0,_=n.count;x<_;x++)n.setXYZ(x,0,0,0);const i=new z,r=new z,a=new z,l=new z,u=new z,h=new z,p=new z,m=new z;if(e)for(let x=0,_=e.count;x<_;x+=3){const M=e.getX(x+0),S=e.getX(x+1),C=e.getX(x+2);i.fromBufferAttribute(t,M),r.fromBufferAttribute(t,S),a.fromBufferAttribute(t,C),p.subVectors(a,r),m.subVectors(i,r),p.cross(m),l.fromBufferAttribute(n,M),u.fromBufferAttribute(n,S),h.fromBufferAttribute(n,C),l.add(p),u.add(p),h.add(p),n.setXYZ(M,l.x,l.y,l.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(C,h.x,h.y,h.z)}else for(let x=0,_=t.count;x<_;x+=3)i.fromBufferAttribute(t,x+0),r.fromBufferAttribute(t,x+1),a.fromBufferAttribute(t,x+2),p.subVectors(a,r),m.subVectors(i,r),p.cross(m),n.setXYZ(x+0,p.x,p.y,p.z),n.setXYZ(x+1,p.x,p.y,p.z),n.setXYZ(x+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const a=n[i].array,l=e.attributes[i],u=l.array,h=l.itemSize*t,p=Math.min(u.length,a.length-h);for(let m=0,x=h;m<p;m++,x++)a[x]=u[m]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Yt.fromBufferAttribute(e,t),Yt.normalize(),e.setXYZ(t,Yt.x,Yt.y,Yt.z)}toNonIndexed(){function e(l,u){const h=l.array,p=l.itemSize,m=l.normalized,x=new h.constructor(u.length*p);let _=0,M=0;for(let S=0,C=u.length;S<C;S++){l.isInterleavedBufferAttribute?_=u[S]*l.data.stride+l.offset:_=u[S]*p;for(let v=0;v<p;v++)x[M++]=h[_++]}return new Xt(x,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ft,n=this.index.array,i=this.attributes;for(const l in i){const u=i[l],h=e(u,n);t.setAttribute(l,h)}const r=this.morphAttributes;for(const l in r){const u=[],h=r[l];for(let p=0,m=h.length;p<m;p++){const x=h[p],_=e(x,n);u.push(_)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let l=0,u=a.length;l<u;l++){const h=a[l];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],p=[];for(let m=0,x=h.length;m<x;m++){const _=h[m];p.push(_.toJSON(e.data))}p.length>0&&(i[u]=p,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const p=i[h];this.setAttribute(h,p.clone(t))}const r=e.morphAttributes;for(const h in r){const p=[],m=r[h];for(let x=0,_=m.length;x<_;x++)p.push(m[x].clone(t));this.morphAttributes[h]=p}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,p=a.length;h<p;h++){const m=a[h];this.addGroup(m.start,m.count,m.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ft.prototype.isBufferGeometry=!0;const yc=new Ke,Qi=new Sr,ha=new wr,fi=new z,di=new z,pi=new z,fa=new z,da=new z,pa=new z,Ns=new z,Fs=new z,Bs=new z,zs=new ve,Os=new ve,Hs=new ve,ma=new z,Us=new z;class cn extends Mt{constructor(e=new Ft,t=new mo){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),ha.copy(n.boundingSphere),ha.applyMatrix4(r),e.ray.intersectsSphere(ha)===!1)||(yc.copy(r).invert(),Qi.copy(e.ray).applyMatrix4(yc),n.boundingBox!==null&&Qi.intersectsBox(n.boundingBox)===!1))return;let a;if(n.isBufferGeometry){const l=n.index,u=n.attributes.position,h=n.morphAttributes.position,p=n.morphTargetsRelative,m=n.attributes.uv,x=n.attributes.uv2,_=n.groups,M=n.drawRange;if(l!==null)if(Array.isArray(i))for(let S=0,C=_.length;S<C;S++){const v=_[S],y=i[v.materialIndex],O=Math.max(v.start,M.start),P=Math.min(l.count,Math.min(v.start+v.count,M.start+M.count));for(let D=O,f=P;D<f;D+=3){const W=l.getX(D),fe=l.getX(D+1),Pe=l.getX(D+2);a=ks(this,y,e,Qi,u,h,p,m,x,W,fe,Pe),a&&(a.faceIndex=Math.floor(D/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const S=Math.max(0,M.start),C=Math.min(l.count,M.start+M.count);for(let v=S,y=C;v<y;v+=3){const O=l.getX(v),P=l.getX(v+1),D=l.getX(v+2);a=ks(this,i,e,Qi,u,h,p,m,x,O,P,D),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}else if(u!==void 0)if(Array.isArray(i))for(let S=0,C=_.length;S<C;S++){const v=_[S],y=i[v.materialIndex],O=Math.max(v.start,M.start),P=Math.min(u.count,Math.min(v.start+v.count,M.start+M.count));for(let D=O,f=P;D<f;D+=3){const W=D,fe=D+1,Pe=D+2;a=ks(this,y,e,Qi,u,h,p,m,x,W,fe,Pe),a&&(a.faceIndex=Math.floor(D/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const S=Math.max(0,M.start),C=Math.min(u.count,M.start+M.count);for(let v=S,y=C;v<y;v+=3){const O=v,P=v+1,D=v+2;a=ks(this,i,e,Qi,u,h,p,m,x,O,P,D),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}cn.prototype.isMesh=!0;function gd(s,e,t,n,i,r,a,l){let u;if(e.side===Wt?u=n.intersectTriangle(a,r,i,!0,l):u=n.intersectTriangle(i,r,a,e.side!==vr,l),u===null)return null;Us.copy(l),Us.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(Us);return h<t.near||h>t.far?null:{distance:h,point:Us.clone(),object:s}}function ks(s,e,t,n,i,r,a,l,u,h,p,m){fi.fromBufferAttribute(i,h),di.fromBufferAttribute(i,p),pi.fromBufferAttribute(i,m);const x=s.morphTargetInfluences;if(r&&x){Ns.set(0,0,0),Fs.set(0,0,0),Bs.set(0,0,0);for(let M=0,S=r.length;M<S;M++){const C=x[M],v=r[M];C!==0&&(fa.fromBufferAttribute(v,h),da.fromBufferAttribute(v,p),pa.fromBufferAttribute(v,m),a?(Ns.addScaledVector(fa,C),Fs.addScaledVector(da,C),Bs.addScaledVector(pa,C)):(Ns.addScaledVector(fa.sub(fi),C),Fs.addScaledVector(da.sub(di),C),Bs.addScaledVector(pa.sub(pi),C)))}fi.add(Ns),di.add(Fs),pi.add(Bs)}s.isSkinnedMesh&&(s.boneTransform(h,fi),s.boneTransform(p,di),s.boneTransform(m,pi));const _=gd(s,e,t,n,fi,di,pi,ma);if(_){l&&(zs.fromBufferAttribute(l,h),Os.fromBufferAttribute(l,p),Hs.fromBufferAttribute(l,m),_.uv=jt.getUV(ma,fi,di,pi,zs,Os,Hs,new ve)),u&&(zs.fromBufferAttribute(u,h),Os.fromBufferAttribute(u,p),Hs.fromBufferAttribute(u,m),_.uv2=jt.getUV(ma,fi,di,pi,zs,Os,Hs,new ve));const M={a:h,b:p,c:m,normal:new z,materialIndex:0};jt.getNormal(fi,di,pi,M.normal),_.face=M}return _}class Er extends Ft{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const l=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const u=[],h=[],p=[],m=[];let x=0,_=0;M("z","y","x",-1,-1,n,t,e,a,r,0),M("z","y","x",1,-1,n,t,-e,a,r,1),M("x","z","y",1,1,e,n,t,i,a,2),M("x","z","y",1,-1,e,n,-t,i,a,3),M("x","y","z",1,-1,e,t,n,i,r,4),M("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Jt(h,3)),this.setAttribute("normal",new Jt(p,3)),this.setAttribute("uv",new Jt(m,2));function M(S,C,v,y,O,P,D,f,W,fe,Pe){const ge=P/W,A=D/fe,k=P/2,X=D/2,J=f/2,Z=W+1,K=fe+1;let oe=0,xe=0;const Ce=new z;for(let ae=0;ae<K;ae++){const ce=ae*A-X;for(let Le=0;Le<Z;Le++){const Ie=Le*ge-k;Ce[S]=Ie*y,Ce[C]=ce*O,Ce[v]=J,h.push(Ce.x,Ce.y,Ce.z),Ce[S]=0,Ce[C]=0,Ce[v]=f>0?1:-1,p.push(Ce.x,Ce.y,Ce.z),m.push(Le/W),m.push(1-ae/fe),oe+=1}}for(let ae=0;ae<fe;ae++)for(let ce=0;ce<W;ce++){const Le=x+ce+Z*ae,Ie=x+ce+Z*(ae+1),He=x+(ce+1)+Z*(ae+1),ie=x+(ce+1)+Z*ae;u.push(Le,Ie,ie),u.push(Ie,He,ie),xe+=6}l.addGroup(_,xe,Pe),_+=xe,x+=oe}}static fromJSON(e){return new Er(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function _r(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function nn(s){const e={};for(let t=0;t<s.length;t++){const n=_r(s[t]);for(const i in n)e[i]=n[i]}return e}const xd={clone:_r,merge:nn};var vd=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Hi extends on{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=vd,this.fragmentShader=yd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=_r(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Hi.prototype.isShaderMaterial=!0;class ja extends Mt{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}ja.prototype.isCamera=!0;class pn extends ja{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Na*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Yo*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Na*2*Math.atan(Math.tan(Yo*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Yo*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;r+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const l=this.filmOffset;l!==0&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}pn.prototype.isPerspectiveCamera=!0;const er=90,tr=1;class Xa extends Mt{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new pn(er,tr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new z(1,0,0)),this.add(i);const r=new pn(er,tr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new z(-1,0,0)),this.add(r);const a=new pn(er,tr,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new z(0,1,0)),this.add(a);const l=new pn(er,tr,e,t);l.layers=this.layers,l.up.set(0,0,-1),l.lookAt(new z(0,-1,0)),this.add(l);const u=new pn(er,tr,e,t);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new z(0,0,1)),this.add(u);const h=new pn(er,tr,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new z(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,l,u,h]=this.children,p=e.xr.enabled,m=e.getRenderTarget();e.xr.enabled=!1;const x=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=x,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(m),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class go extends $t{constructor(e,t,n,i,r,a,l,u,h,p){e=e!==void 0?e:[],t=t!==void 0?t:ls,super(e,t,n,i,r,a,l,u,h,p),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}go.prototype.isCubeTexture=!0;class Tu extends Rn{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new go(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=ln,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Er(5,5,5),r=new Hi({name:"CubemapFromEquirect",uniforms:_r(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Wt,blending:gi});r.uniforms.tEquirect.value=t;const a=new cn(i,r),l=t.minFilter;return t.minFilter===po&&(t.minFilter=rn),new Xa(1,10,this).update(e,a),t.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}Tu.prototype.isWebGLCubeRenderTarget=!0;const ga=new z,_d=new z,bd=new Qt;class ti{constructor(e=new z(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ga.subVectors(n,t).cross(_d.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ga),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||bd.getNormalMatrix(e),i=this.coplanarPoint(ga).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}ti.prototype.isPlane=!0;const nr=new wr,Vs=new z;class xo{constructor(e=new ti,t=new ti,n=new ti,i=new ti,r=new ti,a=new ti){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(r),l[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],l=n[3],u=n[4],h=n[5],p=n[6],m=n[7],x=n[8],_=n[9],M=n[10],S=n[11],C=n[12],v=n[13],y=n[14],O=n[15];return t[0].setComponents(l-i,m-u,S-x,O-C).normalize(),t[1].setComponents(l+i,m+u,S+x,O+C).normalize(),t[2].setComponents(l+r,m+h,S+_,O+v).normalize(),t[3].setComponents(l-r,m-h,S-_,O-v).normalize(),t[4].setComponents(l-a,m-p,S-M,O-y).normalize(),t[5].setComponents(l+a,m+p,S+M,O+y).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),nr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(nr)}intersectsSprite(e){return nr.center.set(0,0,0),nr.radius=.7071067811865476,nr.applyMatrix4(e.matrixWorld),this.intersectsSphere(nr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Vs.x=i.normal.x>0?e.max.x:e.min.x,Vs.y=i.normal.y>0?e.max.y:e.min.y,Vs.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Vs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Eu(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function Md(s,e){const t=e.isWebGL2,n=new WeakMap;function i(h,p){const m=h.array,x=h.usage,_=s.createBuffer();s.bindBuffer(p,_),s.bufferData(p,m,x),h.onUploadCallback();let M=5126;return m instanceof Float32Array?M=5126:m instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):m instanceof Uint16Array?h.isFloat16BufferAttribute?t?M=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):M=5123:m instanceof Int16Array?M=5122:m instanceof Uint32Array?M=5125:m instanceof Int32Array?M=5124:m instanceof Int8Array?M=5120:(m instanceof Uint8Array||m instanceof Uint8ClampedArray)&&(M=5121),{buffer:_,type:M,bytesPerElement:m.BYTES_PER_ELEMENT,version:h.version}}function r(h,p,m){const x=p.array,_=p.updateRange;s.bindBuffer(m,h),_.count===-1?s.bufferSubData(m,0,x):(t?s.bufferSubData(m,_.offset*x.BYTES_PER_ELEMENT,x,_.offset,_.count):s.bufferSubData(m,_.offset*x.BYTES_PER_ELEMENT,x.subarray(_.offset,_.offset+_.count)),_.count=-1)}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function l(h){h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p&&(s.deleteBuffer(p.buffer),n.delete(h))}function u(h,p){if(h.isGLBufferAttribute){const x=n.get(h);(!x||x.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const m=n.get(h);m===void 0?n.set(h,i(h,p)):m.version<h.version&&(r(m.buffer,h,p),m.version=h.version)}return{get:a,remove:l,update:u}}class Ya extends Ft{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,l=Math.floor(n),u=Math.floor(i),h=l+1,p=u+1,m=e/l,x=t/u,_=[],M=[],S=[],C=[];for(let v=0;v<p;v++){const y=v*x-a;for(let O=0;O<h;O++){const P=O*m-r;M.push(P,-y,0),S.push(0,0,1),C.push(O/l),C.push(1-v/u)}}for(let v=0;v<u;v++)for(let y=0;y<l;y++){const O=y+h*v,P=y+h*(v+1),D=y+1+h*(v+1),f=y+1+h*v;_.push(O,P,f),_.push(P,D,f)}this.setIndex(_),this.setAttribute("position",new Jt(M,3)),this.setAttribute("normal",new Jt(S,3)),this.setAttribute("uv",new Jt(C,2))}static fromJSON(e){return new Ya(e.width,e.height,e.widthSegments,e.heightSegments)}}var wd=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Sd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Td=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Ed=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Ad=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Cd=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Ld="vec3 transformed = vec3( position );",Rd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Pd=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Dd=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Id=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Nd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Fd=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Bd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zd=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Od=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Hd=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Ud=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,kd=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Vd=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Gd=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Wd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,qd=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,jd=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Xd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Yd="gl_FragColor = linearToOutputTexel( gl_FragColor );",Jd=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,$d=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Zd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Kd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Qd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ep=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,tp=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,np=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,ip=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,rp=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,sp=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,op=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,ap=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lp=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,cp=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,up=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,hp=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,fp=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,dp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,pp=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,mp=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,gp=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,xp=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,vp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,yp=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_p=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,bp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Mp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,wp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Sp=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Tp=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Ep=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ap=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Cp=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Lp=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Rp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Pp=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Dp=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Ip=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Np=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Fp=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Bp=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,zp=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Op=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Hp=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Up=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,kp=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Vp=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Gp=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Wp=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,qp=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,jp=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Xp=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Yp=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Jp=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,$p=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Zp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Kp=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Qp=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,em=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,tm=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,nm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,im=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,rm=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,sm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,om=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,am=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,lm=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,cm=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,um=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,hm=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,fm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,dm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,pm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,mm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,gm=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const xm=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,vm=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ym=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_m=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bm=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Mm=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,wm=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Sm=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Tm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Em=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Am=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Cm=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Lm=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Rm=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pm=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dm=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Im=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Nm=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fm=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Bm=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,zm=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Om=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hm=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Um=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,km=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Vm=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gm=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Wm=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qm=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jm=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Xm=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ym=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ut={alphamap_fragment:wd,alphamap_pars_fragment:Sd,alphatest_fragment:Td,alphatest_pars_fragment:Ed,aomap_fragment:Ad,aomap_pars_fragment:Cd,begin_vertex:Ld,beginnormal_vertex:Rd,bsdfs:Pd,bumpmap_pars_fragment:Dd,clipping_planes_fragment:Id,clipping_planes_pars_fragment:Nd,clipping_planes_pars_vertex:Fd,clipping_planes_vertex:Bd,color_fragment:zd,color_pars_fragment:Od,color_pars_vertex:Hd,color_vertex:Ud,common:kd,cube_uv_reflection_fragment:Vd,defaultnormal_vertex:Gd,displacementmap_pars_vertex:Wd,displacementmap_vertex:qd,emissivemap_fragment:jd,emissivemap_pars_fragment:Xd,encodings_fragment:Yd,encodings_pars_fragment:Jd,envmap_fragment:$d,envmap_common_pars_fragment:Zd,envmap_pars_fragment:Kd,envmap_pars_vertex:Qd,envmap_physical_pars_fragment:up,envmap_vertex:ep,fog_vertex:tp,fog_pars_vertex:np,fog_fragment:ip,fog_pars_fragment:rp,gradientmap_pars_fragment:sp,lightmap_fragment:op,lightmap_pars_fragment:ap,lights_lambert_vertex:lp,lights_pars_begin:cp,lights_toon_fragment:hp,lights_toon_pars_fragment:fp,lights_phong_fragment:dp,lights_phong_pars_fragment:pp,lights_physical_fragment:mp,lights_physical_pars_fragment:gp,lights_fragment_begin:xp,lights_fragment_maps:vp,lights_fragment_end:yp,logdepthbuf_fragment:_p,logdepthbuf_pars_fragment:bp,logdepthbuf_pars_vertex:Mp,logdepthbuf_vertex:wp,map_fragment:Sp,map_pars_fragment:Tp,map_particle_fragment:Ep,map_particle_pars_fragment:Ap,metalnessmap_fragment:Cp,metalnessmap_pars_fragment:Lp,morphnormal_vertex:Rp,morphtarget_pars_vertex:Pp,morphtarget_vertex:Dp,normal_fragment_begin:Ip,normal_fragment_maps:Np,normal_pars_fragment:Fp,normal_pars_vertex:Bp,normal_vertex:zp,normalmap_pars_fragment:Op,clearcoat_normal_fragment_begin:Hp,clearcoat_normal_fragment_maps:Up,clearcoat_pars_fragment:kp,output_fragment:Vp,packing:Gp,premultiplied_alpha_fragment:Wp,project_vertex:qp,dithering_fragment:jp,dithering_pars_fragment:Xp,roughnessmap_fragment:Yp,roughnessmap_pars_fragment:Jp,shadowmap_pars_fragment:$p,shadowmap_pars_vertex:Zp,shadowmap_vertex:Kp,shadowmask_pars_fragment:Qp,skinbase_vertex:em,skinning_pars_vertex:tm,skinning_vertex:nm,skinnormal_vertex:im,specularmap_fragment:rm,specularmap_pars_fragment:sm,tonemapping_fragment:om,tonemapping_pars_fragment:am,transmission_fragment:lm,transmission_pars_fragment:cm,uv_pars_fragment:um,uv_pars_vertex:hm,uv_vertex:fm,uv2_pars_fragment:dm,uv2_pars_vertex:pm,uv2_vertex:mm,worldpos_vertex:gm,background_vert:xm,background_frag:vm,cube_vert:ym,cube_frag:_m,depth_vert:bm,depth_frag:Mm,distanceRGBA_vert:wm,distanceRGBA_frag:Sm,equirect_vert:Tm,equirect_frag:Em,linedashed_vert:Am,linedashed_frag:Cm,meshbasic_vert:Lm,meshbasic_frag:Rm,meshlambert_vert:Pm,meshlambert_frag:Dm,meshmatcap_vert:Im,meshmatcap_frag:Nm,meshnormal_vert:Fm,meshnormal_frag:Bm,meshphong_vert:zm,meshphong_frag:Om,meshphysical_vert:Hm,meshphysical_frag:Um,meshtoon_vert:km,meshtoon_frag:Vm,points_vert:Gm,points_frag:Wm,shadow_vert:qm,shadow_frag:jm,sprite_vert:Xm,sprite_frag:Ym},we={common:{diffuse:{value:new ke(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Qt},uv2Transform:{value:new Qt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ke(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ke(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Qt}},sprite:{diffuse:{value:new ke(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Qt}}},Vn={basic:{uniforms:nn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:nn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.fog,we.lights,{emissive:{value:new ke(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:nn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new ke(0)},specular:{value:new ke(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:nn([we.common,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.roughnessmap,we.metalnessmap,we.fog,we.lights,{emissive:{value:new ke(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:nn([we.common,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.gradientmap,we.fog,we.lights,{emissive:{value:new ke(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:nn([we.common,we.bumpmap,we.normalmap,we.displacementmap,we.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:nn([we.points,we.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:nn([we.common,we.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:nn([we.common,we.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:nn([we.common,we.bumpmap,we.normalmap,we.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:nn([we.sprite,we.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new Qt},t2D:{value:null}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},cube:{uniforms:nn([we.envmap,{opacity:{value:1}}]),vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:nn([we.common,we.displacementmap,{referencePosition:{value:new z},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:nn([we.lights,we.fog,{color:{value:new ke(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};Vn.physical={uniforms:nn([Vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ve(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new ke(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ke(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ke(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};function Jm(s,e,t,n,i,r){const a=new ke(0);let l=i===!0?0:1,u,h,p=null,m=0,x=null;function _(S,C){let v=!1,y=C.isScene===!0?C.background:null;y&&y.isTexture&&(y=e.get(y));const O=s.xr,P=O.getSession&&O.getSession();P&&P.environmentBlendMode==="additive"&&(y=null),y===null?M(a,l):y&&y.isColor&&(M(y,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),y&&(y.isCubeTexture||y.mapping===fo)?(h===void 0&&(h=new cn(new Er(1,1,1),new Hi({name:"BackgroundCubeMaterial",uniforms:_r(Vn.cube.uniforms),vertexShader:Vn.cube.vertexShader,fragmentShader:Vn.cube.fragmentShader,side:Wt,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(D,f,W){this.matrixWorld.copyPosition(W.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=y,h.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,(p!==y||m!==y.version||x!==s.toneMapping)&&(h.material.needsUpdate=!0,p=y,m=y.version,x=s.toneMapping),S.unshift(h,h.geometry,h.material,0,0,null)):y&&y.isTexture&&(u===void 0&&(u=new cn(new Ya(2,2),new Hi({name:"BackgroundMaterial",uniforms:_r(Vn.background.uniforms),vertexShader:Vn.background.vertexShader,fragmentShader:Vn.background.fragmentShader,side:es,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(u)),u.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),u.material.uniforms.uvTransform.value.copy(y.matrix),(p!==y||m!==y.version||x!==s.toneMapping)&&(u.material.needsUpdate=!0,p=y,m=y.version,x=s.toneMapping),S.unshift(u,u.geometry,u.material,0,0,null))}function M(S,C){t.buffers.color.setClear(S.r,S.g,S.b,C,r)}return{getClearColor:function(){return a},setClearColor:function(S,C=1){a.set(S),l=C,M(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(S){l=S,M(a,l)},render:_}}function $m(s,e,t,n){const i=s.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,l={},u=S(null);let h=u;function p(X,J,Z,K,oe){let xe=!1;if(a){const Ce=M(K,Z,J);h!==Ce&&(h=Ce,x(h.object)),xe=C(K,oe),xe&&v(K,oe)}else{const Ce=J.wireframe===!0;(h.geometry!==K.id||h.program!==Z.id||h.wireframe!==Ce)&&(h.geometry=K.id,h.program=Z.id,h.wireframe=Ce,xe=!0)}X.isInstancedMesh===!0&&(xe=!0),oe!==null&&t.update(oe,34963),xe&&(W(X,J,Z,K),oe!==null&&s.bindBuffer(34963,t.get(oe).buffer))}function m(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function x(X){return n.isWebGL2?s.bindVertexArray(X):r.bindVertexArrayOES(X)}function _(X){return n.isWebGL2?s.deleteVertexArray(X):r.deleteVertexArrayOES(X)}function M(X,J,Z){const K=Z.wireframe===!0;let oe=l[X.id];oe===void 0&&(oe={},l[X.id]=oe);let xe=oe[J.id];xe===void 0&&(xe={},oe[J.id]=xe);let Ce=xe[K];return Ce===void 0&&(Ce=S(m()),xe[K]=Ce),Ce}function S(X){const J=[],Z=[],K=[];for(let oe=0;oe<i;oe++)J[oe]=0,Z[oe]=0,K[oe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:J,enabledAttributes:Z,attributeDivisors:K,object:X,attributes:{},index:null}}function C(X,J){const Z=h.attributes,K=X.attributes;let oe=0;for(const xe in K){const Ce=Z[xe],ae=K[xe];if(Ce===void 0||Ce.attribute!==ae||Ce.data!==ae.data)return!0;oe++}return h.attributesNum!==oe||h.index!==J}function v(X,J){const Z={},K=X.attributes;let oe=0;for(const xe in K){const Ce=K[xe],ae={};ae.attribute=Ce,Ce.data&&(ae.data=Ce.data),Z[xe]=ae,oe++}h.attributes=Z,h.attributesNum=oe,h.index=J}function y(){const X=h.newAttributes;for(let J=0,Z=X.length;J<Z;J++)X[J]=0}function O(X){P(X,0)}function P(X,J){const Z=h.newAttributes,K=h.enabledAttributes,oe=h.attributeDivisors;Z[X]=1,K[X]===0&&(s.enableVertexAttribArray(X),K[X]=1),oe[X]!==J&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](X,J),oe[X]=J)}function D(){const X=h.newAttributes,J=h.enabledAttributes;for(let Z=0,K=J.length;Z<K;Z++)J[Z]!==X[Z]&&(s.disableVertexAttribArray(Z),J[Z]=0)}function f(X,J,Z,K,oe,xe){n.isWebGL2===!0&&(Z===5124||Z===5125)?s.vertexAttribIPointer(X,J,Z,oe,xe):s.vertexAttribPointer(X,J,Z,K,oe,xe)}function W(X,J,Z,K){if(n.isWebGL2===!1&&(X.isInstancedMesh||K.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const oe=K.attributes,xe=Z.getAttributes(),Ce=J.defaultAttributeValues;for(const ae in xe){const ce=xe[ae];if(ce.location>=0){let Le=oe[ae];if(Le===void 0&&(ae==="instanceMatrix"&&X.instanceMatrix&&(Le=X.instanceMatrix),ae==="instanceColor"&&X.instanceColor&&(Le=X.instanceColor)),Le!==void 0){const Ie=Le.normalized,He=Le.itemSize,ie=t.get(Le);if(ie===void 0)continue;const mt=ie.buffer,ze=ie.type,Xe=ie.bytesPerElement;if(Le.isInterleavedBufferAttribute){const Se=Le.data,at=Se.stride,Qe=Le.offset;if(Se&&Se.isInstancedInterleavedBuffer){for(let de=0;de<ce.locationSize;de++)P(ce.location+de,Se.meshPerAttribute);X.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=Se.meshPerAttribute*Se.count)}else for(let de=0;de<ce.locationSize;de++)O(ce.location+de);s.bindBuffer(34962,mt);for(let de=0;de<ce.locationSize;de++)f(ce.location+de,He/ce.locationSize,ze,Ie,at*Xe,(Qe+He/ce.locationSize*de)*Xe)}else{if(Le.isInstancedBufferAttribute){for(let Se=0;Se<ce.locationSize;Se++)P(ce.location+Se,Le.meshPerAttribute);X.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=Le.meshPerAttribute*Le.count)}else for(let Se=0;Se<ce.locationSize;Se++)O(ce.location+Se);s.bindBuffer(34962,mt);for(let Se=0;Se<ce.locationSize;Se++)f(ce.location+Se,He/ce.locationSize,ze,Ie,He*Xe,He/ce.locationSize*Se*Xe)}}else if(Ce!==void 0){const Ie=Ce[ae];if(Ie!==void 0)switch(Ie.length){case 2:s.vertexAttrib2fv(ce.location,Ie);break;case 3:s.vertexAttrib3fv(ce.location,Ie);break;case 4:s.vertexAttrib4fv(ce.location,Ie);break;default:s.vertexAttrib1fv(ce.location,Ie)}}}}D()}function fe(){A();for(const X in l){const J=l[X];for(const Z in J){const K=J[Z];for(const oe in K)_(K[oe].object),delete K[oe];delete J[Z]}delete l[X]}}function Pe(X){if(l[X.id]===void 0)return;const J=l[X.id];for(const Z in J){const K=J[Z];for(const oe in K)_(K[oe].object),delete K[oe];delete J[Z]}delete l[X.id]}function ge(X){for(const J in l){const Z=l[J];if(Z[X.id]===void 0)continue;const K=Z[X.id];for(const oe in K)_(K[oe].object),delete K[oe];delete Z[X.id]}}function A(){k(),h!==u&&(h=u,x(h.object))}function k(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:A,resetDefaultState:k,dispose:fe,releaseStatesOfGeometry:Pe,releaseStatesOfProgram:ge,initAttributes:y,enableAttribute:O,disableUnusedAttributes:D}}function Zm(s,e,t,n){const i=n.isWebGL2;let r;function a(h){r=h}function l(h,p){s.drawArrays(r,h,p),t.update(p,r,1)}function u(h,p,m){if(m===0)return;let x,_;if(i)x=s,_="drawArraysInstanced";else if(x=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",x===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[_](r,h,p,m),t.update(p,r,m)}this.setMode=a,this.render=l,this.renderInstances=u}function Km(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const W=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(W.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(W){if(W==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";W="mediump"}return W==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let l=t.precision!==void 0?t.precision:"highp";const u=r(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=a||e.has("WEBGL_draw_buffers"),p=t.logarithmicDepthBuffer===!0,m=s.getParameter(34930),x=s.getParameter(35660),_=s.getParameter(3379),M=s.getParameter(34076),S=s.getParameter(34921),C=s.getParameter(36347),v=s.getParameter(36348),y=s.getParameter(36349),O=x>0,P=a||e.has("OES_texture_float"),D=O&&P,f=a?s.getParameter(36183):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:l,logarithmicDepthBuffer:p,maxTextures:m,maxVertexTextures:x,maxTextureSize:_,maxCubemapSize:M,maxAttributes:S,maxVertexUniforms:C,maxVaryings:v,maxFragmentUniforms:y,vertexTextures:O,floatFragmentTextures:P,floatVertexTextures:D,maxSamples:f}}function Qm(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new ti,l=new Qt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,x,_){const M=m.length!==0||x||n!==0||i;return i=x,t=p(m,_,0),n=m.length,M},this.beginShadows=function(){r=!0,p(null)},this.endShadows=function(){r=!1,h()},this.setState=function(m,x,_){const M=m.clippingPlanes,S=m.clipIntersection,C=m.clipShadows,v=s.get(m);if(!i||M===null||M.length===0||r&&!C)r?p(null):h();else{const y=r?0:n,O=y*4;let P=v.clippingState||null;u.value=P,P=p(M,x,O,_);for(let D=0;D!==O;++D)P[D]=t[D];v.clippingState=P,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=y}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function p(m,x,_,M){const S=m!==null?m.length:0;let C=null;if(S!==0){if(C=u.value,M!==!0||C===null){const v=_+S*4,y=x.matrixWorldInverse;l.getNormalMatrix(y),(C===null||C.length<v)&&(C=new Float32Array(v));for(let O=0,P=_;O!==S;++O,P+=4)a.copy(m[O]).applyMatrix4(y,l),a.normal.toArray(C,P),C[P+3]=a.constant}u.value=C,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,C}}function eg(s){let e=new WeakMap;function t(a,l){return l===La?a.mapping=ls:l===Ra&&(a.mapping=cs),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const l=a.mapping;if(l===La||l===Ra)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new Tu(u.height/2);return h.fromEquirectangularTexture(s,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const l=a.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class vo extends ja{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,l=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,l-=p*this.view.offsetY,u=l-p*this.view.height}this.projectionMatrix.makeOrthographic(r,a,l,u,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}vo.prototype.isOrthographicCamera=!0;class yo extends Hi{constructor(e){super(e),this.type="RawShaderMaterial"}}yo.prototype.isRawShaderMaterial=!0;const xr=4,yi=8,kn=Math.pow(2,yi),Au=[.125,.215,.35,.446,.526,.582],Cu=yi-xr+1+Au.length,ir=20,xa=new vo,{_lodPlanes:Vr,_sizeLods:_c,_sigmas:Gs}=tg(),bc=new ke;let va=null;const Bi=(1+Math.sqrt(5))/2,rr=1/Bi,Mc=[new z(1,1,1),new z(-1,1,1),new z(1,1,-1),new z(-1,1,-1),new z(0,Bi,rr),new z(0,Bi,-rr),new z(rr,0,Bi),new z(-rr,0,Bi),new z(Bi,rr,0),new z(-Bi,rr,0)];class wc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=ng(ir),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){va=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=Ec(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=Tc(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<Vr.length;e++)Vr[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(va),e.scissorTest=!1,Ws(e,0,0,e.width,e.height)}_fromTexture(e,t){va=this._renderer.getRenderTarget();const n=t||this._allocateTargets(e);return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(e){const t={magFilter:rn,minFilter:rn,generateMipmaps:!1,type:pr,format:ln,encoding:Mi,depthBuffer:!1},n=Sc(t);return n.depthBuffer=!e,this._pingPongRenderTarget===null&&(this._pingPongRenderTarget=Sc(t)),n}_compileMaterial(e){const t=new cn(Vr[0],e);this._renderer.compile(t,xa)}_sceneToCubeUV(e,t,n,i){const l=new pn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,x=p.toneMapping;p.getClearColor(bc),p.toneMapping=xi,p.autoClear=!1;const _=new mo({name:"PMREM.Background",side:Wt,depthWrite:!1,depthTest:!1}),M=new cn(new Er,_);let S=!1;const C=e.background;C?C.isColor&&(_.color.copy(C),e.background=null,S=!0):(_.color.copy(bc),S=!0);for(let v=0;v<6;v++){const y=v%3;y===0?(l.up.set(0,u[v],0),l.lookAt(h[v],0,0)):y===1?(l.up.set(0,0,u[v]),l.lookAt(0,h[v],0)):(l.up.set(0,u[v],0),l.lookAt(0,0,h[v])),Ws(i,y*kn,v>2?kn:0,kn,kn),p.setRenderTarget(i),S&&p.render(M,l),p.render(e,l)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=x,p.autoClear=m,e.background=C}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ls||e.mapping===cs;i?(this._cubemapShader===null&&(this._cubemapShader=Ec()),this._cubemapShader.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectShader===null&&(this._equirectShader=Tc());const r=i?this._cubemapShader:this._equirectShader,a=new cn(Vr[0],r),l=r.uniforms;l.envMap.value=e,i||l.texelSize.value.set(1/e.image.width,1/e.image.height),Ws(t,0,0,3*kn,2*kn),n.setRenderTarget(t),n.render(a,xa)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<Cu;i++){const r=Math.sqrt(Gs[i]*Gs[i]-Gs[i-1]*Gs[i-1]),a=Mc[(i-1)%Mc.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,l){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new cn(Vr[i],h),x=h.uniforms,_=_c[n]-1,M=isFinite(r)?Math.PI/(2*_):2*Math.PI/(2*ir-1),S=r/M,C=isFinite(r)?1+Math.floor(p*S):ir;C>ir&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${C} samples when the maximum is set to ${ir}`);const v=[];let y=0;for(let f=0;f<ir;++f){const W=f/S,fe=Math.exp(-W*W/2);v.push(fe),f===0?y+=fe:f<C&&(y+=2*fe)}for(let f=0;f<v.length;f++)v[f]=v[f]/y;x.envMap.value=e.texture,x.samples.value=C,x.weights.value=v,x.latitudinal.value=a==="latitudinal",l&&(x.poleAxis.value=l),x.dTheta.value=M,x.mipInt.value=yi-n;const O=_c[i],P=3*Math.max(0,kn-2*O),D=(i===0?0:2*kn)+2*O*(i>yi-xr?i-yi+xr:0);Ws(t,P,D,3*O,2*O),u.setRenderTarget(t),u.render(m,xa)}}function tg(){const s=[],e=[],t=[];let n=yi;for(let i=0;i<Cu;i++){const r=Math.pow(2,n);e.push(r);let a=1/r;i>yi-xr?a=Au[i-yi+xr-1]:i===0&&(a=0),t.push(a);const l=1/(r-1),u=-l/2,h=1+l/2,p=[u,u,h,u,h,h,u,u,h,h,u,h],m=6,x=6,_=3,M=2,S=1,C=new Float32Array(_*x*m),v=new Float32Array(M*x*m),y=new Float32Array(S*x*m);for(let P=0;P<m;P++){const D=P%3*2/3-1,f=P>2?0:-1,W=[D,f,0,D+2/3,f,0,D+2/3,f+1,0,D,f,0,D+2/3,f+1,0,D,f+1,0];C.set(W,_*x*P),v.set(p,M*x*P);const fe=[P,P,P,P,P,P];y.set(fe,S*x*P)}const O=new Ft;O.setAttribute("position",new Xt(C,_)),O.setAttribute("uv",new Xt(v,M)),O.setAttribute("faceIndex",new Xt(y,S)),s.push(O),n>xr&&n--}return{_lodPlanes:s,_sizeLods:e,_sigmas:t}}function Sc(s){const e=new Rn(3*kn,3*kn,s);return e.texture.mapping=fo,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Ws(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function ng(s){const e=new Float32Array(s),t=new z(0,1,0);return new yo({name:"SphericalGaussianBlur",defines:{n:s},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t}},vertexShader:Ja(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Tc(){const s=new ve(1,1);return new yo({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:s}},vertexShader:Ja(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = texture2D ( envMap, uv ).rgb;
				uv.x += texelSize.x;
				vec3 tr = texture2D ( envMap, uv ).rgb;
				uv.y += texelSize.y;
				vec3 br = texture2D ( envMap, uv ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = texture2D ( envMap, uv ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Ec(){return new yo({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ja(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:gi,depthTest:!1,depthWrite:!1})}function Ja(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ig(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const u=l.mapping,h=u===La||u===Ra,p=u===ls||u===cs;if(h||p)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let m=e.get(l);return t===null&&(t=new wc(s)),m=h?t.fromEquirectangular(l,m):t.fromCubemap(l,m),e.set(l,m),m.texture}else{if(e.has(l))return e.get(l).texture;{const m=l.image;if(h&&m&&m.height>0||p&&m&&i(m)){t===null&&(t=new wc(s));const x=h?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,x),l.addEventListener("dispose",r),x.texture}else return null}}}return l}function i(l){let u=0;const h=6;for(let p=0;p<h;p++)l[p]!==void 0&&u++;return u===h}function r(l){const u=l.target;u.removeEventListener("dispose",r);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function rg(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function sg(s,e,t,n){const i={},r=new WeakMap;function a(m){const x=m.target;x.index!==null&&e.remove(x.index);for(const M in x.attributes)e.remove(x.attributes[M]);x.removeEventListener("dispose",a),delete i[x.id];const _=r.get(x);_&&(e.remove(_),r.delete(x)),n.releaseStatesOfGeometry(x),x.isInstancedBufferGeometry===!0&&delete x._maxInstanceCount,t.memory.geometries--}function l(m,x){return i[x.id]===!0||(x.addEventListener("dispose",a),i[x.id]=!0,t.memory.geometries++),x}function u(m){const x=m.attributes;for(const M in x)e.update(x[M],34962);const _=m.morphAttributes;for(const M in _){const S=_[M];for(let C=0,v=S.length;C<v;C++)e.update(S[C],34962)}}function h(m){const x=[],_=m.index,M=m.attributes.position;let S=0;if(_!==null){const y=_.array;S=_.version;for(let O=0,P=y.length;O<P;O+=3){const D=y[O+0],f=y[O+1],W=y[O+2];x.push(D,f,f,W,W,D)}}else{const y=M.array;S=M.version;for(let O=0,P=y.length/3-1;O<P;O+=3){const D=O+0,f=O+1,W=O+2;x.push(D,f,f,W,W,D)}}const C=new(_u(x)?Su:wu)(x,1);C.version=S;const v=r.get(m);v&&e.remove(v),r.set(m,C)}function p(m){const x=r.get(m);if(x){const _=m.index;_!==null&&x.version<_.version&&h(m)}else h(m);return r.get(m)}return{get:l,update:u,getWireframeAttribute:p}}function og(s,e,t,n){const i=n.isWebGL2;let r;function a(x){r=x}let l,u;function h(x){l=x.type,u=x.bytesPerElement}function p(x,_){s.drawElements(r,_,l,x*u),t.update(_,r,1)}function m(x,_,M){if(M===0)return;let S,C;if(i)S=s,C="drawElementsInstanced";else if(S=e.get("ANGLE_instanced_arrays"),C="drawElementsInstancedANGLE",S===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}S[C](r,_,l,x*u,M),t.update(_,r,M)}this.setMode=a,this.setIndex=h,this.render=p,this.renderInstances=m}function ag(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,l){switch(t.calls++,a){case 4:t.triangles+=l*(r/3);break;case 1:t.lines+=l*(r/2);break;case 3:t.lines+=l*(r-1);break;case 2:t.lines+=l*r;break;case 0:t.points+=l*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}class $a extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=qt,this.minFilter=qt,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}$a.prototype.isDataTexture2DArray=!0;function lg(s,e){return s[0]-e[0]}function cg(s,e){return Math.abs(e[1])-Math.abs(s[1])}function Ac(s,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),s.divideScalar(t)}function ug(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new z,l=[];for(let h=0;h<8;h++)l[h]=[h,0];function u(h,p,m,x){const _=h.morphTargetInfluences;if(e.isWebGL2===!0){const S=p.morphAttributes.position.length;let C=r.get(p);if(C===void 0||C.count!==S){let X=function(){A.dispose(),r.delete(p),p.removeEventListener("dispose",X)};var M=X;C!==void 0&&C.texture.dispose();const O=p.morphAttributes.normal!==void 0,P=p.morphAttributes.position,D=p.morphAttributes.normal||[],f=p.attributes.position.count,W=O===!0?2:1;let fe=f*W,Pe=1;fe>e.maxTextureSize&&(Pe=Math.ceil(fe/e.maxTextureSize),fe=e.maxTextureSize);const ge=new Float32Array(fe*Pe*4*S),A=new $a(ge,fe,Pe,S);A.format=ln,A.type=zi,A.needsUpdate=!0;const k=W*4;for(let J=0;J<S;J++){const Z=P[J],K=D[J],oe=fe*Pe*4*J;for(let xe=0;xe<Z.count;xe++){a.fromBufferAttribute(Z,xe),Z.normalized===!0&&Ac(a,Z);const Ce=xe*k;ge[oe+Ce+0]=a.x,ge[oe+Ce+1]=a.y,ge[oe+Ce+2]=a.z,ge[oe+Ce+3]=0,O===!0&&(a.fromBufferAttribute(K,xe),K.normalized===!0&&Ac(a,K),ge[oe+Ce+4]=a.x,ge[oe+Ce+5]=a.y,ge[oe+Ce+6]=a.z,ge[oe+Ce+7]=0)}}C={count:S,texture:A,size:new ve(fe,Pe)},r.set(p,C),p.addEventListener("dispose",X)}let v=0;for(let O=0;O<_.length;O++)v+=_[O];const y=p.morphTargetsRelative?1:1-v;x.getUniforms().setValue(s,"morphTargetBaseInfluence",y),x.getUniforms().setValue(s,"morphTargetInfluences",_),x.getUniforms().setValue(s,"morphTargetsTexture",C.texture,t),x.getUniforms().setValue(s,"morphTargetsTextureSize",C.size)}else{const S=_===void 0?0:_.length;let C=n[p.id];if(C===void 0||C.length!==S){C=[];for(let D=0;D<S;D++)C[D]=[D,0];n[p.id]=C}for(let D=0;D<S;D++){const f=C[D];f[0]=D,f[1]=_[D]}C.sort(cg);for(let D=0;D<8;D++)D<S&&C[D][1]?(l[D][0]=C[D][0],l[D][1]=C[D][1]):(l[D][0]=Number.MAX_SAFE_INTEGER,l[D][1]=0);l.sort(lg);const v=p.morphAttributes.position,y=p.morphAttributes.normal;let O=0;for(let D=0;D<8;D++){const f=l[D],W=f[0],fe=f[1];W!==Number.MAX_SAFE_INTEGER&&fe?(v&&p.getAttribute("morphTarget"+D)!==v[W]&&p.setAttribute("morphTarget"+D,v[W]),y&&p.getAttribute("morphNormal"+D)!==y[W]&&p.setAttribute("morphNormal"+D,y[W]),i[D]=fe,O+=fe):(v&&p.hasAttribute("morphTarget"+D)===!0&&p.deleteAttribute("morphTarget"+D),y&&p.hasAttribute("morphNormal"+D)===!0&&p.deleteAttribute("morphNormal"+D),i[D]=0)}const P=p.morphTargetsRelative?1:1-O;x.getUniforms().setValue(s,"morphTargetBaseInfluence",P),x.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:u}}function hg(s,e,t,n){let i=new WeakMap;function r(u){const h=n.render.frame,p=u.geometry,m=e.get(u,p);return i.get(m)!==h&&(e.update(m),i.set(m,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",l)===!1&&u.addEventListener("dispose",l),t.update(u.instanceMatrix,34962),u.instanceColor!==null&&t.update(u.instanceColor,34962)),m}function a(){i=new WeakMap}function l(u){const h=u.target;h.removeEventListener("dispose",l),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:a}}class Lu extends $t{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=qt,this.minFilter=qt,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Lu.prototype.isDataTexture3D=!0;const Ru=new $t,Pu=new $a,Du=new Lu,Iu=new go,Cc=[],Lc=[],Rc=new Float32Array(16),Pc=new Float32Array(9),Dc=new Float32Array(4);function Ar(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Cc[i];if(r===void 0&&(r=new Float32Array(i),Cc[i]=r),e!==0){n.toArray(r,0);for(let a=1,l=0;a!==e;++a)l+=t,s[a].toArray(r,l)}return r}function un(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function sn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function _o(s,e){let t=Lc[e];t===void 0&&(t=new Int32Array(e),Lc[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function fg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function dg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;s.uniform2fv(this.addr,e),sn(t,e)}}function pg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(un(t,e))return;s.uniform3fv(this.addr,e),sn(t,e)}}function mg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;s.uniform4fv(this.addr,e),sn(t,e)}}function gg(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),sn(t,e)}else{if(un(t,n))return;Dc.set(n),s.uniformMatrix2fv(this.addr,!1,Dc),sn(t,n)}}function xg(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),sn(t,e)}else{if(un(t,n))return;Pc.set(n),s.uniformMatrix3fv(this.addr,!1,Pc),sn(t,n)}}function vg(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),sn(t,e)}else{if(un(t,n))return;Rc.set(n),s.uniformMatrix4fv(this.addr,!1,Rc),sn(t,n)}}function yg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function _g(s,e){const t=this.cache;un(t,e)||(s.uniform2iv(this.addr,e),sn(t,e))}function bg(s,e){const t=this.cache;un(t,e)||(s.uniform3iv(this.addr,e),sn(t,e))}function Mg(s,e){const t=this.cache;un(t,e)||(s.uniform4iv(this.addr,e),sn(t,e))}function wg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Sg(s,e){const t=this.cache;un(t,e)||(s.uniform2uiv(this.addr,e),sn(t,e))}function Tg(s,e){const t=this.cache;un(t,e)||(s.uniform3uiv(this.addr,e),sn(t,e))}function Eg(s,e){const t=this.cache;un(t,e)||(s.uniform4uiv(this.addr,e),sn(t,e))}function Ag(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.safeSetTexture2D(e||Ru,i)}function Cg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Du,i)}function Lg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.safeSetTextureCube(e||Iu,i)}function Rg(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Pu,i)}function Pg(s){switch(s){case 5126:return fg;case 35664:return dg;case 35665:return pg;case 35666:return mg;case 35674:return gg;case 35675:return xg;case 35676:return vg;case 5124:case 35670:return yg;case 35667:case 35671:return _g;case 35668:case 35672:return bg;case 35669:case 35673:return Mg;case 5125:return wg;case 36294:return Sg;case 36295:return Tg;case 36296:return Eg;case 35678:case 36198:case 36298:case 36306:case 35682:return Ag;case 35679:case 36299:case 36307:return Cg;case 35680:case 36300:case 36308:case 36293:return Lg;case 36289:case 36303:case 36311:case 36292:return Rg}}function Dg(s,e){s.uniform1fv(this.addr,e)}function Ig(s,e){const t=Ar(e,this.size,2);s.uniform2fv(this.addr,t)}function Ng(s,e){const t=Ar(e,this.size,3);s.uniform3fv(this.addr,t)}function Fg(s,e){const t=Ar(e,this.size,4);s.uniform4fv(this.addr,t)}function Bg(s,e){const t=Ar(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function zg(s,e){const t=Ar(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function Og(s,e){const t=Ar(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Hg(s,e){s.uniform1iv(this.addr,e)}function Ug(s,e){s.uniform2iv(this.addr,e)}function kg(s,e){s.uniform3iv(this.addr,e)}function Vg(s,e){s.uniform4iv(this.addr,e)}function Gg(s,e){s.uniform1uiv(this.addr,e)}function Wg(s,e){s.uniform2uiv(this.addr,e)}function qg(s,e){s.uniform3uiv(this.addr,e)}function jg(s,e){s.uniform4uiv(this.addr,e)}function Xg(s,e,t){const n=e.length,i=_o(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.safeSetTexture2D(e[r]||Ru,i[r])}function Yg(s,e,t){const n=e.length,i=_o(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture3D(e[r]||Du,i[r])}function Jg(s,e,t){const n=e.length,i=_o(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.safeSetTextureCube(e[r]||Iu,i[r])}function $g(s,e,t){const n=e.length,i=_o(t,n);s.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||Pu,i[r])}function Zg(s){switch(s){case 5126:return Dg;case 35664:return Ig;case 35665:return Ng;case 35666:return Fg;case 35674:return Bg;case 35675:return zg;case 35676:return Og;case 5124:case 35670:return Hg;case 35667:case 35671:return Ug;case 35668:case 35672:return kg;case 35669:case 35673:return Vg;case 5125:return Gg;case 36294:return Wg;case 36295:return qg;case 36296:return jg;case 35678:case 36198:case 36298:case 36306:case 35682:return Xg;case 35679:case 36299:case 36307:return Yg;case 35680:case 36300:case 36308:case 36293:return Jg;case 36289:case 36303:case 36311:case 36292:return $g}}function Kg(s,e,t){this.id=s,this.addr=t,this.cache=[],this.setValue=Pg(e.type)}function Nu(s,e,t){this.id=s,this.addr=t,this.cache=[],this.size=e.size,this.setValue=Zg(e.type)}Nu.prototype.updateCache=function(s){const e=this.cache;s instanceof Float32Array&&e.length!==s.length&&(this.cache=new Float32Array(s.length)),sn(e,s)};function Fu(s){this.id=s,this.seq=[],this.map={}}Fu.prototype.setValue=function(s,e,t){const n=this.seq;for(let i=0,r=n.length;i!==r;++i){const a=n[i];a.setValue(s,e[a.id],t)}};const ya=/(\w+)(\])?(\[|\.)?/g;function Ic(s,e){s.seq.push(e),s.map[e.id]=e}function Qg(s,e,t){const n=s.name,i=n.length;for(ya.lastIndex=0;;){const r=ya.exec(n),a=ya.lastIndex;let l=r[1];const u=r[2]==="]",h=r[3];if(u&&(l=l|0),h===void 0||h==="["&&a+2===i){Ic(t,h===void 0?new Kg(l,s,e):new Nu(l,s,e));break}else{let m=t.map[l];m===void 0&&(m=new Fu(l),Ic(t,m)),t=m}}}function _i(s,e){this.seq=[],this.map={};const t=s.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=s.getActiveUniform(e,n),r=s.getUniformLocation(e,i.name);Qg(i,r,this)}}_i.prototype.setValue=function(s,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(s,t,n)};_i.prototype.setOptional=function(s,e,t){const n=e[t];n!==void 0&&this.setValue(s,t,n)};_i.upload=function(s,e,t,n){for(let i=0,r=e.length;i!==r;++i){const a=e[i],l=t[a.id];l.needsUpdate!==!1&&a.setValue(s,l.value,n)}};_i.seqWithValue=function(s,e){const t=[];for(let n=0,i=s.length;n!==i;++n){const r=s[n];r.id in e&&t.push(r)}return t};function Nc(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let ex=0;function tx(s){const e=s.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function nx(s){switch(s){case Mi:return["Linear","( value )"];case It:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Fc(s,e,t){const n=s.getShaderParameter(e,35713),i=s.getShaderInfoLog(e).trim();return n&&i===""?"":t.toUpperCase()+`

`+i+`

`+tx(s.getShaderSource(e))}function ix(s,e){const t=nx(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function rx(s,e){let t;switch(e){case Af:t="Linear";break;case Cf:t="Reinhard";break;case Lf:t="OptimizedCineon";break;case Rf:t="ACESFilmic";break;case Pf:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function sx(s){return[s.extensionDerivatives||s.envMapCubeUV||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Jr).join(`
`)}function ox(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function ax(s,e){const t={},n=s.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let l=1;r.type===35674&&(l=2),r.type===35675&&(l=3),r.type===35676&&(l=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:l}}return t}function Jr(s){return s!==""}function Bc(s,e){return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function zc(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const lx=/^[ \t]*#include +<([\w\d./]+)>/gm;function Fa(s){return s.replace(lx,cx)}function cx(s,e){const t=ut[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Fa(t)}const ux=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,hx=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Oc(s){return s.replace(hx,Bu).replace(ux,fx)}function fx(s,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Bu(s,e,t,n)}function Bu(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Hc(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function dx(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===pu?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===sf?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Yr&&(e="SHADOWMAP_TYPE_VSM"),e}function px(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case ls:case cs:e="ENVMAP_TYPE_CUBE";break;case fo:case Ga:e="ENVMAP_TYPE_CUBE_UV";break}return e}function mx(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case cs:case Ga:e="ENVMAP_MODE_REFRACTION";break}return e}function gx(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case ho:e="ENVMAP_BLENDING_MULTIPLY";break;case Tf:e="ENVMAP_BLENDING_MIX";break;case Ef:e="ENVMAP_BLENDING_ADD";break}return e}function xx(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,l=t.fragmentShader;const u=dx(t),h=px(t),p=mx(t),m=gx(t),x=t.isWebGL2?"":sx(t),_=ox(r),M=i.createProgram();let S,C,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=[_].filter(Jr).join(`
`),S.length>0&&(S+=`
`),C=[x,_].filter(Jr).join(`
`),C.length>0&&(C+=`
`)):(S=[Hc(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Jr).join(`
`),C=[x,Hc(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+p:"",t.envMap?"#define "+m:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==xi?"#define TONE_MAPPING":"",t.toneMapping!==xi?ut.tonemapping_pars_fragment:"",t.toneMapping!==xi?rx("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.transparent?"":"#define OPAQUE",ut.encodings_pars_fragment,ix("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Jr).join(`
`)),a=Fa(a),a=Bc(a,t),a=zc(a,t),l=Fa(l),l=Bc(l,t),l=zc(l,t),a=Oc(a),l=Oc(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,S=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,C=["#define varying in",t.glslVersion===ac?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ac?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+C);const y=v+S+a,O=v+C+l,P=Nc(i,35633,y),D=Nc(i,35632,O);if(i.attachShader(M,P),i.attachShader(M,D),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M),s.debug.checkShaderErrors){const fe=i.getProgramInfoLog(M).trim(),Pe=i.getShaderInfoLog(P).trim(),ge=i.getShaderInfoLog(D).trim();let A=!0,k=!0;if(i.getProgramParameter(M,35714)===!1){A=!1;const X=Fc(i,P,"vertex"),J=Fc(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,35715)+`

Program Info Log: `+fe+`
`+X+`
`+J)}else fe!==""?console.warn("THREE.WebGLProgram: Program Info Log:",fe):(Pe===""||ge==="")&&(k=!1);k&&(this.diagnostics={runnable:A,programLog:fe,vertexShader:{log:Pe,prefix:S},fragmentShader:{log:ge,prefix:C}})}i.deleteShader(P),i.deleteShader(D);let f;this.getUniforms=function(){return f===void 0&&(f=new _i(i,M)),f};let W;return this.getAttributes=function(){return W===void 0&&(W=ax(i,M)),W},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.name=t.shaderName,this.id=ex++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=P,this.fragmentShader=D,this}let vx=0;class yx{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new _x;t.set(e,n)}return t.get(e)}}class _x{constructor(){this.id=vx++,this.usedTimes=0}}function bx(s,e,t,n,i,r,a){const l=new Mu,u=new yx,h=[],p=i.isWebGL2,m=i.logarithmicDepthBuffer,x=i.floatVertexTextures,_=i.maxVertexUniforms,M=i.vertexTextures;let S=i.precision;const C={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(A){const X=A.skeleton.bones;if(x)return 1024;{const Z=Math.floor((_-20)/4),K=Math.min(Z,X.length);return K<X.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+X.length+" bones. This GPU supports "+K+"."),0):K}}function y(A,k,X,J,Z){const K=J.fog,oe=A.isMeshStandardMaterial?J.environment:null,xe=(A.isMeshStandardMaterial?t:e).get(A.envMap||oe),Ce=C[A.type],ae=Z.isSkinnedMesh?v(Z):0;A.precision!==null&&(S=i.getMaxPrecision(A.precision),S!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",S,"instead."));let ce,Le,Ie,He;if(Ce){const Se=Vn[Ce];ce=Se.vertexShader,Le=Se.fragmentShader}else ce=A.vertexShader,Le=A.fragmentShader,u.update(A),Ie=u.getVertexShaderID(A),He=u.getFragmentShaderID(A);const ie=s.getRenderTarget(),mt=A.alphaTest>0,ze=A.clearcoat>0;return{isWebGL2:p,shaderID:Ce,shaderName:A.type,vertexShader:ce,fragmentShader:Le,defines:A.defines,customVertexShaderID:Ie,customFragmentShaderID:He,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:S,instancing:Z.isInstancedMesh===!0,instancingColor:Z.isInstancedMesh===!0&&Z.instanceColor!==null,supportsVertexTextures:M,outputEncoding:ie===null?s.outputEncoding:ie.isXRRenderTarget===!0?ie.texture.encoding:Mi,map:!!A.map,matcap:!!A.matcap,envMap:!!xe,envMapMode:xe&&xe.mapping,envMapCubeUV:!!xe&&(xe.mapping===fo||xe.mapping===Ga),lightMap:!!A.lightMap,aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:A.normalMapType===ed,tangentSpaceNormalMap:A.normalMapType===Mr,decodeVideoTexture:!!A.map&&A.map.isVideoTexture===!0&&A.map.encoding===It,clearcoat:ze,clearcoatMap:ze&&!!A.clearcoatMap,clearcoatRoughnessMap:ze&&!!A.clearcoatRoughnessMap,clearcoatNormalMap:ze&&!!A.clearcoatNormalMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,specularIntensityMap:!!A.specularIntensityMap,specularColorMap:!!A.specularColorMap,transparent:A.transparent,alphaMap:!!A.alphaMap,alphaTest:mt,gradientMap:!!A.gradientMap,sheen:A.sheen>0,sheenColorMap:!!A.sheenColorMap,sheenRoughnessMap:!!A.sheenRoughnessMap,transmission:A.transmission>0,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:!!A.normalMap&&!!Z.geometry&&!!Z.geometry.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!Z.geometry&&!!Z.geometry.attributes.color&&Z.geometry.attributes.color.itemSize===4,vertexUvs:!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatMap||!!A.clearcoatRoughnessMap||!!A.clearcoatNormalMap||!!A.displacementMap||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||!!A.sheenColorMap||!!A.sheenRoughnessMap,uvsVertexOnly:!(A.map||A.bumpMap||A.normalMap||A.specularMap||A.alphaMap||A.emissiveMap||A.roughnessMap||A.metalnessMap||A.clearcoatNormalMap||A.transmission>0||A.transmissionMap||A.thicknessMap||A.specularIntensityMap||A.specularColorMap||A.sheen>0||A.sheenColorMap||A.sheenRoughnessMap)&&!!A.displacementMap,fog:!!K,useFog:A.fog,fogExp2:K&&K.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:m,skinning:Z.isSkinnedMesh===!0&&ae>0,maxBones:ae,useVertexTexture:x,morphTargets:!!Z.geometry&&!!Z.geometry.morphAttributes.position,morphNormals:!!Z.geometry&&!!Z.geometry.morphAttributes.normal,morphTargetsCount:Z.geometry&&Z.geometry.morphAttributes.position?Z.geometry.morphAttributes.position.length:0,numDirLights:k.directional.length,numPointLights:k.point.length,numSpotLights:k.spot.length,numRectAreaLights:k.rectArea.length,numHemiLights:k.hemi.length,numDirLightShadows:k.directionalShadowMap.length,numPointLightShadows:k.pointShadowMap.length,numSpotLightShadows:k.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:s.shadowMap.enabled&&X.length>0,shadowMapType:s.shadowMap.type,toneMapping:A.toneMapped?s.toneMapping:xi,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===vr,flipSided:A.side===Wt,depthPacking:A.depthPacking!==void 0?A.depthPacking:!1,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:p||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function O(A){const k=[];if(A.shaderID?k.push(A.shaderID):(k.push(A.customVertexShaderID),k.push(A.customFragmentShaderID)),A.defines!==void 0)for(const X in A.defines)k.push(X),k.push(A.defines[X]);return A.isRawShaderMaterial===!1&&(P(k,A),D(k,A),k.push(s.outputEncoding)),k.push(A.customProgramCacheKey),k.join()}function P(A,k){A.push(k.precision),A.push(k.outputEncoding),A.push(k.envMapMode),A.push(k.combine),A.push(k.vertexUvs),A.push(k.fogExp2),A.push(k.sizeAttenuation),A.push(k.maxBones),A.push(k.morphTargetsCount),A.push(k.numDirLights),A.push(k.numPointLights),A.push(k.numSpotLights),A.push(k.numHemiLights),A.push(k.numRectAreaLights),A.push(k.numDirLightShadows),A.push(k.numPointLightShadows),A.push(k.numSpotLightShadows),A.push(k.shadowMapType),A.push(k.toneMapping),A.push(k.numClippingPlanes),A.push(k.numClipIntersection)}function D(A,k){l.disableAll(),k.isWebGL2&&l.enable(0),k.supportsVertexTextures&&l.enable(1),k.instancing&&l.enable(2),k.instancingColor&&l.enable(3),k.map&&l.enable(4),k.matcap&&l.enable(5),k.envMap&&l.enable(6),k.envMapCubeUV&&l.enable(7),k.lightMap&&l.enable(8),k.aoMap&&l.enable(9),k.emissiveMap&&l.enable(10),k.bumpMap&&l.enable(11),k.normalMap&&l.enable(12),k.objectSpaceNormalMap&&l.enable(13),k.tangentSpaceNormalMap&&l.enable(14),k.clearcoat&&l.enable(15),k.clearcoatMap&&l.enable(16),k.clearcoatRoughnessMap&&l.enable(17),k.clearcoatNormalMap&&l.enable(18),k.displacementMap&&l.enable(19),k.specularMap&&l.enable(20),k.roughnessMap&&l.enable(21),k.metalnessMap&&l.enable(22),k.gradientMap&&l.enable(23),k.alphaMap&&l.enable(24),k.alphaTest&&l.enable(25),k.vertexColors&&l.enable(26),k.vertexAlphas&&l.enable(27),k.vertexUvs&&l.enable(28),k.vertexTangents&&l.enable(29),k.uvsVertexOnly&&l.enable(30),k.fog&&l.enable(31),A.push(l.mask),l.disableAll(),k.useFog&&l.enable(0),k.flatShading&&l.enable(1),k.logarithmicDepthBuffer&&l.enable(2),k.skinning&&l.enable(3),k.useVertexTexture&&l.enable(4),k.morphTargets&&l.enable(5),k.morphNormals&&l.enable(6),k.premultipliedAlpha&&l.enable(7),k.shadowMapEnabled&&l.enable(8),k.physicallyCorrectLights&&l.enable(9),k.doubleSided&&l.enable(10),k.flipSided&&l.enable(11),k.depthPacking&&l.enable(12),k.dithering&&l.enable(13),k.specularIntensityMap&&l.enable(14),k.specularColorMap&&l.enable(15),k.transmission&&l.enable(16),k.transmissionMap&&l.enable(17),k.thicknessMap&&l.enable(18),k.sheen&&l.enable(19),k.sheenColorMap&&l.enable(20),k.sheenRoughnessMap&&l.enable(21),k.decodeVideoTexture&&l.enable(22),k.transparent&&l.enable(23),A.push(l.mask)}function f(A){const k=C[A.type];let X;if(k){const J=Vn[k];X=xd.clone(J.uniforms)}else X=A.uniforms;return X}function W(A,k){let X;for(let J=0,Z=h.length;J<Z;J++){const K=h[J];if(K.cacheKey===k){X=K,++X.usedTimes;break}}return X===void 0&&(X=new xx(s,k,A,r),h.push(X)),X}function fe(A){if(--A.usedTimes===0){const k=h.indexOf(A);h[k]=h[h.length-1],h.pop(),A.destroy()}}function Pe(A){u.remove(A)}function ge(){u.dispose()}return{getParameters:y,getProgramCacheKey:O,getUniforms:f,acquireProgram:W,releaseProgram:fe,releaseShaderCache:Pe,programs:h,dispose:ge}}function Mx(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}function t(r){s.delete(r)}function n(r,a,l){s.get(r)[a]=l}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function wx(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function Uc(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function kc(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(m,x,_,M,S,C){let v=s[e];return v===void 0?(v={id:m.id,object:m,geometry:x,material:_,groupOrder:M,renderOrder:m.renderOrder,z:S,group:C},s[e]=v):(v.id=m.id,v.object=m,v.geometry=x,v.material=_,v.groupOrder=M,v.renderOrder=m.renderOrder,v.z=S,v.group=C),e++,v}function l(m,x,_,M,S,C){const v=a(m,x,_,M,S,C);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(m,x,_,M,S,C){const v=a(m,x,_,M,S,C);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(m,x){t.length>1&&t.sort(m||wx),n.length>1&&n.sort(x||Uc),i.length>1&&i.sort(x||Uc)}function p(){for(let m=e,x=s.length;m<x;m++){const _=s[m];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:l,unshift:u,finish:p,sort:h}}function Sx(){let s=new WeakMap;function e(n,i){let r;return s.has(n)===!1?(r=new kc,s.set(n,[r])):i>=s.get(n).length?(r=new kc,s.get(n).push(r)):r=s.get(n)[i],r}function t(){s=new WeakMap}return{get:e,dispose:t}}function Tx(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new z,color:new ke};break;case"SpotLight":t={position:new z,direction:new z,color:new ke,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new z,color:new ke,distance:0,decay:0};break;case"HemisphereLight":t={direction:new z,skyColor:new ke,groundColor:new ke};break;case"RectAreaLight":t={color:new ke,position:new z,halfWidth:new z,halfHeight:new z};break}return s[e.id]=t,t}}}function Ex(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let Ax=0;function Cx(s,e){return(e.castShadow?1:0)-(s.castShadow?1:0)}function Lx(s,e){const t=new Tx,n=Ex(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let p=0;p<9;p++)i.probe.push(new z);const r=new z,a=new Ke,l=new Ke;function u(p,m){let x=0,_=0,M=0;for(let Pe=0;Pe<9;Pe++)i.probe[Pe].set(0,0,0);let S=0,C=0,v=0,y=0,O=0,P=0,D=0,f=0;p.sort(Cx);const W=m!==!0?Math.PI:1;for(let Pe=0,ge=p.length;Pe<ge;Pe++){const A=p[Pe],k=A.color,X=A.intensity,J=A.distance,Z=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)x+=k.r*X*W,_+=k.g*X*W,M+=k.b*X*W;else if(A.isLightProbe)for(let K=0;K<9;K++)i.probe[K].addScaledVector(A.sh.coefficients[K],X);else if(A.isDirectionalLight){const K=t.get(A);if(K.color.copy(A.color).multiplyScalar(A.intensity*W),A.castShadow){const oe=A.shadow,xe=n.get(A);xe.shadowBias=oe.bias,xe.shadowNormalBias=oe.normalBias,xe.shadowRadius=oe.radius,xe.shadowMapSize=oe.mapSize,i.directionalShadow[S]=xe,i.directionalShadowMap[S]=Z,i.directionalShadowMatrix[S]=A.shadow.matrix,P++}i.directional[S]=K,S++}else if(A.isSpotLight){const K=t.get(A);if(K.position.setFromMatrixPosition(A.matrixWorld),K.color.copy(k).multiplyScalar(X*W),K.distance=J,K.coneCos=Math.cos(A.angle),K.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),K.decay=A.decay,A.castShadow){const oe=A.shadow,xe=n.get(A);xe.shadowBias=oe.bias,xe.shadowNormalBias=oe.normalBias,xe.shadowRadius=oe.radius,xe.shadowMapSize=oe.mapSize,i.spotShadow[v]=xe,i.spotShadowMap[v]=Z,i.spotShadowMatrix[v]=A.shadow.matrix,f++}i.spot[v]=K,v++}else if(A.isRectAreaLight){const K=t.get(A);K.color.copy(k).multiplyScalar(X),K.halfWidth.set(A.width*.5,0,0),K.halfHeight.set(0,A.height*.5,0),i.rectArea[y]=K,y++}else if(A.isPointLight){const K=t.get(A);if(K.color.copy(A.color).multiplyScalar(A.intensity*W),K.distance=A.distance,K.decay=A.decay,A.castShadow){const oe=A.shadow,xe=n.get(A);xe.shadowBias=oe.bias,xe.shadowNormalBias=oe.normalBias,xe.shadowRadius=oe.radius,xe.shadowMapSize=oe.mapSize,xe.shadowCameraNear=oe.camera.near,xe.shadowCameraFar=oe.camera.far,i.pointShadow[C]=xe,i.pointShadowMap[C]=Z,i.pointShadowMatrix[C]=A.shadow.matrix,D++}i.point[C]=K,C++}else if(A.isHemisphereLight){const K=t.get(A);K.skyColor.copy(A.color).multiplyScalar(X*W),K.groundColor.copy(A.groundColor).multiplyScalar(X*W),i.hemi[O]=K,O++}}y>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=we.LTC_FLOAT_1,i.rectAreaLTC2=we.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=we.LTC_HALF_1,i.rectAreaLTC2=we.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=x,i.ambient[1]=_,i.ambient[2]=M;const fe=i.hash;(fe.directionalLength!==S||fe.pointLength!==C||fe.spotLength!==v||fe.rectAreaLength!==y||fe.hemiLength!==O||fe.numDirectionalShadows!==P||fe.numPointShadows!==D||fe.numSpotShadows!==f)&&(i.directional.length=S,i.spot.length=v,i.rectArea.length=y,i.point.length=C,i.hemi.length=O,i.directionalShadow.length=P,i.directionalShadowMap.length=P,i.pointShadow.length=D,i.pointShadowMap.length=D,i.spotShadow.length=f,i.spotShadowMap.length=f,i.directionalShadowMatrix.length=P,i.pointShadowMatrix.length=D,i.spotShadowMatrix.length=f,fe.directionalLength=S,fe.pointLength=C,fe.spotLength=v,fe.rectAreaLength=y,fe.hemiLength=O,fe.numDirectionalShadows=P,fe.numPointShadows=D,fe.numSpotShadows=f,i.version=Ax++)}function h(p,m){let x=0,_=0,M=0,S=0,C=0;const v=m.matrixWorldInverse;for(let y=0,O=p.length;y<O;y++){const P=p[y];if(P.isDirectionalLight){const D=i.directional[x];D.direction.setFromMatrixPosition(P.matrixWorld),r.setFromMatrixPosition(P.target.matrixWorld),D.direction.sub(r),D.direction.transformDirection(v),x++}else if(P.isSpotLight){const D=i.spot[M];D.position.setFromMatrixPosition(P.matrixWorld),D.position.applyMatrix4(v),D.direction.setFromMatrixPosition(P.matrixWorld),r.setFromMatrixPosition(P.target.matrixWorld),D.direction.sub(r),D.direction.transformDirection(v),M++}else if(P.isRectAreaLight){const D=i.rectArea[S];D.position.setFromMatrixPosition(P.matrixWorld),D.position.applyMatrix4(v),l.identity(),a.copy(P.matrixWorld),a.premultiply(v),l.extractRotation(a),D.halfWidth.set(P.width*.5,0,0),D.halfHeight.set(0,P.height*.5,0),D.halfWidth.applyMatrix4(l),D.halfHeight.applyMatrix4(l),S++}else if(P.isPointLight){const D=i.point[_];D.position.setFromMatrixPosition(P.matrixWorld),D.position.applyMatrix4(v),_++}else if(P.isHemisphereLight){const D=i.hemi[C];D.direction.setFromMatrixPosition(P.matrixWorld),D.direction.transformDirection(v),D.direction.normalize(),C++}}}return{setup:u,setupView:h,state:i}}function Vc(s,e){const t=new Lx(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(m){n.push(m)}function l(m){i.push(m)}function u(m){t.setup(n,m)}function h(m){t.setupView(n,m)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:a,pushShadow:l}}function Rx(s,e){let t=new WeakMap;function n(r,a=0){let l;return t.has(r)===!1?(l=new Vc(s,e),t.set(r,[l])):a>=t.get(r).length?(l=new Vc(s,e),t.get(r).push(l)):l=t.get(r)[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class zu extends on{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Kf,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}zu.prototype.isMeshDepthMaterial=!0;class Ou extends on{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new z,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Ou.prototype.isMeshDistanceMaterial=!0;const Px=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Dx=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Hu(s,e,t){let n=new xo;const i=new ve,r=new ve,a=new Ct,l=new zu({depthPacking:Qf}),u=new Ou,h={},p=t.maxTextureSize,m={0:Wt,1:es,2:vr},x=new Hi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:Px,fragmentShader:Dx}),_=x.clone();_.defines.HORIZONTAL_PASS=1;const M=new Ft;M.setAttribute("position",new Xt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new cn(M,x),C=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=pu,this.render=function(P,D,f){if(C.enabled===!1||C.autoUpdate===!1&&C.needsUpdate===!1||P.length===0)return;const W=s.getRenderTarget(),fe=s.getActiveCubeFace(),Pe=s.getActiveMipmapLevel(),ge=s.state;ge.setBlending(gi),ge.buffers.color.setClear(1,1,1,1),ge.buffers.depth.setTest(!0),ge.setScissorTest(!1);for(let A=0,k=P.length;A<k;A++){const X=P[A],J=X.shadow;if(J===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(J.autoUpdate===!1&&J.needsUpdate===!1)continue;i.copy(J.mapSize);const Z=J.getFrameExtents();if(i.multiply(Z),r.copy(J.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(r.x=Math.floor(p/Z.x),i.x=r.x*Z.x,J.mapSize.x=r.x),i.y>p&&(r.y=Math.floor(p/Z.y),i.y=r.y*Z.y,J.mapSize.y=r.y)),J.map===null&&!J.isPointLightShadow&&this.type===Yr){const oe={minFilter:rn,magFilter:rn,format:ln};J.map=new Rn(i.x,i.y,oe),J.map.texture.name=X.name+".shadowMap",J.mapPass=new Rn(i.x,i.y,oe),J.camera.updateProjectionMatrix()}if(J.map===null){const oe={minFilter:qt,magFilter:qt,format:ln};J.map=new Rn(i.x,i.y,oe),J.map.texture.name=X.name+".shadowMap",J.camera.updateProjectionMatrix()}s.setRenderTarget(J.map),s.clear();const K=J.getViewportCount();for(let oe=0;oe<K;oe++){const xe=J.getViewport(oe);a.set(r.x*xe.x,r.y*xe.y,r.x*xe.z,r.y*xe.w),ge.viewport(a),J.updateMatrices(X,oe),n=J.getFrustum(),O(D,f,J.camera,X,this.type)}!J.isPointLightShadow&&this.type===Yr&&v(J,f),J.needsUpdate=!1}C.needsUpdate=!1,s.setRenderTarget(W,fe,Pe)};function v(P,D){const f=e.update(S);x.defines.VSM_SAMPLES!==P.blurSamples&&(x.defines.VSM_SAMPLES=P.blurSamples,_.defines.VSM_SAMPLES=P.blurSamples,x.needsUpdate=!0,_.needsUpdate=!0),x.uniforms.shadow_pass.value=P.map.texture,x.uniforms.resolution.value=P.mapSize,x.uniforms.radius.value=P.radius,s.setRenderTarget(P.mapPass),s.clear(),s.renderBufferDirect(D,null,f,x,S,null),_.uniforms.shadow_pass.value=P.mapPass.texture,_.uniforms.resolution.value=P.mapSize,_.uniforms.radius.value=P.radius,s.setRenderTarget(P.map),s.clear(),s.renderBufferDirect(D,null,f,_,S,null)}function y(P,D,f,W,fe,Pe,ge){let A=null;const k=W.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(k!==void 0?A=k:A=W.isPointLight===!0?u:l,s.localClippingEnabled&&f.clipShadows===!0&&f.clippingPlanes.length!==0||f.displacementMap&&f.displacementScale!==0||f.alphaMap&&f.alphaTest>0){const X=A.uuid,J=f.uuid;let Z=h[X];Z===void 0&&(Z={},h[X]=Z);let K=Z[J];K===void 0&&(K=A.clone(),Z[J]=K),A=K}return A.visible=f.visible,A.wireframe=f.wireframe,ge===Yr?A.side=f.shadowSide!==null?f.shadowSide:f.side:A.side=f.shadowSide!==null?f.shadowSide:m[f.side],A.alphaMap=f.alphaMap,A.alphaTest=f.alphaTest,A.clipShadows=f.clipShadows,A.clippingPlanes=f.clippingPlanes,A.clipIntersection=f.clipIntersection,A.displacementMap=f.displacementMap,A.displacementScale=f.displacementScale,A.displacementBias=f.displacementBias,A.wireframeLinewidth=f.wireframeLinewidth,A.linewidth=f.linewidth,W.isPointLight===!0&&A.isMeshDistanceMaterial===!0&&(A.referencePosition.setFromMatrixPosition(W.matrixWorld),A.nearDistance=fe,A.farDistance=Pe),A}function O(P,D,f,W,fe){if(P.visible===!1)return;if(P.layers.test(D.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&fe===Yr)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,P.matrixWorld);const A=e.update(P),k=P.material;if(Array.isArray(k)){const X=A.groups;for(let J=0,Z=X.length;J<Z;J++){const K=X[J],oe=k[K.materialIndex];if(oe&&oe.visible){const xe=y(P,A,oe,W,f.near,f.far,fe);s.renderBufferDirect(f,null,A,xe,P,K)}}}else if(k.visible){const X=y(P,A,k,W,f.near,f.far,fe);s.renderBufferDirect(f,null,A,X,P,null)}}const ge=P.children;for(let A=0,k=ge.length;A<k;A++)O(ge[A],D,f,W,fe)}}function Ix(s,e,t){const n=t.isWebGL2;function i(){let U=!1;const Be=new Ct;let De=null;const Oe=new Ct(0,0,0,0);return{setMask:function(te){De!==te&&!U&&(s.colorMask(te,te,te,te),De=te)},setLocked:function(te){U=te},setClear:function(te,qe,ct,Lt,en){en===!0&&(te*=Lt,qe*=Lt,ct*=Lt),Be.set(te,qe,ct,Lt),Oe.equals(Be)===!1&&(s.clearColor(te,qe,ct,Lt),Oe.copy(Be))},reset:function(){U=!1,De=null,Oe.set(-1,0,0,0)}}}function r(){let U=!1,Be=null,De=null,Oe=null;return{setTest:function(te){te?ie(2929):mt(2929)},setMask:function(te){Be!==te&&!U&&(s.depthMask(te),Be=te)},setFunc:function(te){if(De!==te){if(te)switch(te){case vf:s.depthFunc(512);break;case yf:s.depthFunc(519);break;case _f:s.depthFunc(513);break;case Ca:s.depthFunc(515);break;case bf:s.depthFunc(514);break;case Mf:s.depthFunc(518);break;case wf:s.depthFunc(516);break;case Sf:s.depthFunc(517);break;default:s.depthFunc(515)}else s.depthFunc(515);De=te}},setLocked:function(te){U=te},setClear:function(te){Oe!==te&&(s.clearDepth(te),Oe=te)},reset:function(){U=!1,Be=null,De=null,Oe=null}}}function a(){let U=!1,Be=null,De=null,Oe=null,te=null,qe=null,ct=null,Lt=null,en=null;return{setTest:function(_t){U||(_t?ie(2960):mt(2960))},setMask:function(_t){Be!==_t&&!U&&(s.stencilMask(_t),Be=_t)},setFunc:function(_t,Zt,Dn){(De!==_t||Oe!==Zt||te!==Dn)&&(s.stencilFunc(_t,Zt,Dn),De=_t,Oe=Zt,te=Dn)},setOp:function(_t,Zt,Dn){(qe!==_t||ct!==Zt||Lt!==Dn)&&(s.stencilOp(_t,Zt,Dn),qe=_t,ct=Zt,Lt=Dn)},setLocked:function(_t){U=_t},setClear:function(_t){en!==_t&&(s.clearStencil(_t),en=_t)},reset:function(){U=!1,Be=null,De=null,Oe=null,te=null,qe=null,ct=null,Lt=null,en=null}}}const l=new i,u=new r,h=new a;let p={},m={},x=new WeakMap,_=[],M=null,S=!1,C=null,v=null,y=null,O=null,P=null,D=null,f=null,W=!1,fe=null,Pe=null,ge=null,A=null,k=null;const X=s.getParameter(35661);let J=!1,Z=0;const K=s.getParameter(7938);K.indexOf("WebGL")!==-1?(Z=parseFloat(/^WebGL (\d)/.exec(K)[1]),J=Z>=1):K.indexOf("OpenGL ES")!==-1&&(Z=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),J=Z>=2);let oe=null,xe={};const Ce=s.getParameter(3088),ae=s.getParameter(2978),ce=new Ct().fromArray(Ce),Le=new Ct().fromArray(ae);function Ie(U,Be,De){const Oe=new Uint8Array(4),te=s.createTexture();s.bindTexture(U,te),s.texParameteri(U,10241,9728),s.texParameteri(U,10240,9728);for(let qe=0;qe<De;qe++)s.texImage2D(Be+qe,0,6408,1,1,0,6408,5121,Oe);return te}const He={};He[3553]=Ie(3553,3553,1),He[34067]=Ie(34067,34069,6),l.setClear(0,0,0,1),u.setClear(1),h.setClear(0),ie(2929),u.setFunc(Ca),_e(!1),Re(Dl),ie(2884),de(gi);function ie(U){p[U]!==!0&&(s.enable(U),p[U]=!0)}function mt(U){p[U]!==!1&&(s.disable(U),p[U]=!1)}function ze(U,Be){return m[U]!==Be?(s.bindFramebuffer(U,Be),m[U]=Be,n&&(U===36009&&(m[36160]=Be),U===36160&&(m[36009]=Be)),!0):!1}function Xe(U,Be){let De=_,Oe=!1;if(U)if(De=x.get(Be),De===void 0&&(De=[],x.set(Be,De)),U.isWebGLMultipleRenderTargets){const te=U.texture;if(De.length!==te.length||De[0]!==36064){for(let qe=0,ct=te.length;qe<ct;qe++)De[qe]=36064+qe;De.length=te.length,Oe=!0}}else De[0]!==36064&&(De[0]=36064,Oe=!0);else De[0]!==1029&&(De[0]=1029,Oe=!0);Oe&&(t.isWebGL2?s.drawBuffers(De):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(De))}function Se(U){return M!==U?(s.useProgram(U),M=U,!0):!1}const at={[cr]:32774,[af]:32778,[lf]:32779};if(n)at[Bl]=32775,at[zl]=32776;else{const U=e.get("EXT_blend_minmax");U!==null&&(at[Bl]=U.MIN_EXT,at[zl]=U.MAX_EXT)}const Qe={[cf]:0,[uf]:1,[hf]:768,[gu]:770,[xf]:776,[mf]:774,[df]:772,[ff]:769,[xu]:771,[gf]:775,[pf]:773};function de(U,Be,De,Oe,te,qe,ct,Lt){if(U===gi){S===!0&&(mt(3042),S=!1);return}if(S===!1&&(ie(3042),S=!0),U!==of){if(U!==C||Lt!==W){if((v!==cr||P!==cr)&&(s.blendEquation(32774),v=cr,P=cr),Lt)switch(U){case Zr:s.blendFuncSeparate(1,771,1,771);break;case Il:s.blendFunc(1,1);break;case Nl:s.blendFuncSeparate(0,769,0,1);break;case Fl:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case Zr:s.blendFuncSeparate(770,771,1,771);break;case Il:s.blendFunc(770,1);break;case Nl:s.blendFuncSeparate(0,769,0,1);break;case Fl:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}y=null,O=null,D=null,f=null,C=U,W=Lt}return}te=te||Be,qe=qe||De,ct=ct||Oe,(Be!==v||te!==P)&&(s.blendEquationSeparate(at[Be],at[te]),v=Be,P=te),(De!==y||Oe!==O||qe!==D||ct!==f)&&(s.blendFuncSeparate(Qe[De],Qe[Oe],Qe[qe],Qe[ct]),y=De,O=Oe,D=qe,f=ct),C=U,W=null}function ye(U,Be){U.side===vr?mt(2884):ie(2884);let De=U.side===Wt;Be&&(De=!De),_e(De),U.blending===Zr&&U.transparent===!1?de(gi):de(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),u.setFunc(U.depthFunc),u.setTest(U.depthTest),u.setMask(U.depthWrite),l.setMask(U.colorWrite);const Oe=U.stencilWrite;h.setTest(Oe),Oe&&(h.setMask(U.stencilWriteMask),h.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),h.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),Fe(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ie(32926):mt(32926)}function _e(U){fe!==U&&(U?s.frontFace(2304):s.frontFace(2305),fe=U)}function Re(U){U!==nf?(ie(2884),U!==Pe&&(U===Dl?s.cullFace(1029):U===rf?s.cullFace(1028):s.cullFace(1032))):mt(2884),Pe=U}function se(U){U!==ge&&(J&&s.lineWidth(U),ge=U)}function Fe(U,Be,De){U?(ie(32823),(A!==Be||k!==De)&&(s.polygonOffset(Be,De),A=Be,k=De)):mt(32823)}function et(U){U?ie(3089):mt(3089)}function ht(U){U===void 0&&(U=33984+X-1),oe!==U&&(s.activeTexture(U),oe=U)}function St(U,Be){oe===null&&ht();let De=xe[oe];De===void 0&&(De={type:void 0,texture:void 0},xe[oe]=De),(De.type!==U||De.texture!==Be)&&(s.bindTexture(U,Be||He[U]),De.type=U,De.texture=Be)}function vt(){const U=xe[oe];U!==void 0&&U.type!==void 0&&(s.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function N(){try{s.compressedTexImage2D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function L(){try{s.texSubImage2D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ne(){try{s.texSubImage3D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function be(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ne(){try{s.texStorage2D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function le(){try{s.texStorage3D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ve(){try{s.texImage2D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ue(){try{s.texImage3D.apply(s,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ee(U){ce.equals(U)===!1&&(s.scissor(U.x,U.y,U.z,U.w),ce.copy(U))}function Ae(U){Le.equals(U)===!1&&(s.viewport(U.x,U.y,U.z,U.w),Le.copy(U))}function $e(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},oe=null,xe={},m={},x=new WeakMap,_=[],M=null,S=!1,C=null,v=null,y=null,O=null,P=null,D=null,f=null,W=!1,fe=null,Pe=null,ge=null,A=null,k=null,ce.set(0,0,s.canvas.width,s.canvas.height),Le.set(0,0,s.canvas.width,s.canvas.height),l.reset(),u.reset(),h.reset()}return{buffers:{color:l,depth:u,stencil:h},enable:ie,disable:mt,bindFramebuffer:ze,drawBuffers:Xe,useProgram:Se,setBlending:de,setMaterial:ye,setFlipSided:_e,setCullFace:Re,setLineWidth:se,setPolygonOffset:Fe,setScissorTest:et,activeTexture:ht,bindTexture:St,unbindTexture:vt,compressedTexImage2D:N,texImage2D:Ve,texImage3D:Ue,texStorage2D:Ne,texStorage3D:le,texSubImage2D:L,texSubImage3D:ne,compressedTexSubImage2D:be,scissor:Ee,viewport:Ae,reset:$e}}function Nx(s,e,t,n,i,r,a){const l=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,p=i.maxTextureSize,m=i.maxSamples,_=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,M=new WeakMap;let S,C=!1;try{C=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(N,L){return C?new OffscreenCanvas(N,L):is("canvas")}function y(N,L,ne,be){let Ne=1;if((N.width>be||N.height>be)&&(Ne=be/Math.max(N.width,N.height)),Ne<1||L===!0)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap){const le=L?id:Math.floor,Ve=le(Ne*N.width),Ue=le(Ne*N.height);S===void 0&&(S=v(Ve,Ue));const Ee=ne?v(Ve,Ue):S;return Ee.width=Ve,Ee.height=Ue,Ee.getContext("2d").drawImage(N,0,0,Ve,Ue),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+N.width+"x"+N.height+") to ("+Ve+"x"+Ue+")."),Ee}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+N.width+"x"+N.height+")."),N;return N}function O(N){return lc(N.width)&&lc(N.height)}function P(N){return l?!1:N.wrapS!==Tn||N.wrapT!==Tn||N.minFilter!==qt&&N.minFilter!==rn}function D(N,L){return N.generateMipmaps&&L&&N.minFilter!==qt&&N.minFilter!==rn}function f(N){s.generateMipmap(N)}function W(N,L,ne,be,Ne=!1){if(l===!1)return L;if(N!==null){if(s[N]!==void 0)return s[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let le=L;return L===6403&&(ne===5126&&(le=33326),ne===5131&&(le=33325),ne===5121&&(le=33321)),L===33319&&(ne===5126&&(le=33328),ne===5131&&(le=33327),ne===5121&&(le=33323)),L===6408&&(ne===5126&&(le=34836),ne===5131&&(le=34842),ne===5121&&(le=be===It&&Ne===!1?35907:32856),ne===32819&&(le=32854),ne===32820&&(le=32855)),(le===33325||le===33326||le===33327||le===33328||le===34842||le===34836)&&e.get("EXT_color_buffer_float"),le}function fe(N,L,ne){return D(N,ne)===!0||N.isFramebufferTexture&&N.minFilter!==qt&&N.minFilter!==rn?Math.log2(Math.max(L.width,L.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?L.mipmaps.length:1}function Pe(N){return N===qt||N===Ol||N===Hl?9728:9729}function ge(N){const L=N.target;L.removeEventListener("dispose",ge),k(L),L.isVideoTexture&&M.delete(L),a.memory.textures--}function A(N){const L=N.target;L.removeEventListener("dispose",A),X(L)}function k(N){const L=n.get(N);L.__webglInit!==void 0&&(s.deleteTexture(L.__webglTexture),n.remove(N))}function X(N){const L=N.texture,ne=n.get(N),be=n.get(L);if(N){if(be.__webglTexture!==void 0&&(s.deleteTexture(be.__webglTexture),a.memory.textures--),N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let Ne=0;Ne<6;Ne++)s.deleteFramebuffer(ne.__webglFramebuffer[Ne]),ne.__webglDepthbuffer&&s.deleteRenderbuffer(ne.__webglDepthbuffer[Ne]);else s.deleteFramebuffer(ne.__webglFramebuffer),ne.__webglDepthbuffer&&s.deleteRenderbuffer(ne.__webglDepthbuffer),ne.__webglMultisampledFramebuffer&&s.deleteFramebuffer(ne.__webglMultisampledFramebuffer),ne.__webglColorRenderbuffer&&s.deleteRenderbuffer(ne.__webglColorRenderbuffer),ne.__webglDepthRenderbuffer&&s.deleteRenderbuffer(ne.__webglDepthRenderbuffer);if(N.isWebGLMultipleRenderTargets)for(let Ne=0,le=L.length;Ne<le;Ne++){const Ve=n.get(L[Ne]);Ve.__webglTexture&&(s.deleteTexture(Ve.__webglTexture),a.memory.textures--),n.remove(L[Ne])}n.remove(L),n.remove(N)}}let J=0;function Z(){J=0}function K(){const N=J;return N>=u&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+u),J+=1,N}function oe(N,L){const ne=n.get(N);if(N.isVideoTexture&&se(N),N.version>0&&ne.__version!==N.version){const be=N.image;if(be===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(be.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ie(ne,N,L);return}}t.activeTexture(33984+L),t.bindTexture(3553,ne.__webglTexture)}function xe(N,L){const ne=n.get(N);if(N.version>0&&ne.__version!==N.version){ie(ne,N,L);return}t.activeTexture(33984+L),t.bindTexture(35866,ne.__webglTexture)}function Ce(N,L){const ne=n.get(N);if(N.version>0&&ne.__version!==N.version){ie(ne,N,L);return}t.activeTexture(33984+L),t.bindTexture(32879,ne.__webglTexture)}function ae(N,L){const ne=n.get(N);if(N.version>0&&ne.__version!==N.version){mt(ne,N,L);return}t.activeTexture(33984+L),t.bindTexture(34067,ne.__webglTexture)}const ce={[Pa]:10497,[Tn]:33071,[Da]:33648},Le={[qt]:9728,[Ol]:9984,[Hl]:9986,[rn]:9729,[Df]:9985,[po]:9987};function Ie(N,L,ne){if(ne?(s.texParameteri(N,10242,ce[L.wrapS]),s.texParameteri(N,10243,ce[L.wrapT]),(N===32879||N===35866)&&s.texParameteri(N,32882,ce[L.wrapR]),s.texParameteri(N,10240,Le[L.magFilter]),s.texParameteri(N,10241,Le[L.minFilter])):(s.texParameteri(N,10242,33071),s.texParameteri(N,10243,33071),(N===32879||N===35866)&&s.texParameteri(N,32882,33071),(L.wrapS!==Tn||L.wrapT!==Tn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(N,10240,Pe(L.magFilter)),s.texParameteri(N,10241,Pe(L.minFilter)),L.minFilter!==qt&&L.minFilter!==rn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const be=e.get("EXT_texture_filter_anisotropic");if(L.type===zi&&e.has("OES_texture_float_linear")===!1||l===!1&&L.type===pr&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||n.get(L).__currentAnisotropy)&&(s.texParameterf(N,be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,i.getMaxAnisotropy())),n.get(L).__currentAnisotropy=L.anisotropy)}}function He(N,L){N.__webglInit===void 0&&(N.__webglInit=!0,L.addEventListener("dispose",ge),N.__webglTexture=s.createTexture(),a.memory.textures++)}function ie(N,L,ne){let be=3553;L.isDataTexture2DArray&&(be=35866),L.isDataTexture3D&&(be=32879),He(N,L),t.activeTexture(33984+ne),t.bindTexture(be,N.__webglTexture),s.pixelStorei(37440,L.flipY),s.pixelStorei(37441,L.premultiplyAlpha),s.pixelStorei(3317,L.unpackAlignment),s.pixelStorei(37443,0);const Ne=P(L)&&O(L.image)===!1;let le=y(L.image,Ne,!1,p);le=Fe(L,le);const Ve=O(le)||l,Ue=r.convert(L.format,L.encoding);let Ee=r.convert(L.type),Ae=W(L.internalFormat,Ue,Ee,L.encoding,L.isVideoTexture);Ie(be,L,Ve);let $e;const U=L.mipmaps,Be=l&&L.isVideoTexture!==!0,De=N.__version===void 0,Oe=fe(L,le,Ve);if(L.isDepthTexture)Ae=6402,l?L.type===zi?Ae=36012:L.type===ro?Ae=33190:L.type===mr?Ae=35056:Ae=33189:L.type===zi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Oi&&Ae===6402&&L.type!==ts&&L.type!==ro&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=ts,Ee=r.convert(L.type)),L.format===yr&&Ae===6402&&(Ae=34041,L.type!==mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=mr,Ee=r.convert(L.type))),Be&&De?t.texStorage2D(3553,1,Ae,le.width,le.height):t.texImage2D(3553,0,Ae,le.width,le.height,0,Ue,Ee,null);else if(L.isDataTexture)if(U.length>0&&Ve){Be&&De&&t.texStorage2D(3553,Oe,Ae,U[0].width,U[0].height);for(let te=0,qe=U.length;te<qe;te++)$e=U[te],Be?t.texSubImage2D(3553,0,0,0,$e.width,$e.height,Ue,Ee,$e.data):t.texImage2D(3553,te,Ae,$e.width,$e.height,0,Ue,Ee,$e.data);L.generateMipmaps=!1}else Be?(De&&t.texStorage2D(3553,Oe,Ae,le.width,le.height),t.texSubImage2D(3553,0,0,0,le.width,le.height,Ue,Ee,le.data)):t.texImage2D(3553,0,Ae,le.width,le.height,0,Ue,Ee,le.data);else if(L.isCompressedTexture){Be&&De&&t.texStorage2D(3553,Oe,Ae,U[0].width,U[0].height);for(let te=0,qe=U.length;te<qe;te++)$e=U[te],L.format!==ln?Ue!==null?Be?t.compressedTexSubImage2D(3553,te,0,0,$e.width,$e.height,Ue,$e.data):t.compressedTexImage2D(3553,te,Ae,$e.width,$e.height,0,$e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Be?t.texSubImage2D(3553,te,0,0,$e.width,$e.height,Ue,Ee,$e.data):t.texImage2D(3553,te,Ae,$e.width,$e.height,0,Ue,Ee,$e.data)}else if(L.isDataTexture2DArray)Be?(De&&t.texStorage3D(35866,Oe,Ae,le.width,le.height,le.depth),t.texSubImage3D(35866,0,0,0,0,le.width,le.height,le.depth,Ue,Ee,le.data)):t.texImage3D(35866,0,Ae,le.width,le.height,le.depth,0,Ue,Ee,le.data);else if(L.isDataTexture3D)Be?(De&&t.texStorage3D(32879,Oe,Ae,le.width,le.height,le.depth),t.texSubImage3D(32879,0,0,0,0,le.width,le.height,le.depth,Ue,Ee,le.data)):t.texImage3D(32879,0,Ae,le.width,le.height,le.depth,0,Ue,Ee,le.data);else if(L.isFramebufferTexture)Be&&De?t.texStorage2D(3553,Oe,Ae,le.width,le.height):t.texImage2D(3553,0,Ae,le.width,le.height,0,Ue,Ee,null);else if(U.length>0&&Ve){Be&&De&&t.texStorage2D(3553,Oe,Ae,U[0].width,U[0].height);for(let te=0,qe=U.length;te<qe;te++)$e=U[te],Be?t.texSubImage2D(3553,te,0,0,Ue,Ee,$e):t.texImage2D(3553,te,Ae,Ue,Ee,$e);L.generateMipmaps=!1}else Be?(De&&t.texStorage2D(3553,Oe,Ae,le.width,le.height),t.texSubImage2D(3553,0,0,0,Ue,Ee,le)):t.texImage2D(3553,0,Ae,Ue,Ee,le);D(L,Ve)&&f(be),N.__version=L.version,L.onUpdate&&L.onUpdate(L)}function mt(N,L,ne){if(L.image.length!==6)return;He(N,L),t.activeTexture(33984+ne),t.bindTexture(34067,N.__webglTexture),s.pixelStorei(37440,L.flipY),s.pixelStorei(37441,L.premultiplyAlpha),s.pixelStorei(3317,L.unpackAlignment),s.pixelStorei(37443,0);const be=L&&(L.isCompressedTexture||L.image[0].isCompressedTexture),Ne=L.image[0]&&L.image[0].isDataTexture,le=[];for(let te=0;te<6;te++)!be&&!Ne?le[te]=y(L.image[te],!1,!0,h):le[te]=Ne?L.image[te].image:L.image[te],le[te]=Fe(L,le[te]);const Ve=le[0],Ue=O(Ve)||l,Ee=r.convert(L.format,L.encoding),Ae=r.convert(L.type),$e=W(L.internalFormat,Ee,Ae,L.encoding),U=l&&L.isVideoTexture!==!0,Be=N.__version===void 0;let De=fe(L,Ve,Ue);Ie(34067,L,Ue);let Oe;if(be){U&&Be&&t.texStorage2D(34067,De,$e,Ve.width,Ve.height);for(let te=0;te<6;te++){Oe=le[te].mipmaps;for(let qe=0;qe<Oe.length;qe++){const ct=Oe[qe];L.format!==ln?Ee!==null?U?t.compressedTexSubImage2D(34069+te,qe,0,0,ct.width,ct.height,Ee,ct.data):t.compressedTexImage2D(34069+te,qe,$e,ct.width,ct.height,0,ct.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):U?t.texSubImage2D(34069+te,qe,0,0,ct.width,ct.height,Ee,Ae,ct.data):t.texImage2D(34069+te,qe,$e,ct.width,ct.height,0,Ee,Ae,ct.data)}}}else{Oe=L.mipmaps,U&&Be&&(Oe.length>0&&De++,t.texStorage2D(34067,De,$e,le[0].width,le[0].height));for(let te=0;te<6;te++)if(Ne){U?t.texSubImage2D(34069+te,0,0,0,le[te].width,le[te].height,Ee,Ae,le[te].data):t.texImage2D(34069+te,0,$e,le[te].width,le[te].height,0,Ee,Ae,le[te].data);for(let qe=0;qe<Oe.length;qe++){const Lt=Oe[qe].image[te].image;U?t.texSubImage2D(34069+te,qe+1,0,0,Lt.width,Lt.height,Ee,Ae,Lt.data):t.texImage2D(34069+te,qe+1,$e,Lt.width,Lt.height,0,Ee,Ae,Lt.data)}}else{U?t.texSubImage2D(34069+te,0,0,0,Ee,Ae,le[te]):t.texImage2D(34069+te,0,$e,Ee,Ae,le[te]);for(let qe=0;qe<Oe.length;qe++){const ct=Oe[qe];U?t.texSubImage2D(34069+te,qe+1,0,0,Ee,Ae,ct.image[te]):t.texImage2D(34069+te,qe+1,$e,Ee,Ae,ct.image[te])}}}D(L,Ue)&&f(34067),N.__version=L.version,L.onUpdate&&L.onUpdate(L)}function ze(N,L,ne,be,Ne){const le=r.convert(ne.format,ne.encoding),Ve=r.convert(ne.type),Ue=W(ne.internalFormat,le,Ve,ne.encoding);n.get(L).__hasExternalTextures||(Ne===32879||Ne===35866?t.texImage3D(Ne,0,Ue,L.width,L.height,L.depth,0,le,Ve,null):t.texImage2D(Ne,0,Ue,L.width,L.height,0,le,Ve,null)),t.bindFramebuffer(36160,N),L.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,be,Ne,n.get(ne).__webglTexture,0,Re(L)):s.framebufferTexture2D(36160,be,Ne,n.get(ne).__webglTexture,0),t.bindFramebuffer(36160,null)}function Xe(N,L,ne){if(s.bindRenderbuffer(36161,N),L.depthBuffer&&!L.stencilBuffer){let be=33189;if(ne||L.useRenderToTexture){const Ne=L.depthTexture;Ne&&Ne.isDepthTexture&&(Ne.type===zi?be=36012:Ne.type===ro&&(be=33190));const le=Re(L);L.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,le,be,L.width,L.height):s.renderbufferStorageMultisample(36161,le,be,L.width,L.height)}else s.renderbufferStorage(36161,be,L.width,L.height);s.framebufferRenderbuffer(36160,36096,36161,N)}else if(L.depthBuffer&&L.stencilBuffer){const be=Re(L);ne&&L.useRenderbuffer?s.renderbufferStorageMultisample(36161,be,35056,L.width,L.height):L.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,be,35056,L.width,L.height):s.renderbufferStorage(36161,34041,L.width,L.height),s.framebufferRenderbuffer(36160,33306,36161,N)}else{const be=L.isWebGLMultipleRenderTargets===!0?L.texture[0]:L.texture,Ne=r.convert(be.format,be.encoding),le=r.convert(be.type),Ve=W(be.internalFormat,Ne,le,be.encoding),Ue=Re(L);ne&&L.useRenderbuffer?s.renderbufferStorageMultisample(36161,Ue,Ve,L.width,L.height):L.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,Ue,Ve,L.width,L.height):s.renderbufferStorage(36161,Ve,L.width,L.height)}s.bindRenderbuffer(36161,null)}function Se(N,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,N),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),oe(L.depthTexture,0);const be=n.get(L.depthTexture).__webglTexture,Ne=Re(L);if(L.depthTexture.format===Oi)L.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,36096,3553,be,0,Ne):s.framebufferTexture2D(36160,36096,3553,be,0);else if(L.depthTexture.format===yr)L.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,33306,3553,be,0,Ne):s.framebufferTexture2D(36160,33306,3553,be,0);else throw new Error("Unknown depthTexture format")}function at(N){const L=n.get(N),ne=N.isWebGLCubeRenderTarget===!0;if(N.depthTexture&&!L.__autoAllocateDepthBuffer){if(ne)throw new Error("target.depthTexture not supported in Cube render targets");Se(L.__webglFramebuffer,N)}else if(ne){L.__webglDepthbuffer=[];for(let be=0;be<6;be++)t.bindFramebuffer(36160,L.__webglFramebuffer[be]),L.__webglDepthbuffer[be]=s.createRenderbuffer(),Xe(L.__webglDepthbuffer[be],N,!1)}else t.bindFramebuffer(36160,L.__webglFramebuffer),L.__webglDepthbuffer=s.createRenderbuffer(),Xe(L.__webglDepthbuffer,N,!1);t.bindFramebuffer(36160,null)}function Qe(N,L,ne){const be=n.get(N);L!==void 0&&ze(be.__webglFramebuffer,N,N.texture,36064,3553),ne!==void 0&&at(N)}function de(N){const L=N.texture,ne=n.get(N),be=n.get(L);N.addEventListener("dispose",A),N.isWebGLMultipleRenderTargets!==!0&&(be.__webglTexture===void 0&&(be.__webglTexture=s.createTexture()),be.__version=L.version,a.memory.textures++);const Ne=N.isWebGLCubeRenderTarget===!0,le=N.isWebGLMultipleRenderTargets===!0,Ve=L.isDataTexture3D||L.isDataTexture2DArray,Ue=O(N)||l;if(Ne){ne.__webglFramebuffer=[];for(let Ee=0;Ee<6;Ee++)ne.__webglFramebuffer[Ee]=s.createFramebuffer()}else if(ne.__webglFramebuffer=s.createFramebuffer(),le)if(i.drawBuffers){const Ee=N.texture;for(let Ae=0,$e=Ee.length;Ae<$e;Ae++){const U=n.get(Ee[Ae]);U.__webglTexture===void 0&&(U.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(N.useRenderbuffer)if(l){ne.__webglMultisampledFramebuffer=s.createFramebuffer(),ne.__webglColorRenderbuffer=s.createRenderbuffer(),s.bindRenderbuffer(36161,ne.__webglColorRenderbuffer);const Ee=r.convert(L.format,L.encoding),Ae=r.convert(L.type),$e=W(L.internalFormat,Ee,Ae,L.encoding),U=Re(N);s.renderbufferStorageMultisample(36161,U,$e,N.width,N.height),t.bindFramebuffer(36160,ne.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064,36161,ne.__webglColorRenderbuffer),s.bindRenderbuffer(36161,null),N.depthBuffer&&(ne.__webglDepthRenderbuffer=s.createRenderbuffer(),Xe(ne.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(Ne){t.bindTexture(34067,be.__webglTexture),Ie(34067,L,Ue);for(let Ee=0;Ee<6;Ee++)ze(ne.__webglFramebuffer[Ee],N,L,36064,34069+Ee);D(L,Ue)&&f(34067),t.unbindTexture()}else if(le){const Ee=N.texture;for(let Ae=0,$e=Ee.length;Ae<$e;Ae++){const U=Ee[Ae],Be=n.get(U);t.bindTexture(3553,Be.__webglTexture),Ie(3553,U,Ue),ze(ne.__webglFramebuffer,N,U,36064+Ae,3553),D(U,Ue)&&f(3553)}t.unbindTexture()}else{let Ee=3553;Ve&&(l?Ee=L.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(Ee,be.__webglTexture),Ie(Ee,L,Ue),ze(ne.__webglFramebuffer,N,L,36064,Ee),D(L,Ue)&&f(Ee),t.unbindTexture()}N.depthBuffer&&at(N)}function ye(N){const L=O(N)||l,ne=N.isWebGLMultipleRenderTargets===!0?N.texture:[N.texture];for(let be=0,Ne=ne.length;be<Ne;be++){const le=ne[be];if(D(le,L)){const Ve=N.isWebGLCubeRenderTarget?34067:3553,Ue=n.get(le).__webglTexture;t.bindTexture(Ve,Ue),f(Ve),t.unbindTexture()}}}function _e(N){if(N.useRenderbuffer)if(l){const L=N.width,ne=N.height;let be=16384;const Ne=[36064],le=N.stencilBuffer?33306:36096;N.depthBuffer&&Ne.push(le),N.ignoreDepthForMultisampleCopy||(N.depthBuffer&&(be|=256),N.stencilBuffer&&(be|=1024));const Ve=n.get(N);t.bindFramebuffer(36008,Ve.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ve.__webglFramebuffer),N.ignoreDepthForMultisampleCopy&&(s.invalidateFramebuffer(36008,[le]),s.invalidateFramebuffer(36009,[le])),s.blitFramebuffer(0,0,L,ne,0,0,L,ne,be,9728),s.invalidateFramebuffer(36008,Ne),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,Ve.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Re(N){return l&&(N.useRenderbuffer||N.useRenderToTexture)?Math.min(m,N.samples):0}function se(N){const L=a.render.frame;M.get(N)!==L&&(M.set(N,L),N.update())}function Fe(N,L){const ne=N.encoding,be=N.format,Ne=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||N.format===Ia||ne!==Mi&&(ne===It?l===!1?e.has("EXT_sRGB")===!0&&be===ln?(N.format=Ia,N.minFilter=rn,N.generateMipmaps=!1):L=ki.sRGBToLinear(L):(be!==ln||Ne!==vi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ne)),L}let et=!1,ht=!1;function St(N,L){N&&N.isWebGLRenderTarget&&(et===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),et=!0),N=N.texture),oe(N,L)}function vt(N,L){N&&N.isWebGLCubeRenderTarget&&(ht===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ht=!0),N=N.texture),ae(N,L)}this.allocateTextureUnit=K,this.resetTextureUnits=Z,this.setTexture2D=oe,this.setTexture2DArray=xe,this.setTexture3D=Ce,this.setTextureCube=ae,this.rebindTextures=Qe,this.setupRenderTarget=de,this.updateRenderTargetMipmap=ye,this.updateMultisampleRenderTarget=_e,this.setupDepthRenderbuffer=at,this.setupFrameBufferTexture=ze,this.safeSetTexture2D=St,this.safeSetTextureCube=vt}function Fx(s,e,t){const n=t.isWebGL2;function i(r,a=null){let l;if(r===vi)return 5121;if(r===Bf)return 32819;if(r===zf)return 32820;if(r===If)return 5120;if(r===Nf)return 5122;if(r===ts)return 5123;if(r===Ff)return 5124;if(r===ro)return 5125;if(r===zi)return 5126;if(r===pr)return n?5131:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(r===Of)return 6406;if(r===ln)return 6408;if(r===Uf)return 6409;if(r===kf)return 6410;if(r===Oi)return 6402;if(r===yr)return 34041;if(r===Vf)return 6403;if(r===Hf)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Ia)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(r===Gf)return 36244;if(r===Wf)return 33319;if(r===qf)return 33320;if(r===jf)return 36249;if(r===Vo||r===Go||r===Wo||r===qo)if(a===It)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(r===Vo)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Go)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Wo)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===qo)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(r===Vo)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Go)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Wo)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===qo)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Ul||r===kl||r===Vl||r===Gl)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(r===Ul)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===kl)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Vl)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Gl)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Xf)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Wl||r===ql)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(r===Wl)return a===It?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(r===ql)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===jl||r===Xl||r===Yl||r===Jl||r===$l||r===Zl||r===Kl||r===Ql||r===ec||r===tc||r===nc||r===ic||r===rc||r===sc)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(r===jl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Xl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Yl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Jl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===$l)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Zl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Kl)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Ql)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===ec)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===tc)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===nc)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===ic)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===rc)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===sc)return a===It?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===oc)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(r===oc)return a===It?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===mr)return n?34042:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class Uu extends pn{constructor(e=[]){super(),this.cameras=e}}Uu.prototype.isArrayCamera=!0;class $r extends Mt{constructor(){super(),this.type="Group"}}$r.prototype.isGroup=!0;const Bx={type:"move"};class _a{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new $r,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new $r,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new z,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new z),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new $r,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new z,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new z),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const l=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(l!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(Bx))),h&&e.hand){a=!0;for(const S of e.hand.values()){const C=t.getJointPose(S,n);if(h.joints[S.jointName]===void 0){const y=new $r;y.matrixAutoUpdate=!1,y.visible=!1,h.joints[S.jointName]=y,h.add(y)}const v=h.joints[S.jointName];C!==null&&(v.matrix.fromArray(C.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=C.radius),v.visible=C!==null}const p=h.joints["index-finger-tip"],m=h.joints["thumb-tip"],x=p.position.distanceTo(m.position),_=.02,M=.005;h.inputState.pinching&&x>_+M?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&x<=_-M&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));return l!==null&&(l.visible=i!==null),u!==null&&(u.visible=r!==null),h!==null&&(h.visible=a!==null),this}}class Ba extends $t{constructor(e,t,n,i,r,a,l,u,h,p){if(p=p!==void 0?p:Oi,p!==Oi&&p!==yr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===Oi&&(n=ts),n===void 0&&p===yr&&(n=mr),super(null,i,r,a,l,u,p,n,h),this.image={width:e,height:t},this.magFilter=l!==void 0?l:qt,this.minFilter=u!==void 0?u:qt,this.flipY=!1,this.generateMipmaps=!1}}Ba.prototype.isDepthTexture=!0;class zx extends Ui{constructor(e,t){super();const n=this;let i=null,r=1,a=null,l="local-floor";const u=e.extensions.has("WEBGL_multisampled_render_to_texture");let h=null,p=null,m=null,x=null,_=!1,M=null;const S=t.getContextAttributes();let C=null,v=null;const y=[],O=new Map,P=new pn;P.layers.enable(1),P.viewport=new Ct;const D=new pn;D.layers.enable(2),D.viewport=new Ct;const f=[P,D],W=new Uu;W.layers.enable(1),W.layers.enable(2);let fe=null,Pe=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ae){let ce=y[ae];return ce===void 0&&(ce=new _a,y[ae]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(ae){let ce=y[ae];return ce===void 0&&(ce=new _a,y[ae]=ce),ce.getGripSpace()},this.getHand=function(ae){let ce=y[ae];return ce===void 0&&(ce=new _a,y[ae]=ce),ce.getHandSpace()};function ge(ae){const ce=O.get(ae.inputSource);ce&&ce.dispatchEvent({type:ae.type,data:ae.inputSource})}function A(){O.forEach(function(ae,ce){ae.disconnect(ce)}),O.clear(),fe=null,Pe=null,e.setRenderTarget(C),x=null,m=null,p=null,i=null,v=null,Ce.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ae){r=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ae){l=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return m!==null?m:x},this.getBinding=function(){return p},this.getFrame=function(){return M},this.getSession=function(){return i},this.setSession=async function(ae){if(i=ae,i!==null){if(C=e.getRenderTarget(),i.addEventListener("select",ge),i.addEventListener("selectstart",ge),i.addEventListener("selectend",ge),i.addEventListener("squeeze",ge),i.addEventListener("squeezestart",ge),i.addEventListener("squeezeend",ge),i.addEventListener("end",A),i.addEventListener("inputsourceschange",k),S.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ce={antialias:i.renderState.layers===void 0?S.antialias:!0,alpha:S.alpha,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:r};x=new XRWebGLLayer(i,t,ce),i.updateRenderState({baseLayer:x}),v=new Rn(x.framebufferWidth,x.framebufferHeight,{format:ln,type:vi,encoding:e.outputEncoding})}else{_=S.antialias;let ce=null,Le=null,Ie=null;S.depth&&(Ie=S.stencil?35056:33190,ce=S.stencil?yr:Oi,Le=S.stencil?mr:ts);const He={colorFormat:e.outputEncoding===It?35907:32856,depthFormat:Ie,scaleFactor:r};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(He),i.updateRenderState({layers:[m]}),_?v=new qa(m.textureWidth,m.textureHeight,{format:ln,type:vi,depthTexture:new Ba(m.textureWidth,m.textureHeight,Le,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:S.stencil,ignoreDepth:m.ignoreDepthValues,useRenderToTexture:u,encoding:e.outputEncoding}):v=new Rn(m.textureWidth,m.textureHeight,{format:ln,type:vi,depthTexture:new Ba(m.textureWidth,m.textureHeight,Le,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:S.stencil,ignoreDepth:m.ignoreDepthValues,encoding:e.outputEncoding})}v.isXRRenderTarget=!0,this.setFoveation(1),a=await i.requestReferenceSpace(l),Ce.setContext(i),Ce.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function k(ae){const ce=i.inputSources;for(let Le=0;Le<y.length;Le++)O.set(ce[Le],y[Le]);for(let Le=0;Le<ae.removed.length;Le++){const Ie=ae.removed[Le],He=O.get(Ie);He&&(He.dispatchEvent({type:"disconnected",data:Ie}),O.delete(Ie))}for(let Le=0;Le<ae.added.length;Le++){const Ie=ae.added[Le],He=O.get(Ie);He&&He.dispatchEvent({type:"connected",data:Ie})}}const X=new z,J=new z;function Z(ae,ce,Le){X.setFromMatrixPosition(ce.matrixWorld),J.setFromMatrixPosition(Le.matrixWorld);const Ie=X.distanceTo(J),He=ce.projectionMatrix.elements,ie=Le.projectionMatrix.elements,mt=He[14]/(He[10]-1),ze=He[14]/(He[10]+1),Xe=(He[9]+1)/He[5],Se=(He[9]-1)/He[5],at=(He[8]-1)/He[0],Qe=(ie[8]+1)/ie[0],de=mt*at,ye=mt*Qe,_e=Ie/(-at+Qe),Re=_e*-at;ce.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(Re),ae.translateZ(_e),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert();const se=mt+_e,Fe=ze+_e,et=de-Re,ht=ye+(Ie-Re),St=Xe*ze/Fe*se,vt=Se*ze/Fe*se;ae.projectionMatrix.makePerspective(et,ht,St,vt,se,Fe)}function K(ae,ce){ce===null?ae.matrixWorld.copy(ae.matrix):ae.matrixWorld.multiplyMatrices(ce.matrixWorld,ae.matrix),ae.matrixWorldInverse.copy(ae.matrixWorld).invert()}this.updateCamera=function(ae){if(i===null)return;W.near=D.near=P.near=ae.near,W.far=D.far=P.far=ae.far,(fe!==W.near||Pe!==W.far)&&(i.updateRenderState({depthNear:W.near,depthFar:W.far}),fe=W.near,Pe=W.far);const ce=ae.parent,Le=W.cameras;K(W,ce);for(let He=0;He<Le.length;He++)K(Le[He],ce);W.matrixWorld.decompose(W.position,W.quaternion,W.scale),ae.position.copy(W.position),ae.quaternion.copy(W.quaternion),ae.scale.copy(W.scale),ae.matrix.copy(W.matrix),ae.matrixWorld.copy(W.matrixWorld);const Ie=ae.children;for(let He=0,ie=Ie.length;He<ie;He++)Ie[He].updateMatrixWorld(!0);Le.length===2?Z(W,P,D):W.projectionMatrix.copy(P.projectionMatrix)},this.getCamera=function(){return W},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(x!==null)return x.fixedFoveation},this.setFoveation=function(ae){m!==null&&(m.fixedFoveation=ae),x!==null&&x.fixedFoveation!==void 0&&(x.fixedFoveation=ae)};let oe=null;function xe(ae,ce){if(h=ce.getViewerPose(a),M=ce,h!==null){const Ie=h.views;x!==null&&(e.setRenderTargetFramebuffer(v,x.framebuffer),e.setRenderTarget(v));let He=!1;Ie.length!==W.cameras.length&&(W.cameras.length=0,He=!0);for(let ie=0;ie<Ie.length;ie++){const mt=Ie[ie];let ze=null;if(x!==null)ze=x.getViewport(mt);else{const Se=p.getViewSubImage(m,mt);ze=Se.viewport,ie===0&&(e.setRenderTargetTextures(v,Se.colorTexture,m.ignoreDepthValues?void 0:Se.depthStencilTexture),e.setRenderTarget(v))}const Xe=f[ie];Xe.matrix.fromArray(mt.transform.matrix),Xe.projectionMatrix.fromArray(mt.projectionMatrix),Xe.viewport.set(ze.x,ze.y,ze.width,ze.height),ie===0&&W.matrix.copy(Xe.matrix),He===!0&&W.cameras.push(Xe)}}const Le=i.inputSources;for(let Ie=0;Ie<y.length;Ie++){const He=y[Ie],ie=Le[Ie];He.update(ie,ce,a)}oe&&oe(ae,ce),M=null}const Ce=new Eu;Ce.setAnimationLoop(xe),this.setAnimationLoop=function(ae){oe=ae},this.dispose=function(){}}}function Ox(s){function e(v,y){v.fogColor.value.copy(y.color),y.isFog?(v.fogNear.value=y.near,v.fogFar.value=y.far):y.isFogExp2&&(v.fogDensity.value=y.density)}function t(v,y,O,P,D){y.isMeshBasicMaterial?n(v,y):y.isMeshLambertMaterial?(n(v,y),u(v,y)):y.isMeshToonMaterial?(n(v,y),p(v,y)):y.isMeshPhongMaterial?(n(v,y),h(v,y)):y.isMeshStandardMaterial?(n(v,y),y.isMeshPhysicalMaterial?x(v,y,D):m(v,y)):y.isMeshMatcapMaterial?(n(v,y),_(v,y)):y.isMeshDepthMaterial?(n(v,y),M(v,y)):y.isMeshDistanceMaterial?(n(v,y),S(v,y)):y.isMeshNormalMaterial?(n(v,y),C(v,y)):y.isLineBasicMaterial?(i(v,y),y.isLineDashedMaterial&&r(v,y)):y.isPointsMaterial?a(v,y,O,P):y.isSpriteMaterial?l(v,y):y.isShadowMaterial?(v.color.value.copy(y.color),v.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function n(v,y){v.opacity.value=y.opacity,y.color&&v.diffuse.value.copy(y.color),y.emissive&&v.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(v.map.value=y.map),y.alphaMap&&(v.alphaMap.value=y.alphaMap),y.specularMap&&(v.specularMap.value=y.specularMap),y.alphaTest>0&&(v.alphaTest.value=y.alphaTest);const O=s.get(y).envMap;O&&(v.envMap.value=O,v.flipEnvMap.value=O.isCubeTexture&&O.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=y.reflectivity,v.ior.value=y.ior,v.refractionRatio.value=y.refractionRatio),y.lightMap&&(v.lightMap.value=y.lightMap,v.lightMapIntensity.value=y.lightMapIntensity),y.aoMap&&(v.aoMap.value=y.aoMap,v.aoMapIntensity.value=y.aoMapIntensity);let P;y.map?P=y.map:y.specularMap?P=y.specularMap:y.displacementMap?P=y.displacementMap:y.normalMap?P=y.normalMap:y.bumpMap?P=y.bumpMap:y.roughnessMap?P=y.roughnessMap:y.metalnessMap?P=y.metalnessMap:y.alphaMap?P=y.alphaMap:y.emissiveMap?P=y.emissiveMap:y.clearcoatMap?P=y.clearcoatMap:y.clearcoatNormalMap?P=y.clearcoatNormalMap:y.clearcoatRoughnessMap?P=y.clearcoatRoughnessMap:y.specularIntensityMap?P=y.specularIntensityMap:y.specularColorMap?P=y.specularColorMap:y.transmissionMap?P=y.transmissionMap:y.thicknessMap?P=y.thicknessMap:y.sheenColorMap?P=y.sheenColorMap:y.sheenRoughnessMap&&(P=y.sheenRoughnessMap),P!==void 0&&(P.isWebGLRenderTarget&&(P=P.texture),P.matrixAutoUpdate===!0&&P.updateMatrix(),v.uvTransform.value.copy(P.matrix));let D;y.aoMap?D=y.aoMap:y.lightMap&&(D=y.lightMap),D!==void 0&&(D.isWebGLRenderTarget&&(D=D.texture),D.matrixAutoUpdate===!0&&D.updateMatrix(),v.uv2Transform.value.copy(D.matrix))}function i(v,y){v.diffuse.value.copy(y.color),v.opacity.value=y.opacity}function r(v,y){v.dashSize.value=y.dashSize,v.totalSize.value=y.dashSize+y.gapSize,v.scale.value=y.scale}function a(v,y,O,P){v.diffuse.value.copy(y.color),v.opacity.value=y.opacity,v.size.value=y.size*O,v.scale.value=P*.5,y.map&&(v.map.value=y.map),y.alphaMap&&(v.alphaMap.value=y.alphaMap),y.alphaTest>0&&(v.alphaTest.value=y.alphaTest);let D;y.map?D=y.map:y.alphaMap&&(D=y.alphaMap),D!==void 0&&(D.matrixAutoUpdate===!0&&D.updateMatrix(),v.uvTransform.value.copy(D.matrix))}function l(v,y){v.diffuse.value.copy(y.color),v.opacity.value=y.opacity,v.rotation.value=y.rotation,y.map&&(v.map.value=y.map),y.alphaMap&&(v.alphaMap.value=y.alphaMap),y.alphaTest>0&&(v.alphaTest.value=y.alphaTest);let O;y.map?O=y.map:y.alphaMap&&(O=y.alphaMap),O!==void 0&&(O.matrixAutoUpdate===!0&&O.updateMatrix(),v.uvTransform.value.copy(O.matrix))}function u(v,y){y.emissiveMap&&(v.emissiveMap.value=y.emissiveMap)}function h(v,y){v.specular.value.copy(y.specular),v.shininess.value=Math.max(y.shininess,1e-4),y.emissiveMap&&(v.emissiveMap.value=y.emissiveMap),y.bumpMap&&(v.bumpMap.value=y.bumpMap,v.bumpScale.value=y.bumpScale,y.side===Wt&&(v.bumpScale.value*=-1)),y.normalMap&&(v.normalMap.value=y.normalMap,v.normalScale.value.copy(y.normalScale),y.side===Wt&&v.normalScale.value.negate()),y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)}function p(v,y){y.gradientMap&&(v.gradientMap.value=y.gradientMap),y.emissiveMap&&(v.emissiveMap.value=y.emissiveMap),y.bumpMap&&(v.bumpMap.value=y.bumpMap,v.bumpScale.value=y.bumpScale,y.side===Wt&&(v.bumpScale.value*=-1)),y.normalMap&&(v.normalMap.value=y.normalMap,v.normalScale.value.copy(y.normalScale),y.side===Wt&&v.normalScale.value.negate()),y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)}function m(v,y){v.roughness.value=y.roughness,v.metalness.value=y.metalness,y.roughnessMap&&(v.roughnessMap.value=y.roughnessMap),y.metalnessMap&&(v.metalnessMap.value=y.metalnessMap),y.emissiveMap&&(v.emissiveMap.value=y.emissiveMap),y.bumpMap&&(v.bumpMap.value=y.bumpMap,v.bumpScale.value=y.bumpScale,y.side===Wt&&(v.bumpScale.value*=-1)),y.normalMap&&(v.normalMap.value=y.normalMap,v.normalScale.value.copy(y.normalScale),y.side===Wt&&v.normalScale.value.negate()),y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias),s.get(y).envMap&&(v.envMapIntensity.value=y.envMapIntensity)}function x(v,y,O){m(v,y),v.ior.value=y.ior,y.sheen>0&&(v.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),v.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(v.sheenColorMap.value=y.sheenColorMap),y.sheenRoughnessMap&&(v.sheenRoughnessMap.value=y.sheenRoughnessMap)),y.clearcoat>0&&(v.clearcoat.value=y.clearcoat,v.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(v.clearcoatMap.value=y.clearcoatMap),y.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap),y.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),v.clearcoatNormalMap.value=y.clearcoatNormalMap,y.side===Wt&&v.clearcoatNormalScale.value.negate())),y.transmission>0&&(v.transmission.value=y.transmission,v.transmissionSamplerMap.value=O.texture,v.transmissionSamplerSize.value.set(O.width,O.height),y.transmissionMap&&(v.transmissionMap.value=y.transmissionMap),v.thickness.value=y.thickness,y.thicknessMap&&(v.thicknessMap.value=y.thicknessMap),v.attenuationDistance.value=y.attenuationDistance,v.attenuationColor.value.copy(y.attenuationColor)),v.specularIntensity.value=y.specularIntensity,v.specularColor.value.copy(y.specularColor),y.specularIntensityMap&&(v.specularIntensityMap.value=y.specularIntensityMap),y.specularColorMap&&(v.specularColorMap.value=y.specularColorMap)}function _(v,y){y.matcap&&(v.matcap.value=y.matcap),y.bumpMap&&(v.bumpMap.value=y.bumpMap,v.bumpScale.value=y.bumpScale,y.side===Wt&&(v.bumpScale.value*=-1)),y.normalMap&&(v.normalMap.value=y.normalMap,v.normalScale.value.copy(y.normalScale),y.side===Wt&&v.normalScale.value.negate()),y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)}function M(v,y){y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)}function S(v,y){y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias),v.referencePosition.value.copy(y.referencePosition),v.nearDistance.value=y.nearDistance,v.farDistance.value=y.farDistance}function C(v,y){y.bumpMap&&(v.bumpMap.value=y.bumpMap,v.bumpScale.value=y.bumpScale,y.side===Wt&&(v.bumpScale.value*=-1)),y.normalMap&&(v.normalMap.value=y.normalMap,v.normalScale.value.copy(y.normalScale),y.side===Wt&&v.normalScale.value.negate()),y.displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function Hx(){const s=is("canvas");return s.style.display="block",s}function wt(s={}){const e=s.canvas!==void 0?s.canvas:Hx(),t=s.context!==void 0?s.context:null,n=s.alpha!==void 0?s.alpha:!1,i=s.depth!==void 0?s.depth:!0,r=s.stencil!==void 0?s.stencil:!0,a=s.antialias!==void 0?s.antialias:!1,l=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,u=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,h=s.powerPreference!==void 0?s.powerPreference:"default",p=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let m=null,x=null;const _=[],M=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Mi,this.physicallyCorrectLights=!1,this.toneMapping=xi,this.toneMappingExposure=1;const S=this;let C=!1,v=0,y=0,O=null,P=-1,D=null;const f=new Ct,W=new Ct;let fe=null,Pe=e.width,ge=e.height,A=1,k=null,X=null;const J=new Ct(0,0,Pe,ge),Z=new Ct(0,0,Pe,ge);let K=!1;const oe=new xo;let xe=!1,Ce=!1,ae=null;const ce=new Ke,Le=new z,Ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function He(){return O===null?A:1}let ie=t;function mt(R,j){for(let Q=0;Q<R.length;Q++){const $=R[Q],ue=e.getContext($,j);if(ue!==null)return ue}return null}try{const R={alpha:!0,depth:i,stencil:r,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:h,failIfMajorPerformanceCaveat:p};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Va}`),e.addEventListener("webglcontextlost",$e,!1),e.addEventListener("webglcontextrestored",U,!1),ie===null){const j=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&j.shift(),ie=mt(j,R),ie===null)throw mt(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ie.getShaderPrecisionFormat===void 0&&(ie.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let ze,Xe,Se,at,Qe,de,ye,_e,Re,se,Fe,et,ht,St,vt,N,L,ne,be,Ne,le,Ve,Ue;function Ee(){ze=new rg(ie),Xe=new Km(ie,ze,s),ze.init(Xe),Ve=new Fx(ie,ze,Xe),Se=new Ix(ie,ze,Xe),at=new ag,Qe=new Mx,de=new Nx(ie,ze,Se,Qe,Xe,Ve,at),ye=new eg(S),_e=new ig(S),Re=new Md(ie,Xe),Ue=new $m(ie,ze,Re,Xe),se=new sg(ie,Re,at,Ue),Fe=new hg(ie,se,Re,at),be=new ug(ie,Xe,de),N=new Qm(Qe),et=new bx(S,ye,_e,ze,Xe,Ue,N),ht=new Ox(Qe),St=new Sx,vt=new Rx(ze,Xe),ne=new Jm(S,ye,Se,Fe,n,l),L=new Hu(S,Fe,Xe),Ne=new Zm(ie,ze,at,Xe),le=new og(ie,ze,at,Xe),at.programs=et.programs,S.capabilities=Xe,S.extensions=ze,S.properties=Qe,S.renderLists=St,S.shadowMap=L,S.state=Se,S.info=at}Ee();const Ae=new zx(S,ie);this.xr=Ae,this.getContext=function(){return ie},this.getContextAttributes=function(){return ie.getContextAttributes()},this.forceContextLoss=function(){const R=ze.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=ze.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(R){R!==void 0&&(A=R,this.setSize(Pe,ge,!1))},this.getSize=function(R){return R.set(Pe,ge)},this.setSize=function(R,j,Q){if(Ae.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Pe=R,ge=j,e.width=Math.floor(R*A),e.height=Math.floor(j*A),Q!==!1&&(e.style.width=R+"px",e.style.height=j+"px"),this.setViewport(0,0,R,j)},this.getDrawingBufferSize=function(R){return R.set(Pe*A,ge*A).floor()},this.setDrawingBufferSize=function(R,j,Q){Pe=R,ge=j,A=Q,e.width=Math.floor(R*Q),e.height=Math.floor(j*Q),this.setViewport(0,0,R,j)},this.getCurrentViewport=function(R){return R.copy(f)},this.getViewport=function(R){return R.copy(J)},this.setViewport=function(R,j,Q,$){R.isVector4?J.set(R.x,R.y,R.z,R.w):J.set(R,j,Q,$),Se.viewport(f.copy(J).multiplyScalar(A).floor())},this.getScissor=function(R){return R.copy(Z)},this.setScissor=function(R,j,Q,$){R.isVector4?Z.set(R.x,R.y,R.z,R.w):Z.set(R,j,Q,$),Se.scissor(W.copy(Z).multiplyScalar(A).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(R){Se.setScissorTest(K=R)},this.setOpaqueSort=function(R){k=R},this.setTransparentSort=function(R){X=R},this.getClearColor=function(R){return R.copy(ne.getClearColor())},this.setClearColor=function(){ne.setClearColor.apply(ne,arguments)},this.getClearAlpha=function(){return ne.getClearAlpha()},this.setClearAlpha=function(){ne.setClearAlpha.apply(ne,arguments)},this.clear=function(R,j,Q){let $=0;(R===void 0||R)&&($|=16384),(j===void 0||j)&&($|=256),(Q===void 0||Q)&&($|=1024),ie.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",$e,!1),e.removeEventListener("webglcontextrestored",U,!1),St.dispose(),vt.dispose(),Qe.dispose(),ye.dispose(),_e.dispose(),Fe.dispose(),Ue.dispose(),et.dispose(),Ae.dispose(),Ae.removeEventListener("sessionstart",ct),Ae.removeEventListener("sessionend",Lt),ae&&(ae.dispose(),ae=null),en.stop()};function $e(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function U(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const R=at.autoReset,j=L.enabled,Q=L.autoUpdate,$=L.needsUpdate,ue=L.type;Ee(),at.autoReset=R,L.enabled=j,L.autoUpdate=Q,L.needsUpdate=$,L.type=ue}function Be(R){const j=R.target;j.removeEventListener("dispose",Be),De(j)}function De(R){Oe(R),Qe.remove(R)}function Oe(R){const j=Qe.get(R).programs;j!==void 0&&(j.forEach(function(Q){et.releaseProgram(Q)}),R.isShaderMaterial&&et.releaseShaderCache(R))}this.renderBufferDirect=function(R,j,Q,$,ue,tt){j===null&&(j=Ie);const nt=ue.isMesh&&ue.matrixWorld.determinant()<0,ot=So(R,j,Q,$,ue);Se.setMaterial($,nt);let rt=Q.index;const xt=Q.attributes.position;if(rt===null){if(xt===void 0||xt.count===0)return}else if(rt.count===0)return;let ft=1;$.wireframe===!0&&(rt=se.getWireframeAttribute(Q),ft=2),Ue.setup(ue,$,ot,Q,rt);let dt,Pt=Ne;rt!==null&&(dt=Re.get(rt),Pt=le,Pt.setIndex(dt));const gn=rt!==null?rt.count:xt.count,jn=Q.drawRange.start*ft,pt=Q.drawRange.count*ft,xn=tt!==null?tt.start*ft:0,Ot=tt!==null?tt.count*ft:1/0,En=Math.max(jn,xn),ri=Math.min(gn,jn+pt,xn+Ot)-1,An=Math.max(0,ri-En+1);if(An!==0){if(ue.isMesh)$.wireframe===!0?(Se.setLineWidth($.wireframeLinewidth*He()),Pt.setMode(1)):Pt.setMode(4);else if(ue.isLine){let In=$.linewidth;In===void 0&&(In=1),Se.setLineWidth(In*He()),ue.isLineSegments?Pt.setMode(1):ue.isLineLoop?Pt.setMode(2):Pt.setMode(3)}else ue.isPoints?Pt.setMode(0):ue.isSprite&&Pt.setMode(4);if(ue.isInstancedMesh)Pt.renderInstances(En,An,ue.count);else if(Q.isInstancedBufferGeometry){const In=Math.min(Q.instanceCount,Q._maxInstanceCount);Pt.renderInstances(En,An,In)}else Pt.render(En,An)}},this.compile=function(R,j){x=vt.get(R),x.init(),M.push(x),R.traverseVisible(function(Q){Q.isLight&&Q.layers.test(j.layers)&&(x.pushLight(Q),Q.castShadow&&x.pushShadow(Q))}),x.setupLights(S.physicallyCorrectLights),R.traverse(function(Q){const $=Q.material;if($)if(Array.isArray($))for(let ue=0;ue<$.length;ue++){const tt=$[ue];ii(tt,R,Q)}else ii($,R,Q)}),M.pop(),x=null};let te=null;function qe(R){te&&te(R)}function ct(){en.stop()}function Lt(){en.start()}const en=new Eu;en.setAnimationLoop(qe),typeof window<"u"&&en.setContext(window),this.setAnimationLoop=function(R){te=R,Ae.setAnimationLoop(R),R===null?en.stop():en.start()},Ae.addEventListener("sessionstart",ct),Ae.addEventListener("sessionend",Lt),this.render=function(R,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;R.autoUpdate===!0&&R.updateMatrixWorld(),j.parent===null&&j.updateMatrixWorld(),Ae.enabled===!0&&Ae.isPresenting===!0&&(Ae.cameraAutoUpdate===!0&&Ae.updateCamera(j),j=Ae.getCamera()),R.isScene===!0&&R.onBeforeRender(S,R,j,O),x=vt.get(R,M.length),x.init(),M.push(x),ce.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),oe.setFromProjectionMatrix(ce),Ce=this.localClippingEnabled,xe=N.init(this.clippingPlanes,Ce,j),m=St.get(R,_.length),m.init(),_.push(m),_t(R,j,0,S.sortObjects),m.finish(),S.sortObjects===!0&&m.sort(k,X),xe===!0&&N.beginShadows();const Q=x.state.shadowsArray;if(L.render(Q,R,j),xe===!0&&N.endShadows(),this.info.autoReset===!0&&this.info.reset(),ne.render(m,R),x.setupLights(S.physicallyCorrectLights),j.isArrayCamera){const $=j.cameras;for(let ue=0,tt=$.length;ue<tt;ue++){const nt=$[ue];Zt(m,R,nt,nt.viewport)}}else Zt(m,R,j);O!==null&&(de.updateMultisampleRenderTarget(O),de.updateRenderTargetMipmap(O)),R.isScene===!0&&R.onAfterRender(S,R,j),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1),Ue.resetDefaultState(),P=-1,D=null,M.pop(),M.length>0?x=M[M.length-1]:x=null,_.pop(),_.length>0?m=_[_.length-1]:m=null};function _t(R,j,Q,$){if(R.visible===!1)return;if(R.layers.test(j.layers)){if(R.isGroup)Q=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(j);else if(R.isLight)x.pushLight(R),R.castShadow&&x.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||oe.intersectsSprite(R)){$&&Le.setFromMatrixPosition(R.matrixWorld).applyMatrix4(ce);const nt=Fe.update(R),ot=R.material;ot.visible&&m.push(R,nt,ot,Q,Le.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(R.isSkinnedMesh&&R.skeleton.frame!==at.render.frame&&(R.skeleton.update(),R.skeleton.frame=at.render.frame),!R.frustumCulled||oe.intersectsObject(R))){$&&Le.setFromMatrixPosition(R.matrixWorld).applyMatrix4(ce);const nt=Fe.update(R),ot=R.material;if(Array.isArray(ot)){const rt=nt.groups;for(let xt=0,ft=rt.length;xt<ft;xt++){const dt=rt[xt],Pt=ot[dt.materialIndex];Pt&&Pt.visible&&m.push(R,nt,Pt,Q,Le.z,dt)}}else ot.visible&&m.push(R,nt,ot,Q,Le.z,null)}}const tt=R.children;for(let nt=0,ot=tt.length;nt<ot;nt++)_t(tt[nt],j,Q,$)}function Zt(R,j,Q,$){const ue=R.opaque,tt=R.transmissive,nt=R.transparent;x.setupLightsView(Q),tt.length>0&&Dn(ue,j,Q),$&&Se.viewport(f.copy($)),ue.length>0&&Vi(ue,j,Q),tt.length>0&&Vi(tt,j,Q),nt.length>0&&Vi(nt,j,Q)}function Dn(R,j,Q){if(ae===null){const nt=a===!0&&Xe.isWebGL2===!0?qa:Rn;ae=new nt(1024,1024,{generateMipmaps:!0,type:Ve.convert(pr)!==null?pr:vi,minFilter:po,magFilter:qt,wrapS:Tn,wrapT:Tn,useRenderToTexture:ze.has("WEBGL_multisampled_render_to_texture")})}const $=S.getRenderTarget();S.setRenderTarget(ae),S.clear();const ue=S.toneMapping;S.toneMapping=xi,Vi(R,j,Q),S.toneMapping=ue,de.updateMultisampleRenderTarget(ae),de.updateRenderTargetMipmap(ae),S.setRenderTarget($)}function Vi(R,j,Q){const $=j.isScene===!0?j.overrideMaterial:null;for(let ue=0,tt=R.length;ue<tt;ue++){const nt=R[ue],ot=nt.object,rt=nt.geometry,xt=$===null?nt.material:$,ft=nt.group;ot.layers.test(Q.layers)&&Pr(ot,j,Q,rt,xt,ft)}}function Pr(R,j,Q,$,ue,tt){R.onBeforeRender(S,j,Q,$,ue,tt),R.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),ue.onBeforeRender(S,j,Q,$,R,tt),ue.transparent===!0&&ue.side===vr?(ue.side=Wt,ue.needsUpdate=!0,S.renderBufferDirect(Q,j,$,ue,R,tt),ue.side=es,ue.needsUpdate=!0,S.renderBufferDirect(Q,j,$,ue,R,tt),ue.side=vr):S.renderBufferDirect(Q,j,$,ue,R,tt),R.onAfterRender(S,j,Q,$,ue,tt)}function ii(R,j,Q){j.isScene!==!0&&(j=Ie);const $=Qe.get(R),ue=x.state.lights,tt=x.state.shadowsArray,nt=ue.state.version,ot=et.getParameters(R,ue.state,tt,j,Q),rt=et.getProgramCacheKey(ot);let xt=$.programs;$.environment=R.isMeshStandardMaterial?j.environment:null,$.fog=j.fog,$.envMap=(R.isMeshStandardMaterial?_e:ye).get(R.envMap||$.environment),xt===void 0&&(R.addEventListener("dispose",Be),xt=new Map,$.programs=xt);let ft=xt.get(rt);if(ft!==void 0){if($.currentProgram===ft&&$.lightsStateVersion===nt)return ps(R,ot),ft}else ot.uniforms=et.getUniforms(R),R.onBuild(Q,ot,S),R.onBeforeCompile(ot,S),ft=et.acquireProgram(ot,rt),xt.set(rt,ft),$.uniforms=ot.uniforms;const dt=$.uniforms;(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(dt.clippingPlanes=N.uniform),ps(R,ot),$.needsLights=ms(R),$.lightsStateVersion=nt,$.needsLights&&(dt.ambientLightColor.value=ue.state.ambient,dt.lightProbe.value=ue.state.probe,dt.directionalLights.value=ue.state.directional,dt.directionalLightShadows.value=ue.state.directionalShadow,dt.spotLights.value=ue.state.spot,dt.spotLightShadows.value=ue.state.spotShadow,dt.rectAreaLights.value=ue.state.rectArea,dt.ltc_1.value=ue.state.rectAreaLTC1,dt.ltc_2.value=ue.state.rectAreaLTC2,dt.pointLights.value=ue.state.point,dt.pointLightShadows.value=ue.state.pointShadow,dt.hemisphereLights.value=ue.state.hemi,dt.directionalShadowMap.value=ue.state.directionalShadowMap,dt.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,dt.spotShadowMap.value=ue.state.spotShadowMap,dt.spotShadowMatrix.value=ue.state.spotShadowMatrix,dt.pointShadowMap.value=ue.state.pointShadowMap,dt.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Pt=ft.getUniforms(),gn=_i.seqWithValue(Pt.seq,dt);return $.currentProgram=ft,$.uniformsList=gn,ft}function ps(R,j){const Q=Qe.get(R);Q.outputEncoding=j.outputEncoding,Q.instancing=j.instancing,Q.skinning=j.skinning,Q.morphTargets=j.morphTargets,Q.morphNormals=j.morphNormals,Q.morphTargetsCount=j.morphTargetsCount,Q.numClippingPlanes=j.numClippingPlanes,Q.numIntersection=j.numClipIntersection,Q.vertexAlphas=j.vertexAlphas,Q.vertexTangents=j.vertexTangents,Q.toneMapping=j.toneMapping}function So(R,j,Q,$,ue){j.isScene!==!0&&(j=Ie),de.resetTextureUnits();const tt=j.fog,nt=$.isMeshStandardMaterial?j.environment:null,ot=O===null?S.outputEncoding:O.isXRRenderTarget===!0?O.texture.encoding:Mi,rt=($.isMeshStandardMaterial?_e:ye).get($.envMap||nt),xt=$.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,ft=!!$.normalMap&&!!Q.attributes.tangent,dt=!!Q.morphAttributes.position,Pt=!!Q.morphAttributes.normal,gn=Q.morphAttributes.position?Q.morphAttributes.position.length:0,jn=$.toneMapped?S.toneMapping:xi,pt=Qe.get($),xn=x.state.lights;if(xe===!0&&(Ce===!0||R!==D)){const an=R===D&&$.id===P;N.setState($,R,an)}let Ot=!1;$.version===pt.__version?(pt.needsLights&&pt.lightsStateVersion!==xn.state.version||pt.outputEncoding!==ot||ue.isInstancedMesh&&pt.instancing===!1||!ue.isInstancedMesh&&pt.instancing===!0||ue.isSkinnedMesh&&pt.skinning===!1||!ue.isSkinnedMesh&&pt.skinning===!0||pt.envMap!==rt||$.fog&&pt.fog!==tt||pt.numClippingPlanes!==void 0&&(pt.numClippingPlanes!==N.numPlanes||pt.numIntersection!==N.numIntersection)||pt.vertexAlphas!==xt||pt.vertexTangents!==ft||pt.morphTargets!==dt||pt.morphNormals!==Pt||pt.toneMapping!==jn||Xe.isWebGL2===!0&&pt.morphTargetsCount!==gn)&&(Ot=!0):(Ot=!0,pt.__version=$.version);let En=pt.currentProgram;Ot===!0&&(En=ii($,j,ue));let ri=!1,An=!1,In=!1;const kt=En.getUniforms(),si=pt.uniforms;if(Se.useProgram(En.program)&&(ri=!0,An=!0,In=!0),$.id!==P&&(P=$.id,An=!0),ri||D!==R){if(kt.setValue(ie,"projectionMatrix",R.projectionMatrix),Xe.logarithmicDepthBuffer&&kt.setValue(ie,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),D!==R&&(D=R,An=!0,In=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const an=kt.map.cameraPosition;an!==void 0&&an.setValue(ie,Le.setFromMatrixPosition(R.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&kt.setValue(ie,"isOrthographic",R.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||ue.isSkinnedMesh)&&kt.setValue(ie,"viewMatrix",R.matrixWorldInverse)}if(ue.isSkinnedMesh){kt.setOptional(ie,ue,"bindMatrix"),kt.setOptional(ie,ue,"bindMatrixInverse");const an=ue.skeleton;an&&(Xe.floatVertexTextures?(an.boneTexture===null&&an.computeBoneTexture(),kt.setValue(ie,"boneTexture",an.boneTexture,de),kt.setValue(ie,"boneTextureSize",an.boneTextureSize)):kt.setOptional(ie,an,"boneMatrices"))}return Q&&(Q.morphAttributes.position!==void 0||Q.morphAttributes.normal!==void 0)&&be.update(ue,Q,$,En),(An||pt.receiveShadow!==ue.receiveShadow)&&(pt.receiveShadow=ue.receiveShadow,kt.setValue(ie,"receiveShadow",ue.receiveShadow)),An&&(kt.setValue(ie,"toneMappingExposure",S.toneMappingExposure),pt.needsLights&&To(si,In),tt&&$.fog&&ht.refreshFogUniforms(si,tt),ht.refreshMaterialUniforms(si,$,A,ge,ae),_i.upload(ie,pt.uniformsList,si,de)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(_i.upload(ie,pt.uniformsList,si,de),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&kt.setValue(ie,"center",ue.center),kt.setValue(ie,"modelViewMatrix",ue.modelViewMatrix),kt.setValue(ie,"normalMatrix",ue.normalMatrix),kt.setValue(ie,"modelMatrix",ue.matrixWorld),En}function To(R,j){R.ambientLightColor.needsUpdate=j,R.lightProbe.needsUpdate=j,R.directionalLights.needsUpdate=j,R.directionalLightShadows.needsUpdate=j,R.pointLights.needsUpdate=j,R.pointLightShadows.needsUpdate=j,R.spotLights.needsUpdate=j,R.spotLightShadows.needsUpdate=j,R.rectAreaLights.needsUpdate=j,R.hemisphereLights.needsUpdate=j}function ms(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(R,j,Q){Qe.get(R.texture).__webglTexture=j,Qe.get(R.depthTexture).__webglTexture=Q;const $=Qe.get(R);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=Q===void 0,$.__autoAllocateDepthBuffer||R.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),R.useRenderToTexture=!1,R.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(R,j){const Q=Qe.get(R);Q.__webglFramebuffer=j,Q.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(R,j=0,Q=0){O=R,v=j,y=Q;let $=!0;if(R){const rt=Qe.get(R);rt.__useDefaultFramebuffer!==void 0?(Se.bindFramebuffer(36160,null),$=!1):rt.__webglFramebuffer===void 0?de.setupRenderTarget(R):rt.__hasExternalTextures&&de.rebindTextures(R,Qe.get(R.texture).__webglTexture,Qe.get(R.depthTexture).__webglTexture)}let ue=null,tt=!1,nt=!1;if(R){const rt=R.texture;(rt.isDataTexture3D||rt.isDataTexture2DArray)&&(nt=!0);const xt=Qe.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(ue=xt[j],tt=!0):R.useRenderbuffer?ue=Qe.get(R).__webglMultisampledFramebuffer:ue=xt,f.copy(R.viewport),W.copy(R.scissor),fe=R.scissorTest}else f.copy(J).multiplyScalar(A).floor(),W.copy(Z).multiplyScalar(A).floor(),fe=K;if(Se.bindFramebuffer(36160,ue)&&Xe.drawBuffers&&$&&Se.drawBuffers(R,ue),Se.viewport(f),Se.scissor(W),Se.setScissorTest(fe),tt){const rt=Qe.get(R.texture);ie.framebufferTexture2D(36160,36064,34069+j,rt.__webglTexture,Q)}else if(nt){const rt=Qe.get(R.texture),xt=j||0;ie.framebufferTextureLayer(36160,36064,rt.__webglTexture,Q||0,xt)}P=-1},this.readRenderTargetPixels=function(R,j,Q,$,ue,tt,nt){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ot=Qe.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&nt!==void 0&&(ot=ot[nt]),ot){Se.bindFramebuffer(36160,ot);try{const rt=R.texture,xt=rt.format,ft=rt.type;if(xt!==ln&&Ve.convert(xt)!==ie.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const dt=ft===pr&&(ze.has("EXT_color_buffer_half_float")||Xe.isWebGL2&&ze.has("EXT_color_buffer_float"));if(ft!==vi&&Ve.convert(ft)!==ie.getParameter(35738)&&!(ft===zi&&(Xe.isWebGL2||ze.has("OES_texture_float")||ze.has("WEBGL_color_buffer_float")))&&!dt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ie.checkFramebufferStatus(36160)===36053?j>=0&&j<=R.width-$&&Q>=0&&Q<=R.height-ue&&ie.readPixels(j,Q,$,ue,Ve.convert(xt),Ve.convert(ft),tt):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const rt=O!==null?Qe.get(O).__webglFramebuffer:null;Se.bindFramebuffer(36160,rt)}}},this.copyFramebufferToTexture=function(R,j,Q=0){if(j.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const $=Math.pow(2,-Q),ue=Math.floor(j.image.width*$),tt=Math.floor(j.image.height*$);de.setTexture2D(j,0),ie.copyTexSubImage2D(3553,Q,0,0,R.x,R.y,ue,tt),Se.unbindTexture()},this.copyTextureToTexture=function(R,j,Q,$=0){const ue=j.image.width,tt=j.image.height,nt=Ve.convert(Q.format),ot=Ve.convert(Q.type);de.setTexture2D(Q,0),ie.pixelStorei(37440,Q.flipY),ie.pixelStorei(37441,Q.premultiplyAlpha),ie.pixelStorei(3317,Q.unpackAlignment),j.isDataTexture?ie.texSubImage2D(3553,$,R.x,R.y,ue,tt,nt,ot,j.image.data):j.isCompressedTexture?ie.compressedTexSubImage2D(3553,$,R.x,R.y,j.mipmaps[0].width,j.mipmaps[0].height,nt,j.mipmaps[0].data):ie.texSubImage2D(3553,$,R.x,R.y,nt,ot,j.image),$===0&&Q.generateMipmaps&&ie.generateMipmap(3553),Se.unbindTexture()},this.copyTextureToTexture3D=function(R,j,Q,$,ue=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const tt=R.max.x-R.min.x+1,nt=R.max.y-R.min.y+1,ot=R.max.z-R.min.z+1,rt=Ve.convert($.format),xt=Ve.convert($.type);let ft;if($.isDataTexture3D)de.setTexture3D($,0),ft=32879;else if($.isDataTexture2DArray)de.setTexture2DArray($,0),ft=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ie.pixelStorei(37440,$.flipY),ie.pixelStorei(37441,$.premultiplyAlpha),ie.pixelStorei(3317,$.unpackAlignment);const dt=ie.getParameter(3314),Pt=ie.getParameter(32878),gn=ie.getParameter(3316),jn=ie.getParameter(3315),pt=ie.getParameter(32877),xn=Q.isCompressedTexture?Q.mipmaps[0]:Q.image;ie.pixelStorei(3314,xn.width),ie.pixelStorei(32878,xn.height),ie.pixelStorei(3316,R.min.x),ie.pixelStorei(3315,R.min.y),ie.pixelStorei(32877,R.min.z),Q.isDataTexture||Q.isDataTexture3D?ie.texSubImage3D(ft,ue,j.x,j.y,j.z,tt,nt,ot,rt,xt,xn.data):Q.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ie.compressedTexSubImage3D(ft,ue,j.x,j.y,j.z,tt,nt,ot,rt,xn.data)):ie.texSubImage3D(ft,ue,j.x,j.y,j.z,tt,nt,ot,rt,xt,xn),ie.pixelStorei(3314,dt),ie.pixelStorei(32878,Pt),ie.pixelStorei(3316,gn),ie.pixelStorei(3315,jn),ie.pixelStorei(32877,pt),ue===0&&$.generateMipmaps&&ie.generateMipmap(ft),Se.unbindTexture()},this.initTexture=function(R){de.setTexture2D(R,0),Se.unbindTexture()},this.resetState=function(){v=0,y=0,O=null,Se.reset(),Ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}wt.prototype.isWebGLRenderer=!0;class Ux extends wt{}Ux.prototype.isWebGL1Renderer=!0;class Za extends Mt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}Za.prototype.isScene=!0;class us{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ns,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Gn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Gn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Gn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}us.prototype.isInterleavedBuffer=!0;const Ht=new z;class rs{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ht.x=this.getX(t),Ht.y=this.getY(t),Ht.z=this.getZ(t),Ht.applyMatrix4(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ht.x=this.getX(t),Ht.y=this.getY(t),Ht.z=this.getZ(t),Ht.applyNormalMatrix(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ht.x=this.getX(t),Ht.y=this.getY(t),Ht.z=this.getZ(t),Ht.transformDirection(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Xt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new rs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}rs.prototype.isInterleavedBufferAttribute=!0;class ku extends on{constructor(e){super(),this.type="SpriteMaterial",this.color=new ke(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}ku.prototype.isSpriteMaterial=!0;let sr;const Gr=new z,or=new z,ar=new z,lr=new ve,Wr=new ve,Vu=new Ke,qs=new z,qr=new z,js=new z,Gc=new ve,ba=new ve,Wc=new ve;class kx extends Mt{constructor(e){if(super(),this.type="Sprite",sr===void 0){sr=new Ft;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new us(t,5);sr.setIndex([0,1,2,0,2,3]),sr.setAttribute("position",new rs(n,3,0,!1)),sr.setAttribute("uv",new rs(n,2,3,!1))}this.geometry=sr,this.material=e!==void 0?e:new ku,this.center=new ve(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),or.setFromMatrixScale(this.matrixWorld),Vu.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ar.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&or.multiplyScalar(-ar.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;Xs(qs.set(-.5,-.5,0),ar,a,or,i,r),Xs(qr.set(.5,-.5,0),ar,a,or,i,r),Xs(js.set(.5,.5,0),ar,a,or,i,r),Gc.set(0,0),ba.set(1,0),Wc.set(1,1);let l=e.ray.intersectTriangle(qs,qr,js,!1,Gr);if(l===null&&(Xs(qr.set(-.5,.5,0),ar,a,or,i,r),ba.set(0,1),l=e.ray.intersectTriangle(qs,js,qr,!1,Gr),l===null))return;const u=e.ray.origin.distanceTo(Gr);u<e.near||u>e.far||t.push({distance:u,point:Gr.clone(),uv:jt.getUV(Gr,qs,qr,js,Gc,ba,Wc,new ve),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}kx.prototype.isSprite=!0;function Xs(s,e,t,n,i,r){lr.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(Wr.x=r*lr.x-i*lr.y,Wr.y=i*lr.x+r*lr.y):Wr.copy(lr),s.copy(e),s.x+=Wr.x,s.y+=Wr.y,s.applyMatrix4(Vu)}const qc=new z,jc=new Ct,Xc=new Ct,Vx=new z,Yc=new Ke;class Gu extends cn{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ke,this.bindMatrixInverse=new Ke}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;jc.fromBufferAttribute(i.attributes.skinIndex,e),Xc.fromBufferAttribute(i.attributes.skinWeight,e),qc.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Xc.getComponent(r);if(a!==0){const l=jc.getComponent(r);Yc.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(Vx.copy(qc).applyMatrix4(Yc),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}Gu.prototype.isSkinnedMesh=!0;class Gx extends Mt{constructor(){super(),this.type="Bone"}}Gx.prototype.isBone=!0;class Wx extends $t{constructor(e=null,t=1,n=1,i,r,a,l,u,h=qt,p=qt,m,x){super(null,a,l,u,h,p,i,r,m,x),this.image={data:e,width:t,height:n},this.magFilter=h,this.minFilter=p,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Wx.prototype.isDataTexture=!0;class za extends Xt{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}za.prototype.isInstancedBufferAttribute=!0;const Jc=new Ke,$c=new Ke,Ys=[],jr=new cn;class qx extends cn{constructor(e,t,n){super(e,t),this.instanceMatrix=new za(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(jr.geometry=this.geometry,jr.material=this.material,jr.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Jc),$c.multiplyMatrices(n,Jc),jr.matrixWorld=$c,jr.raycast(e,Ys);for(let a=0,l=Ys.length;a<l;a++){const u=Ys[a];u.instanceId=r,u.object=this,t.push(u)}Ys.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new za(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}qx.prototype.isInstancedMesh=!0;class hs extends on{constructor(e){super(),this.type="LineBasicMaterial",this.color=new ke(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}hs.prototype.isLineBasicMaterial=!0;const Zc=new z,Kc=new z,Qc=new Ke,Ma=new Sr,Js=new wr;class Ka extends Mt{constructor(e=new Ft,t=new hs){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Zc.fromBufferAttribute(t,i-1),Kc.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Zc.distanceTo(Kc);e.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Js.copy(n.boundingSphere),Js.applyMatrix4(i),Js.radius+=r,e.ray.intersectsSphere(Js)===!1)return;Qc.copy(i).invert(),Ma.copy(e.ray).applyMatrix4(Qc);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=new z,p=new z,m=new z,x=new z,_=this.isLineSegments?2:1;if(n.isBufferGeometry){const M=n.index,C=n.attributes.position;if(M!==null){const v=Math.max(0,a.start),y=Math.min(M.count,a.start+a.count);for(let O=v,P=y-1;O<P;O+=_){const D=M.getX(O),f=M.getX(O+1);if(h.fromBufferAttribute(C,D),p.fromBufferAttribute(C,f),Ma.distanceSqToSegment(h,p,x,m)>u)continue;x.applyMatrix4(this.matrixWorld);const fe=e.ray.origin.distanceTo(x);fe<e.near||fe>e.far||t.push({distance:fe,point:m.clone().applyMatrix4(this.matrixWorld),index:O,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,a.start),y=Math.min(C.count,a.start+a.count);for(let O=v,P=y-1;O<P;O+=_){if(h.fromBufferAttribute(C,O),p.fromBufferAttribute(C,O+1),Ma.distanceSqToSegment(h,p,x,m)>u)continue;x.applyMatrix4(this.matrixWorld);const f=e.ray.origin.distanceTo(x);f<e.near||f>e.far||t.push({distance:f,point:m.clone().applyMatrix4(this.matrixWorld),index:O,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Ka.prototype.isLine=!0;const eu=new z,tu=new z;class Qa extends Ka{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)eu.fromBufferAttribute(t,i),tu.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+eu.distanceTo(tu);e.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Qa.prototype.isLineSegments=!0;class jx extends Ka{constructor(e,t){super(e,t),this.type="LineLoop"}}jx.prototype.isLineLoop=!0;class Wu extends on{constructor(e){super(),this.type="PointsMaterial",this.color=new ke(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Wu.prototype.isPointsMaterial=!0;const nu=new Ke,Oa=new Sr,$s=new wr,Zs=new z;class Xx extends Mt{constructor(e=new Ft,t=new Wu){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),$s.copy(n.boundingSphere),$s.applyMatrix4(i),$s.radius+=r,e.ray.intersectsSphere($s)===!1)return;nu.copy(i).invert(),Oa.copy(e.ray).applyMatrix4(nu);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l;if(n.isBufferGeometry){const h=n.index,m=n.attributes.position;if(h!==null){const x=Math.max(0,a.start),_=Math.min(h.count,a.start+a.count);for(let M=x,S=_;M<S;M++){const C=h.getX(M);Zs.fromBufferAttribute(m,C),iu(Zs,C,u,i,e,t,this)}}else{const x=Math.max(0,a.start),_=Math.min(m.count,a.start+a.count);for(let M=x,S=_;M<S;M++)Zs.fromBufferAttribute(m,M),iu(Zs,M,u,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Xx.prototype.isPoints=!0;function iu(s,e,t,n,i,r,a){const l=Oa.distanceSqToPoint(s);if(l<t){const u=new z;Oa.closestPointToPoint(s,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(l),point:u,index:e,face:null,object:a})}}class Yx extends $t{constructor(e,t,n,i,r,a,l,u,h){super(e,t,n,i,r,a,l,u,h),this.minFilter=a!==void 0?a:rn,this.magFilter=r!==void 0?r:rn,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Yx.prototype.isVideoTexture=!0;class Jx extends $t{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=qt,this.minFilter=qt,this.generateMipmaps=!1,this.needsUpdate=!0}}Jx.prototype.isFramebufferTexture=!0;class $x extends $t{constructor(e,t,n,i,r,a,l,u,h,p,m,x){super(null,a,l,u,h,p,i,r,m,x),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}$x.prototype.isCompressedTexture=!0;class Zx extends $t{constructor(e,t,n,i,r,a,l,u,h){super(e,t,n,i,r,a,l,u,h),this.needsUpdate=!0}}Zx.prototype.isCanvasTexture=!0;class Pn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let l=0,u=r-1,h;for(;l<=u;)if(i=Math.floor(l+(u-l)/2),h=n[i]-a,h<0)l=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(r-1);const p=n[i],x=n[i+1]-p,_=(a-p)/x;return(i+_)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),l=this.getPoint(r),u=t||(a.isVector2?new ve:new z);return u.copy(l).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new z,i=[],r=[],a=[],l=new z,u=new Ke;for(let _=0;_<=e;_++){const M=_/e;i[_]=this.getTangentAt(M,new z)}r[0]=new z,a[0]=new z;let h=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),x=Math.abs(i[0].z);p<=h&&(h=p,n.set(1,0,0)),m<=h&&(h=m,n.set(0,1,0)),x<=h&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],l),a[0].crossVectors(i[0],r[0]);for(let _=1;_<=e;_++){if(r[_]=r[_-1].clone(),a[_]=a[_-1].clone(),l.crossVectors(i[_-1],i[_]),l.length()>Number.EPSILON){l.normalize();const M=Math.acos(Sn(i[_-1].dot(i[_]),-1,1));r[_].applyMatrix4(u.makeRotationAxis(l,M))}a[_].crossVectors(i[_],r[_])}if(t===!0){let _=Math.acos(Sn(r[0].dot(r[e]),-1,1));_/=e,i[0].dot(l.crossVectors(r[0],r[e]))>0&&(_=-_);for(let M=1;M<=e;M++)r[M].applyMatrix4(u.makeRotationAxis(i[M],_*M)),a[M].crossVectors(i[M],r[M])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class bo extends Pn{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,l=!1,u=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=l,this.aRotation=u}getPoint(e,t){const n=t||new ve,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const l=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(l),h=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),x=u-this.aX,_=h-this.aY;u=x*p-_*m+this.aX,h=x*m+_*p+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}bo.prototype.isEllipseCurve=!0;class qu extends bo{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.type="ArcCurve"}}qu.prototype.isArcCurve=!0;function el(){let s=0,e=0,t=0,n=0;function i(r,a,l,u){s=r,e=l,t=-3*r+3*a-2*l-u,n=2*r-2*a+l+u}return{initCatmullRom:function(r,a,l,u,h){i(a,l,h*(l-r),h*(u-a))},initNonuniformCatmullRom:function(r,a,l,u,h,p,m){let x=(a-r)/h-(l-r)/(h+p)+(l-a)/p,_=(l-a)/p-(u-a)/(p+m)+(u-l)/m;x*=p,_*=p,i(a,l,x,_)},calc:function(r){const a=r*r,l=a*r;return s+e*r+t*a+n*l}}}const Ks=new z,wa=new el,Sa=new el,Ta=new el;class ju extends Pn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new z){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let l=Math.floor(a),u=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:u===0&&l===r-1&&(l=r-2,u=1);let h,p;this.closed||l>0?h=i[(l-1)%r]:(Ks.subVectors(i[0],i[1]).add(i[0]),h=Ks);const m=i[l%r],x=i[(l+1)%r];if(this.closed||l+2<r?p=i[(l+2)%r]:(Ks.subVectors(i[r-1],i[r-2]).add(i[r-1]),p=Ks),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let M=Math.pow(h.distanceToSquared(m),_),S=Math.pow(m.distanceToSquared(x),_),C=Math.pow(x.distanceToSquared(p),_);S<1e-4&&(S=1),M<1e-4&&(M=S),C<1e-4&&(C=S),wa.initNonuniformCatmullRom(h.x,m.x,x.x,p.x,M,S,C),Sa.initNonuniformCatmullRom(h.y,m.y,x.y,p.y,M,S,C),Ta.initNonuniformCatmullRom(h.z,m.z,x.z,p.z,M,S,C)}else this.curveType==="catmullrom"&&(wa.initCatmullRom(h.x,m.x,x.x,p.x,this.tension),Sa.initCatmullRom(h.y,m.y,x.y,p.y,this.tension),Ta.initCatmullRom(h.z,m.z,x.z,p.z,this.tension));return n.set(wa.calc(u),Sa.calc(u),Ta.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new z().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}ju.prototype.isCatmullRomCurve3=!0;function ru(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,l=s*s,u=s*l;return(2*t-2*n+r+a)*u+(-3*t+3*n-2*r-a)*l+r*s+t}function Kx(s,e){const t=1-s;return t*t*e}function Qx(s,e){return 2*(1-s)*s*e}function ev(s,e){return s*s*e}function Kr(s,e,t,n){return Kx(s,e)+Qx(s,t)+ev(s,n)}function tv(s,e){const t=1-s;return t*t*t*e}function nv(s,e){const t=1-s;return 3*t*t*s*e}function iv(s,e){return 3*(1-s)*s*s*e}function rv(s,e){return s*s*s*e}function Qr(s,e,t,n,i){return tv(s,e)+nv(s,t)+iv(s,n)+rv(s,i)}class tl extends Pn{constructor(e=new ve,t=new ve,n=new ve,i=new ve){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,a=this.v2,l=this.v3;return n.set(Qr(e,i.x,r.x,a.x,l.x),Qr(e,i.y,r.y,a.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}tl.prototype.isCubicBezierCurve=!0;class Xu extends Pn{constructor(e=new z,t=new z,n=new z,i=new z){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new z){const n=t,i=this.v0,r=this.v1,a=this.v2,l=this.v3;return n.set(Qr(e,i.x,r.x,a.x,l.x),Qr(e,i.y,r.y,a.y,l.y),Qr(e,i.z,r.z,a.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Xu.prototype.isCubicBezierCurve3=!0;class Mo extends Pn{constructor(e=new ve,t=new ve){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ve){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ve;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Mo.prototype.isLineCurve=!0;class sv extends Pn{constructor(e=new z,t=new z){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new z){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class nl extends Pn{constructor(e=new ve,t=new ve,n=new ve){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ve){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Kr(e,i.x,r.x,a.x),Kr(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}nl.prototype.isQuadraticBezierCurve=!0;class Yu extends Pn{constructor(e=new z,t=new z,n=new z){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new z){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(Kr(e,i.x,r.x,a.x),Kr(e,i.y,r.y,a.y),Kr(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Yu.prototype.isQuadraticBezierCurve3=!0;class il extends Pn{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ve){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),l=r-a,u=i[a===0?a:a-1],h=i[a],p=i[a>i.length-2?i.length-1:a+1],m=i[a>i.length-3?i.length-1:a+2];return n.set(ru(l,u.x,h.x,p.x,m.x),ru(l,u.y,h.y,p.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ve().fromArray(i))}return this}}il.prototype.isSplineCurve=!0;var Ju=Object.freeze({__proto__:null,ArcCurve:qu,CatmullRomCurve3:ju,CubicBezierCurve:tl,CubicBezierCurve3:Xu,EllipseCurve:bo,LineCurve:Mo,LineCurve3:sv,QuadraticBezierCurve:nl,QuadraticBezierCurve3:Yu,SplineCurve:il});class ov extends Pn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Mo(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,l=this.curves[r],u=l.getLength(),h=u===0?0:1-a/u;return l.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],l=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,u=a.getPoints(l);for(let h=0;h<u.length;h++){const p=u[h];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Ju[i.type]().fromJSON(i))}return this}}class Ha extends ov{constructor(e){super(),this.type="Path",this.currentPoint=new ve,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Mo(this.currentPoint.clone(),new ve(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new nl(this.currentPoint.clone(),new ve(e,t),new ve(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const l=new tl(this.currentPoint.clone(),new ve(e,t),new ve(n,i),new ve(r,a));return this.curves.push(l),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new il(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+l,t+u,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,l,u){const h=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+h,t+p,n,i,r,a,l,u),this}absellipse(e,t,n,i,r,a,l,u){const h=new bo(e,t,n,i,r,a,l,u);if(this.curves.length>0){const m=h.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(h);const p=h.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class fs extends Ha{constructor(e){super(e),this.uuid=Gn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ha().fromJSON(i))}return this}}const av={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=$u(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let l,u,h,p,m,x,_;if(n&&(r=fv(s,e,r,t)),s.length>80*t){l=h=s[0],u=p=s[1];for(let M=t;M<i;M+=t)m=s[M],x=s[M+1],m<l&&(l=m),x<u&&(u=x),m>h&&(h=m),x>p&&(p=x);_=Math.max(h-l,p-u),_=_!==0?1/_:0}return ss(r,a,t,l,u,_),a}};function $u(s,e,t,n,i){let r,a;if(i===wv(s,e,t,n)>0)for(r=e;r<t;r+=n)a=su(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=su(r,s[r],s[r+1],a);return a&&wo(a,a.next)&&(as(a),a=a.next),a}function wi(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(wo(t,t.next)||zt(t.prev,t,t.next)===0)){if(as(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function ss(s,e,t,n,i,r,a){if(!s)return;!a&&r&&xv(s,n,i,r);let l=s,u,h;for(;s.prev!==s.next;){if(u=s.prev,h=s.next,r?cv(s,n,i,r):lv(s)){e.push(u.i/t),e.push(s.i/t),e.push(h.i/t),as(s),s=h.next,l=h.next;continue}if(s=h,s===l){a?a===1?(s=uv(wi(s),e,t),ss(s,e,t,n,i,r,2)):a===2&&hv(s,e,t,n,i,r):ss(wi(s),e,t,n,i,r,1);break}}}function lv(s){const e=s.prev,t=s,n=s.next;if(zt(e,t,n)>=0)return!1;let i=s.next.next;for(;i!==s.prev;){if(fr(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&zt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function cv(s,e,t,n){const i=s.prev,r=s,a=s.next;if(zt(i,r,a)>=0)return!1;const l=i.x<r.x?i.x<a.x?i.x:a.x:r.x<a.x?r.x:a.x,u=i.y<r.y?i.y<a.y?i.y:a.y:r.y<a.y?r.y:a.y,h=i.x>r.x?i.x>a.x?i.x:a.x:r.x>a.x?r.x:a.x,p=i.y>r.y?i.y>a.y?i.y:a.y:r.y>a.y?r.y:a.y,m=Ua(l,u,e,t,n),x=Ua(h,p,e,t,n);let _=s.prevZ,M=s.nextZ;for(;_&&_.z>=m&&M&&M.z<=x;){if(_!==s.prev&&_!==s.next&&fr(i.x,i.y,r.x,r.y,a.x,a.y,_.x,_.y)&&zt(_.prev,_,_.next)>=0||(_=_.prevZ,M!==s.prev&&M!==s.next&&fr(i.x,i.y,r.x,r.y,a.x,a.y,M.x,M.y)&&zt(M.prev,M,M.next)>=0))return!1;M=M.nextZ}for(;_&&_.z>=m;){if(_!==s.prev&&_!==s.next&&fr(i.x,i.y,r.x,r.y,a.x,a.y,_.x,_.y)&&zt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;M&&M.z<=x;){if(M!==s.prev&&M!==s.next&&fr(i.x,i.y,r.x,r.y,a.x,a.y,M.x,M.y)&&zt(M.prev,M,M.next)>=0)return!1;M=M.nextZ}return!0}function uv(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!wo(i,r)&&Zu(i,n,n.next,r)&&os(i,r)&&os(r,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(r.i/t),as(n),as(n.next),n=s=r),n=n.next}while(n!==s);return wi(n)}function hv(s,e,t,n,i,r){let a=s;do{let l=a.next.next;for(;l!==a.prev;){if(a.i!==l.i&&_v(a,l)){let u=Ku(a,l);a=wi(a,a.next),u=wi(u,u.next),ss(a,e,t,n,i,r),ss(u,e,t,n,i,r);return}l=l.next}a=a.next}while(a!==s)}function fv(s,e,t,n){const i=[];let r,a,l,u,h;for(r=0,a=e.length;r<a;r++)l=e[r]*n,u=r<a-1?e[r+1]*n:s.length,h=$u(s,l,u,n,!1),h===h.next&&(h.steiner=!0),i.push(yv(h));for(i.sort(dv),r=0;r<i.length;r++)pv(i[r],t),t=wi(t,t.next);return t}function dv(s,e){return s.x-e.x}function pv(s,e){if(e=mv(s,e),e){const t=Ku(e,s);wi(e,e.next),wi(t,t.next)}}function mv(s,e){let t=e;const n=s.x,i=s.y;let r=-1/0,a;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const x=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(x<=n&&x>r){if(r=x,x===n){if(i===t.y)return t;if(i===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(n===r)return a;const l=a,u=a.x,h=a.y;let p=1/0,m;t=a;do n>=t.x&&t.x>=u&&n!==t.x&&fr(i<h?n:r,i,u,h,i<h?r:n,i,t.x,t.y)&&(m=Math.abs(i-t.y)/(n-t.x),os(t,s)&&(m<p||m===p&&(t.x>a.x||t.x===a.x&&gv(a,t)))&&(a=t,p=m)),t=t.next;while(t!==l);return a}function gv(s,e){return zt(s.prev,s,e.prev)<0&&zt(e.next,s,s.next)<0}function xv(s,e,t,n){let i=s;do i.z===null&&(i.z=Ua(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,vv(i)}function vv(s){let e,t,n,i,r,a,l,u,h=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,l=0,e=0;e<h&&(l++,n=n.nextZ,!!n);e++);for(u=h;l>0||u>0&&n;)l!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,l--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(a>1);return s}function Ua(s,e,t,n,i){return s=32767*(s-t)*i,e=32767*(e-n)*i,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function yv(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function fr(s,e,t,n,i,r,a,l){return(i-a)*(e-l)-(s-a)*(r-l)>=0&&(s-a)*(n-l)-(t-a)*(e-l)>=0&&(t-a)*(r-l)-(i-a)*(n-l)>=0}function _v(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!bv(s,e)&&(os(s,e)&&os(e,s)&&Mv(s,e)&&(zt(s.prev,s,e.prev)||zt(s,e.prev,e))||wo(s,e)&&zt(s.prev,s,s.next)>0&&zt(e.prev,e,e.next)>0)}function zt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function wo(s,e){return s.x===e.x&&s.y===e.y}function Zu(s,e,t,n){const i=eo(zt(s,e,t)),r=eo(zt(s,e,n)),a=eo(zt(t,n,s)),l=eo(zt(t,n,e));return!!(i!==r&&a!==l||i===0&&Qs(s,t,e)||r===0&&Qs(s,n,e)||a===0&&Qs(t,s,n)||l===0&&Qs(t,e,n))}function Qs(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function eo(s){return s>0?1:s<0?-1:0}function bv(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&Zu(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function os(s,e){return zt(s.prev,s,s.next)<0?zt(s,e,s.next)>=0&&zt(s,s.prev,e)>=0:zt(s,e,s.prev)<0||zt(s,s.next,e)<0}function Mv(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Ku(s,e){const t=new ka(s.i,s.x,s.y),n=new ka(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function su(s,e,t,n){const i=new ka(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function as(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function ka(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function wv(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}class bi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return bi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];ou(e),au(n,e);let a=e.length;t.forEach(ou);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,au(n,t[u]);const l=av.triangulate(n,i);for(let u=0;u<l.length;u+=3)r.push(l.slice(u,u+3));return r}}function ou(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function au(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class Cr extends Ft{constructor(e=new fs([new ve(.5,.5),new ve(-.5,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let l=0,u=e.length;l<u;l++){const h=e[l];a(h)}this.setAttribute("position",new Jt(i,3)),this.setAttribute("uv",new Jt(r,2)),this.computeVertexNormals();function a(l){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,p=t.steps!==void 0?t.steps:1;let m=t.depth!==void 0?t.depth:1,x=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,M=t.bevelSize!==void 0?t.bevelSize:_-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,C=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:Sv;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),m=t.amount);let O,P=!1,D,f,W,fe;v&&(O=v.getSpacedPoints(p),P=!0,x=!1,D=v.computeFrenetFrames(p,!1),f=new z,W=new z,fe=new z),x||(C=0,_=0,M=0,S=0);const Pe=l.extractPoints(h);let ge=Pe.shape;const A=Pe.holes;if(!bi.isClockWise(ge)){ge=ge.reverse();for(let de=0,ye=A.length;de<ye;de++){const _e=A[de];bi.isClockWise(_e)&&(A[de]=_e.reverse())}}const X=bi.triangulateShape(ge,A),J=ge;for(let de=0,ye=A.length;de<ye;de++){const _e=A[de];ge=ge.concat(_e)}function Z(de,ye,_e){return ye||console.error("THREE.ExtrudeGeometry: vec does not exist"),ye.clone().multiplyScalar(_e).add(de)}const K=ge.length,oe=X.length;function xe(de,ye,_e){let Re,se,Fe;const et=de.x-ye.x,ht=de.y-ye.y,St=_e.x-de.x,vt=_e.y-de.y,N=et*et+ht*ht,L=et*vt-ht*St;if(Math.abs(L)>Number.EPSILON){const ne=Math.sqrt(N),be=Math.sqrt(St*St+vt*vt),Ne=ye.x-ht/ne,le=ye.y+et/ne,Ve=_e.x-vt/be,Ue=_e.y+St/be,Ee=((Ve-Ne)*vt-(Ue-le)*St)/(et*vt-ht*St);Re=Ne+et*Ee-de.x,se=le+ht*Ee-de.y;const Ae=Re*Re+se*se;if(Ae<=2)return new ve(Re,se);Fe=Math.sqrt(Ae/2)}else{let ne=!1;et>Number.EPSILON?St>Number.EPSILON&&(ne=!0):et<-Number.EPSILON?St<-Number.EPSILON&&(ne=!0):Math.sign(ht)===Math.sign(vt)&&(ne=!0),ne?(Re=-ht,se=et,Fe=Math.sqrt(N)):(Re=et,se=ht,Fe=Math.sqrt(N/2))}return new ve(Re/Fe,se/Fe)}const Ce=[];for(let de=0,ye=J.length,_e=ye-1,Re=de+1;de<ye;de++,_e++,Re++)_e===ye&&(_e=0),Re===ye&&(Re=0),Ce[de]=xe(J[de],J[_e],J[Re]);const ae=[];let ce,Le=Ce.concat();for(let de=0,ye=A.length;de<ye;de++){const _e=A[de];ce=[];for(let Re=0,se=_e.length,Fe=se-1,et=Re+1;Re<se;Re++,Fe++,et++)Fe===se&&(Fe=0),et===se&&(et=0),ce[Re]=xe(_e[Re],_e[Fe],_e[et]);ae.push(ce),Le=Le.concat(ce)}for(let de=0;de<C;de++){const ye=de/C,_e=_*Math.cos(ye*Math.PI/2),Re=M*Math.sin(ye*Math.PI/2)+S;for(let se=0,Fe=J.length;se<Fe;se++){const et=Z(J[se],Ce[se],Re);ze(et.x,et.y,-_e)}for(let se=0,Fe=A.length;se<Fe;se++){const et=A[se];ce=ae[se];for(let ht=0,St=et.length;ht<St;ht++){const vt=Z(et[ht],ce[ht],Re);ze(vt.x,vt.y,-_e)}}}const Ie=M+S;for(let de=0;de<K;de++){const ye=x?Z(ge[de],Le[de],Ie):ge[de];P?(W.copy(D.normals[0]).multiplyScalar(ye.x),f.copy(D.binormals[0]).multiplyScalar(ye.y),fe.copy(O[0]).add(W).add(f),ze(fe.x,fe.y,fe.z)):ze(ye.x,ye.y,0)}for(let de=1;de<=p;de++)for(let ye=0;ye<K;ye++){const _e=x?Z(ge[ye],Le[ye],Ie):ge[ye];P?(W.copy(D.normals[de]).multiplyScalar(_e.x),f.copy(D.binormals[de]).multiplyScalar(_e.y),fe.copy(O[de]).add(W).add(f),ze(fe.x,fe.y,fe.z)):ze(_e.x,_e.y,m/p*de)}for(let de=C-1;de>=0;de--){const ye=de/C,_e=_*Math.cos(ye*Math.PI/2),Re=M*Math.sin(ye*Math.PI/2)+S;for(let se=0,Fe=J.length;se<Fe;se++){const et=Z(J[se],Ce[se],Re);ze(et.x,et.y,m+_e)}for(let se=0,Fe=A.length;se<Fe;se++){const et=A[se];ce=ae[se];for(let ht=0,St=et.length;ht<St;ht++){const vt=Z(et[ht],ce[ht],Re);P?ze(vt.x,vt.y+O[p-1].y,O[p-1].x+_e):ze(vt.x,vt.y,m+_e)}}}He(),ie();function He(){const de=i.length/3;if(x){let ye=0,_e=K*ye;for(let Re=0;Re<oe;Re++){const se=X[Re];Xe(se[2]+_e,se[1]+_e,se[0]+_e)}ye=p+C*2,_e=K*ye;for(let Re=0;Re<oe;Re++){const se=X[Re];Xe(se[0]+_e,se[1]+_e,se[2]+_e)}}else{for(let ye=0;ye<oe;ye++){const _e=X[ye];Xe(_e[2],_e[1],_e[0])}for(let ye=0;ye<oe;ye++){const _e=X[ye];Xe(_e[0]+K*p,_e[1]+K*p,_e[2]+K*p)}}n.addGroup(de,i.length/3-de,0)}function ie(){const de=i.length/3;let ye=0;mt(J,ye),ye+=J.length;for(let _e=0,Re=A.length;_e<Re;_e++){const se=A[_e];mt(se,ye),ye+=se.length}n.addGroup(de,i.length/3-de,1)}function mt(de,ye){let _e=de.length;for(;--_e>=0;){const Re=_e;let se=_e-1;se<0&&(se=de.length-1);for(let Fe=0,et=p+C*2;Fe<et;Fe++){const ht=K*Fe,St=K*(Fe+1),vt=ye+Re+ht,N=ye+se+ht,L=ye+se+St,ne=ye+Re+St;Se(vt,N,L,ne)}}}function ze(de,ye,_e){u.push(de),u.push(ye),u.push(_e)}function Xe(de,ye,_e){at(de),at(ye),at(_e);const Re=i.length/3,se=y.generateTopUV(n,i,Re-3,Re-2,Re-1);Qe(se[0]),Qe(se[1]),Qe(se[2])}function Se(de,ye,_e,Re){at(de),at(ye),at(Re),at(ye),at(_e),at(Re);const se=i.length/3,Fe=y.generateSideWallUV(n,i,se-6,se-3,se-2,se-1);Qe(Fe[0]),Qe(Fe[1]),Qe(Fe[3]),Qe(Fe[1]),Qe(Fe[2]),Qe(Fe[3])}function at(de){i.push(u[de*3+0]),i.push(u[de*3+1]),i.push(u[de*3+2])}function Qe(de){r.push(de.x),r.push(de.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Tv(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const l=t[e.shapes[r]];n.push(l)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Ju[i.type]().fromJSON(i)),new Cr(n,e.options)}}const Sv={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],l=e[n*3],u=e[n*3+1],h=e[i*3],p=e[i*3+1];return[new ve(r,a),new ve(l,u),new ve(h,p)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],l=e[t*3+1],u=e[t*3+2],h=e[n*3],p=e[n*3+1],m=e[n*3+2],x=e[i*3],_=e[i*3+1],M=e[i*3+2],S=e[r*3],C=e[r*3+1],v=e[r*3+2];return Math.abs(l-p)<Math.abs(a-h)?[new ve(a,1-u),new ve(h,1-m),new ve(x,1-M),new ve(S,1-v)]:[new ve(l,1-u),new ve(p,1-m),new ve(_,1-M),new ve(C,1-v)]}};function Tv(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class rl extends Ft{constructor(e=new fs([new ve(0,.5),new ve(-.5,-.5),new ve(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let l=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let p=0;p<e.length;p++)h(e[p]),this.addGroup(l,u,p),l+=u,u=0;this.setIndex(n),this.setAttribute("position",new Jt(i,3)),this.setAttribute("normal",new Jt(r,3)),this.setAttribute("uv",new Jt(a,2));function h(p){const m=i.length/3,x=p.extractPoints(t);let _=x.shape;const M=x.holes;bi.isClockWise(_)===!1&&(_=_.reverse());for(let C=0,v=M.length;C<v;C++){const y=M[C];bi.isClockWise(y)===!0&&(M[C]=y.reverse())}const S=bi.triangulateShape(_,M);for(let C=0,v=M.length;C<v;C++){const y=M[C];_=_.concat(y)}for(let C=0,v=_.length;C<v;C++){const y=_[C];i.push(y.x,y.y,0),r.push(0,0,1),a.push(y.x,y.y)}for(let C=0,v=S.length;C<v;C++){const y=S[C],O=y[0]+m,P=y[1]+m,D=y[2]+m;n.push(O,P,D),u+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Ev(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new rl(n,e.curveSegments)}}function Ev(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Av extends on{constructor(e){super(),this.type="ShadowMaterial",this.color=new ke(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}Av.prototype.isShadowMaterial=!0;class Qu extends on{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ke(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Qu.prototype.isMeshStandardMaterial=!0;class Cv extends Qu{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ve(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Sn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new ke(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ke(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ke(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Cv.prototype.isMeshPhysicalMaterial=!0;class Lv extends on{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new ke(16777215),this.specular=new ke(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ho,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Lv.prototype.isMeshPhongMaterial=!0;class Rv extends on{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ke(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Rv.prototype.isMeshToonMaterial=!0;class Pv extends on{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Pv.prototype.isMeshNormalMaterial=!0;class Dv extends on{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ho,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Dv.prototype.isMeshLambertMaterial=!0;class Iv extends on{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ke(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mr,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}Iv.prototype.isMeshMatcapMaterial=!0;class Nv extends hs{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Nv.prototype.isLineDashedMaterial=!0;const Nt={arraySlice:function(s,e,t){return Nt.isTypedArray(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)},convertArray:function(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)},isTypedArray:function(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)},getKeyframeOrder:function(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const l=t[r]*e;for(let u=0;u!==e;++u)i[a++]=s[l+u]}return i},flattenJSON:function(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)},subclip:function(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let u=0;u<r.tracks.length;++u){const h=r.tracks[u],p=h.getValueSize(),m=[],x=[];for(let _=0;_<h.times.length;++_){const M=h.times[_]*i;if(!(M<t||M>=n)){m.push(h.times[_]);for(let S=0;S<p;++S)x.push(h.values[_*p+S])}}m.length!==0&&(h.times=Nt.convertArray(m,h.times.constructor),h.values=Nt.convertArray(x,h.values.constructor),a.push(h))}r.tracks=a;let l=1/0;for(let u=0;u<r.tracks.length;++u)l>r.tracks[u].times[0]&&(l=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*l);return r.resetDuration(),r},makeClipAdditive:function(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const l=t.tracks[a],u=l.ValueTypeName;if(u==="bool"||u==="string")continue;const h=s.tracks.find(function(v){return v.name===l.name&&v.ValueTypeName===u});if(h===void 0)continue;let p=0;const m=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let x=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(x=_/3);const M=l.times.length-1;let S;if(r<=l.times[0]){const v=p,y=m-p;S=Nt.arraySlice(l.values,v,y)}else if(r>=l.times[M]){const v=M*m+p,y=v+m-p;S=Nt.arraySlice(l.values,v,y)}else{const v=l.createInterpolant(),y=p,O=m-p;v.evaluate(r),S=Nt.arraySlice(v.resultBuffer,y,O)}u==="quaternion"&&new mn().fromArray(S).normalize().conjugate().toArray(S);const C=h.times.length;for(let v=0;v<C;++v){const y=v*_+x;if(u==="quaternion")mn.multiplyQuaternionsFlat(h.values,y,S,0,h.values,y);else{const O=_-x*2;for(let P=0;P<O;++P)h.values[y+P]-=S[P]}}}return s.blendMode=yu,s}};class Si{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let l=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===l)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const l=t[1];e<l&&(n=2,r=l);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const l=n+a>>>1;e<t[l]?a=l:n=l+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Si.prototype.beforeStart_=Si.prototype.copySampleValue_;Si.prototype.afterEnd_=Si.prototype.copySampleValue_;class Fv extends Si{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ur,endingEnd:ur}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,l=i[r],u=i[a];if(l===void 0)switch(this.getSettings_().endingStart){case hr:r=e,l=2*t-n;break;case ao:r=i.length-2,l=t+i[r]-i[r+1];break;default:r=e,l=n}if(u===void 0)switch(this.getSettings_().endingEnd){case hr:a=e,u=2*n-t;break;case ao:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,p=this.valueSize;this._weightPrev=h/(t-l),this._weightNext=h/(u-n),this._offsetPrev=r*p,this._offsetNext=a*p}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,p=this._offsetPrev,m=this._offsetNext,x=this._weightPrev,_=this._weightNext,M=(n-t)/(i-t),S=M*M,C=S*M,v=-x*C+2*x*S-x*M,y=(1+x)*C+(-1.5-2*x)*S+(-.5+x)*M+1,O=(-1-_)*C+(1.5+_)*S+.5*M,P=_*C-_*S;for(let D=0;D!==l;++D)r[D]=v*a[p+D]+y*a[h+D]+O*a[u+D]+P*a[m+D];return r}}class eh extends Si{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,p=(n-t)/(i-t),m=1-p;for(let x=0;x!==l;++x)r[x]=a[h+x]*m+a[u+x]*p;return r}}class Bv extends Si{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class qn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Nt.convertArray(t,this.TimeBufferType),this.values=Nt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Nt.convertArray(e.times,Array),values:Nt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Bv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new eh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Fv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case so:t=this.InterpolantFactoryMethodDiscrete;break;case oo:t=this.InterpolantFactoryMethodLinear;break;case jo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return so;case this.InterpolantFactoryMethodLinear:return oo;case this.InterpolantFactoryMethodSmooth:return jo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const l=this.getValueSize();this.times=Nt.arraySlice(n,r,a),this.values=Nt.arraySlice(this.values,r*l,a*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let l=0;l!==r;l++){const u=n[l];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,u,a),e=!1;break}a=u}if(i!==void 0&&Nt.isTypedArray(i))for(let l=0,u=i.length;l!==u;++l){const h=i[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){const e=Nt.arraySlice(this.times),t=Nt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===jo,r=e.length-1;let a=1;for(let l=1;l<r;++l){let u=!1;const h=e[l],p=e[l+1];if(h!==p&&(l!==1||h!==e[0]))if(i)u=!0;else{const m=l*n,x=m-n,_=m+n;for(let M=0;M!==n;++M){const S=t[m+M];if(S!==t[x+M]||S!==t[_+M]){u=!0;break}}}if(u){if(l!==a){e[a]=e[l];const m=l*n,x=a*n;for(let _=0;_!==n;++_)t[x+_]=t[m+_]}++a}}if(r>0){e[a]=e[r];for(let l=r*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[l+h];++a}return a!==e.length?(this.times=Nt.arraySlice(e,0,a),this.values=Nt.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=Nt.arraySlice(this.times,0),t=Nt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}qn.prototype.TimeBufferType=Float32Array;qn.prototype.ValueBufferType=Float32Array;qn.prototype.DefaultInterpolation=oo;class Lr extends qn{}Lr.prototype.ValueTypeName="bool";Lr.prototype.ValueBufferType=Array;Lr.prototype.DefaultInterpolation=so;Lr.prototype.InterpolantFactoryMethodLinear=void 0;Lr.prototype.InterpolantFactoryMethodSmooth=void 0;class th extends qn{}th.prototype.ValueTypeName="color";class co extends qn{}co.prototype.ValueTypeName="number";class zv extends Si{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,u=(n-t)/(i-t);let h=e*l;for(let p=h+l;h!==p;h+=4)mn.slerpFlat(r,0,a,h-l,a,h,u);return r}}class ds extends qn{InterpolantFactoryMethodLinear(e){return new zv(this.times,this.values,this.getValueSize(),e)}}ds.prototype.ValueTypeName="quaternion";ds.prototype.DefaultInterpolation=oo;ds.prototype.InterpolantFactoryMethodSmooth=void 0;class Rr extends qn{}Rr.prototype.ValueTypeName="string";Rr.prototype.ValueBufferType=Array;Rr.prototype.DefaultInterpolation=so;Rr.prototype.InterpolantFactoryMethodLinear=void 0;Rr.prototype.InterpolantFactoryMethodSmooth=void 0;class uo extends qn{}uo.prototype.ValueTypeName="vector";class lu{constructor(e,t=-1,n,i=Wa){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Gn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,l=n.length;a!==l;++a)t.push(Hv(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(qn.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let l=0;l<r;l++){let u=[],h=[];u.push((l+r-1)%r,l,(l+1)%r),h.push(0,1,0);const p=Nt.getKeyframeOrder(u);u=Nt.sortedArray(u,1,p),h=Nt.sortedArray(h,1,p),!i&&u[0]===0&&(u.push(r),h.push(h[0])),a.push(new co(".morphTargetInfluences["+t[l].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let l=0,u=e.length;l<u;l++){const h=e[l],p=h.name.match(r);if(p&&p.length>1){const m=p[1];let x=i[m];x||(i[m]=x=[]),x.push(h)}}const a=[];for(const l in i)a.push(this.CreateFromMorphTargetSequence(l,i[l],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,x,_,M,S){if(_.length!==0){const C=[],v=[];Nt.flattenJSON(_,C,v,M),C.length!==0&&S.push(new m(x,C,v))}},i=[],r=e.name||"default",a=e.fps||30,l=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let m=0;m<h.length;m++){const x=h[m].keys;if(!(!x||x.length===0))if(x[0].morphTargets){const _={};let M;for(M=0;M<x.length;M++)if(x[M].morphTargets)for(let S=0;S<x[M].morphTargets.length;S++)_[x[M].morphTargets[S]]=-1;for(const S in _){const C=[],v=[];for(let y=0;y!==x[M].morphTargets.length;++y){const O=x[M];C.push(O.time),v.push(O.morphTarget===S?1:0)}i.push(new co(".morphTargetInfluence["+S+"]",C,v))}u=_.length*a}else{const _=".bones["+t[m].name+"]";n(uo,_+".position",x,"pos",i),n(ds,_+".quaternion",x,"rot",i),n(uo,_+".scale",x,"scl",i)}}return i.length===0?null:new this(r,u,i,l)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Ov(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return co;case"vector":case"vector2":case"vector3":case"vector4":return uo;case"color":return th;case"quaternion":return ds;case"bool":case"boolean":return Lr;case"string":return Rr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function Hv(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Ov(s.type);if(s.times===void 0){const t=[],n=[];Nt.flattenJSON(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const br={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Uv{constructor(e,t,n){const i=this;let r=!1,a=0,l=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(p){l++,r===!1&&i.onStart!==void 0&&i.onStart(p,a,l),r=!0},this.itemEnd=function(p){a++,i.onProgress!==void 0&&i.onProgress(p,a,l),a===l&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return u?u(p):p},this.setURLModifier=function(p){return u=p,this},this.addHandler=function(p,m){return h.push(p,m),this},this.removeHandler=function(p){const m=h.indexOf(p);return m!==-1&&h.splice(m,2),this},this.getHandler=function(p){for(let m=0,x=h.length;m<x;m+=2){const _=h[m],M=h[m+1];if(_.global&&(_.lastIndex=0),_.test(p))return M}return null}}}const kv=new Uv;class Ti{constructor(e){this.manager=e!==void 0?e:kv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ei={};class Vv extends Ti{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=br.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(ei[e]!==void 0){ei[e].push({onLoad:t,onProgress:n,onError:i});return}ei[e]=[],ei[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body.getReader===void 0)return h;const p=ei[e],m=h.body.getReader(),x=h.headers.get("Content-Length"),_=x?parseInt(x):0,M=_!==0;let S=0;const C=new ReadableStream({start(v){y();function y(){m.read().then(({done:O,value:P})=>{if(O)v.close();else{S+=P.byteLength;const D=new ProgressEvent("progress",{lengthComputable:M,loaded:S,total:_});for(let f=0,W=p.length;f<W;f++){const fe=p[f];fe.onProgress&&fe.onProgress(D)}v.enqueue(P),y()}})}}});return new Response(C)}else throw Error(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(p=>new DOMParser().parseFromString(p,l));case"json":return h.json();default:if(l===void 0)return h.text();{const m=/charset="?([^;"\s]*)"?/i.exec(l),x=m&&m[1]?m[1].toLowerCase():void 0,_=new TextDecoder(x);return h.arrayBuffer().then(M=>_.decode(M))}}}).then(h=>{br.add(e,h);const p=ei[e];delete ei[e];for(let m=0,x=p.length;m<x;m++){const _=p[m];_.onLoad&&_.onLoad(h)}}).catch(h=>{const p=ei[e];if(p===void 0)throw this.manager.itemError(e),h;delete ei[e];for(let m=0,x=p.length;m<x;m++){const _=p[m];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class nh extends Ti{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=br.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const l=is("img");function u(){p(),br.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(m){p(),i&&i(m),r.manager.itemError(e),r.manager.itemEnd(e)}function p(){l.removeEventListener("load",u,!1),l.removeEventListener("error",h,!1)}return l.addEventListener("load",u,!1),l.addEventListener("error",h,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),r.manager.itemStart(e),l.src=e,l}}class Gv extends Ti{constructor(e){super(e)}load(e,t,n,i){const r=new go,a=new nh(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let l=0;function u(h){a.load(e[h],function(p){r.images[h]=p,l++,l===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return r}}class Wv extends Ti{constructor(e){super(e)}load(e,t,n,i){const r=new $t,a=new nh(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(l){r.image=l,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Wn extends Mt{constructor(e,t=1){super(),this.type="Light",this.color=new ke(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}Wn.prototype.isLight=!0;class qv extends Wn{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Mt.DefaultUp),this.updateMatrix(),this.groundColor=new ke(t)}copy(e){return Wn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}qv.prototype.isHemisphereLight=!0;const cu=new Ke,uu=new z,hu=new z;class sl{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new Ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new xo,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;uu.setFromMatrixPosition(e.matrixWorld),t.position.copy(uu),hu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hu),t.updateMatrixWorld(),cu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(cu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ih extends sl{constructor(){super(new pn(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=Na*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}ih.prototype.isSpotLightShadow=!0;class jv extends Wn{constructor(e,t,n=0,i=Math.PI/3,r=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(Mt.DefaultUp),this.updateMatrix(),this.target=new Mt,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new ih}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}jv.prototype.isSpotLight=!0;const fu=new Ke,Xr=new z,Ea=new z;class rh extends sl{constructor(){super(new pn(90,1,.5,500)),this._frameExtents=new ve(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new z(1,0,0),new z(-1,0,0),new z(0,0,1),new z(0,0,-1),new z(0,1,0),new z(0,-1,0)],this._cubeUps=[new z(0,1,0),new z(0,1,0),new z(0,1,0),new z(0,1,0),new z(0,0,1),new z(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Xr.setFromMatrixPosition(e.matrixWorld),n.position.copy(Xr),Ea.copy(n.position),Ea.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ea),n.updateMatrixWorld(),i.makeTranslation(-Xr.x,-Xr.y,-Xr.z),fu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fu)}}rh.prototype.isPointLightShadow=!0;class Xv extends Wn{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new rh}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Xv.prototype.isPointLight=!0;class sh extends sl{constructor(){super(new vo(-5,5,5,-5,.5,500))}}sh.prototype.isDirectionalLightShadow=!0;class Yv extends Wn{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Mt.DefaultUp),this.updateMatrix(),this.target=new Mt,this.shadow=new sh}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Yv.prototype.isDirectionalLight=!0;class Jv extends Wn{constructor(e,t){super(e,t),this.type="AmbientLight"}}Jv.prototype.isAmbientLight=!0;class $v extends Wn{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}$v.prototype.isRectAreaLight=!0;class oh{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new z)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}oh.prototype.isSphericalHarmonics3=!0;class ol extends Wn{constructor(e=new oh,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}ol.prototype.isLightProbe=!0;class Zv{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Kv extends Ft{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Kv.prototype.isInstancedBufferGeometry=!0;class Qv extends Ti{constructor(e){super(e),typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=br.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const l={};l.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",l.headers=this.requestHeader,fetch(e,l).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){br.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}Qv.prototype.isImageBitmapLoader=!0;let to;const ey={getContext:function(){return to===void 0&&(to=new(window.AudioContext||window.webkitAudioContext)),to},setContext:function(s){to=s}};class ty extends Ti{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Vv(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const u=l.slice(0);ey.getContext().decodeAudioData(u,function(p){t(p)})}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}}class ny extends ol{constructor(e,t,n=1){super(void 0,n);const i=new ke().set(e),r=new ke().set(t),a=new z(i.r,i.g,i.b),l=new z(r.r,r.g,r.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(l).multiplyScalar(u),this.sh.coefficients[1].copy(a).sub(l).multiplyScalar(h)}}ny.prototype.isHemisphereLightProbe=!0;class iy extends ol{constructor(e,t=1){super(void 0,t);const n=new ke().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}iy.prototype.isAmbientLightProbe=!0;class ry extends Mt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class sy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let l=0;l!==i;++l)n[r+l]=n[l];a=t}else{a+=t;const l=t/a;this._mixBufferRegion(n,r,0,l,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){l.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){mn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;mn.multiplyQuaternionsFlat(e,a,e,t,e,n),mn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let l=0;l!==r;++l){const u=t+l;e[u]=e[u]*a+e[n+l]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const l=t+a;e[l]=e[l]+e[n+a]*i}}}const al="\\[\\]\\.:\\/",oy=new RegExp("["+al+"]","g"),ll="[^"+al+"]",ay="[^"+al.replace("\\.","")+"]",ly=/((?:WC+[\/:])*)/.source.replace("WC",ll),cy=/(WCOD+)?/.source.replace("WCOD",ay),uy=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ll),hy=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ll),fy=new RegExp("^"+ly+cy+uy+hy+"$"),dy=["material","materials","bones"];class py{constructor(e,t,n){const i=n||bt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class bt{constructor(e,t,n){this.path=t,this.parsedPath=n||bt.parseTrackName(t),this.node=bt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new bt.Composite(e,t,n):new bt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(oy,"")}static parseTrackName(e){const t=fy.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);dy.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const l=r[a];if(l.name===t||l.uuid===t)return l;const u=n(l.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=bt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let p=0;p<e.length;p++)if(e[p].name===h){h=p;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}bt.Composite=py;bt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};bt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};bt.prototype.GetterByBindingType=[bt.prototype._getValue_direct,bt.prototype._getValue_array,bt.prototype._getValue_arrayElement,bt.prototype._getValue_toArray];bt.prototype.SetterByBindingTypeAndVersioning=[[bt.prototype._setValue_direct,bt.prototype._setValue_direct_setNeedsUpdate,bt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_array,bt.prototype._setValue_array_setNeedsUpdate,bt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_arrayElement,bt.prototype._setValue_arrayElement_setNeedsUpdate,bt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_fromArray,bt.prototype._setValue_fromArray_setNeedsUpdate,bt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class my{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,l=new Array(a),u={endingStart:ur,endingEnd:ur};for(let h=0;h!==a;++h){const p=r[h].createInterpolant(null);l[h]=p,p.settings=u}this._interpolantSettings=u,this._interpolants=l,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Jf,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,l=i/r;e.warp(1,a,t),this.warp(l,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let l=this._timeScaleInterpolant;l===null&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);const u=l.parameterPositions,h=l.sampleValues;return u[0]=r,u[1]=r+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;if(u<0||n===0)return;this._startTime=null,t=n*u}t*=this._updateTimeScale(e);const a=this._updateTime(t),l=this._updateWeight(e);if(l>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case yu:for(let p=0,m=u.length;p!==m;++p)u[p].evaluate(a),h[p].accumulateAdditive(l);break;case Wa:default:for(let p=0,m=u.length;p!==m;++p)u[p].evaluate(a),h[p].accumulate(i,l)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===$f;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===Yf){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const l=Math.floor(i/t);i-=t*l,r+=Math.abs(l);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=hr,i.endingEnd=hr):(e?i.endingStart=this.zeroSlopeAtStart?hr:ur:i.endingStart=ao,t?i.endingEnd=this.zeroSlopeAtEnd?hr:ur:i.endingEnd=ao)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const l=a.parameterPositions,u=a.sampleValues;return l[0]=r,u[0]=t,l[1]=r+e,u[1]=n,this}}class gy extends Ui{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,l=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let p=h[u];p===void 0&&(p={},h[u]=p);for(let m=0;m!==r;++m){const x=i[m],_=x.name;let M=p[_];if(M!==void 0)++M.referenceCount,a[m]=M;else{if(M=a[m],M!==void 0){M._cacheIndex===null&&(++M.referenceCount,this._addInactiveBinding(M,u,_));continue}const S=t&&t._propertyBindings[m].binding.parsedPath;M=new sy(bt.create(n,_,S),x.ValueTypeName,x.getValueSize()),++M.referenceCount,this._addInactiveBinding(M,u,_),a[m]=M}l[m].resultBuffer=M.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const l=a.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,l=a[r],u=l.knownActions,h=u[u.length-1],p=e._byClipCacheIndex;h._byClipCacheIndex=p,u[p]=h,u.pop(),e._byClipCacheIndex=null;const m=l.actionByRoot,x=(e._localRoot||this._root).uuid;delete m[x],u.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,l=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete l[r],Object.keys(l).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new eh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?lu.findByName(i,e):e;const l=a!==null?a.uuid:e,u=this._actionsByClip[l];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Wa),u!==void 0){const m=u.actionByRoot[r];if(m!==void 0&&m.blendMode===n)return m;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const p=new my(this,a,t,n);return this._bindAction(p,h),this._addInactiveAction(p,l,r),p}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?lu.findByName(n,e):e,a=r?r.uuid:e,l=this._actionsByClip[a];return l!==void 0&&l.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,a);const l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let l=0,u=a.length;l!==u;++l){const h=a[l];this._deactivateAction(h);const p=h._cacheIndex,m=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,m._cacheIndex=p,t[p]=m,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const l=n[a].actionByRoot,u=l[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const l=r[a];l.restoreOriginalState(),this._removeInactiveBinding(l)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}gy.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class xy extends us{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}xy.prototype.isInstancedInterleavedBuffer=!0;const mi=new z,no=new Ke,Aa=new Ke;class vy extends Qa{constructor(e){const t=ah(e),n=new Ft,i=[],r=[],a=new ke(0,0,1),l=new ke(0,1,0);for(let h=0;h<t.length;h++){const p=t[h];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(l.r,l.g,l.b))}n.setAttribute("position",new Jt(i,3)),n.setAttribute("color",new Jt(r,3));const u=new hs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Aa.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const l=t[r];l.parent&&l.parent.isBone&&(no.multiplyMatrices(Aa,l.matrixWorld),mi.setFromMatrixPosition(no),i.setXYZ(a,mi.x,mi.y,mi.z),no.multiplyMatrices(Aa,l.parent.matrixWorld),mi.setFromMatrixPosition(no),i.setXYZ(a+1,mi.x,mi.y,mi.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function ah(s){const e=[];s&&s.isBone&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,ah(s.children[t]));return e}class yy extends Qa{constructor(e=10,t=10,n=4473924,i=8947848){n=new ke(n),i=new ke(i);const r=t/2,a=e/t,l=e/2,u=[],h=[];for(let x=0,_=0,M=-l;x<=t;x++,M+=a){u.push(-l,0,M,l,0,M),u.push(M,0,-l,M,0,l);const S=x===r?n:i;S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3,S.toArray(h,_),_+=3}const p=new Ft;p.setAttribute("position",new Jt(u,3)),p.setAttribute("color",new Jt(h,3));const m=new hs({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}}const _y=new Float32Array(1);new Int32Array(_y.buffer);Pn.create=function(s,e){return console.log("THREE.Curve.create() has been deprecated"),s.prototype=Object.create(Pn.prototype),s.prototype.constructor=s,s.prototype.getPoint=e,s};Ha.prototype.fromPoints=function(s){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(s)};yy.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};vy.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Ti.prototype.extractUrlBase=function(s){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Zv.extractUrlBase(s)};Ti.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Un.prototype.center=function(s){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(s)};Un.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Un.prototype.isIntersectionBox=function(s){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};Un.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};Un.prototype.size=function(s){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(s)};wr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};xo.prototype.setFromMatrix=function(s){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(s)};Qt.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};Qt.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};Qt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Qt.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),s.applyMatrix3(this)};Qt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Qt.prototype.getInverse=function(s){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};Ke.prototype.extractPosition=function(s){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(s)};Ke.prototype.flattenToArrayOffset=function(s,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(s,e)};Ke.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new z().setFromMatrixColumn(this,3)};Ke.prototype.setRotationFromQuaternion=function(s){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(s)};Ke.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Ke.prototype.multiplyVector3=function(s){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};Ke.prototype.multiplyVector4=function(s){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};Ke.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Ke.prototype.rotateAxis=function(s){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),s.transformDirection(this)};Ke.prototype.crossVector=function(s){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};Ke.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Ke.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Ke.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Ke.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Ke.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Ke.prototype.applyToBufferAttribute=function(s){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),s.applyMatrix4(this)};Ke.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Ke.prototype.makeFrustum=function(s,e,t,n,i,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(s,e,n,t,i,r)};Ke.prototype.getInverse=function(s){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(s).invert()};ti.prototype.isIntersectionLine=function(s){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(s)};mn.prototype.multiplyVector3=function(s){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),s.applyQuaternion(this)};mn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Sr.prototype.isIntersectionBox=function(s){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(s)};Sr.prototype.isIntersectionPlane=function(s){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(s)};Sr.prototype.isIntersectionSphere=function(s){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(s)};jt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};jt.prototype.barycoordFromPoint=function(s,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(s,e)};jt.prototype.midpoint=function(s){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(s)};jt.prototypenormal=function(s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(s)};jt.prototype.plane=function(s){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(s)};jt.barycoordFromPoint=function(s,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),jt.getBarycoord(s,e,t,n,i)};jt.normal=function(s,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),jt.getNormal(s,e,t,n)};fs.prototype.extractAllPoints=function(s){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(s)};fs.prototype.extrude=function(s){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Cr(this,s)};fs.prototype.makeGeometry=function(s){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new rl(this,s)};ve.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};ve.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};ve.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};z.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};z.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};z.prototype.getPositionFromMatrix=function(s){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(s)};z.prototype.getScaleFromMatrix=function(s){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(s)};z.prototype.getColumnFromMatrix=function(s,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,s)};z.prototype.applyProjection=function(s){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(s)};z.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};z.prototype.distanceToManhattan=function(s){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(s)};z.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ct.prototype.fromAttribute=function(s,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(s,e,t)};Ct.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Mt.prototype.getChildByName=function(s){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(s)};Mt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Mt.prototype.translate=function(s,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,s)};Mt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Mt.prototype.applyMatrix=function(s){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(Mt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(s){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=s}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});cn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(cn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Zf},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Gu.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};pn.prototype.setLens=function(s,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(s)};Object.defineProperties(Wn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(s){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=s}},shadowCameraLeft:{set:function(s){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=s}},shadowCameraRight:{set:function(s){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=s}},shadowCameraTop:{set:function(s){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=s}},shadowCameraBottom:{set:function(s){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=s}},shadowCameraNear:{set:function(s){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=s}},shadowCameraFar:{set:function(s){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=s}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(s){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=s}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(s){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=s}},shadowMapHeight:{set:function(s){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=s}}});Object.defineProperties(Xt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===lo},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(lo)}}});Xt.prototype.setDynamic=function(s){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?lo:ns),this};Xt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Xt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ft.prototype.addIndex=function(s){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(s)};Ft.prototype.addAttribute=function(s,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(s,new Xt(arguments[1],arguments[2]))):s==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(s,e)};Ft.prototype.addDrawCall=function(s,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(s,e)};Ft.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Ft.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Ft.prototype.removeAttribute=function(s){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(s)};Ft.prototype.applyMatrix=function(s){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(s)};Object.defineProperties(Ft.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});us.prototype.setDynamic=function(s){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(s===!0?lo:ns),this};us.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Cr.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Cr.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Cr.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Za.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(on.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ke}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(s){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===mu}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(s){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=s}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Hi.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(s){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=s}}});wt.prototype.clearTarget=function(s,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(s),this.clear(e,t,n)};wt.prototype.animate=function(s){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(s)};wt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};wt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};wt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};wt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};wt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};wt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};wt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};wt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};wt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};wt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};wt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};wt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};wt.prototype.enableScissorTest=function(s){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(s)};wt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};wt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};wt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};wt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};wt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};wt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};wt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};wt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};wt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};wt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(wt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=s}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(s){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=s}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(s){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=s===!0?It:Mi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Hu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Rn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=s}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(s){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=s}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=s}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(s){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=s}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(s){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=s}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(s){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=s}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(s){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=s}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(s){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=s}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(s){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=s}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(s){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=s}}});ry.prototype.load=function(s){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new ty().load(s,function(n){e.setBuffer(n)}),this};Xa.prototype.updateCubeMap=function(s,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(s,e)};Xa.prototype.clear=function(s,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(s,e,t,n)};ki.crossOrigin=void 0;ki.loadTexture=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Wv;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};ki.loadTextureCube=function(s,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Gv;i.setCrossOrigin(this.crossOrigin);const r=i.load(s,t,void 0,n);return e&&(r.mapping=e),r};ki.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};ki.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Va}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Va);const dr=new Za,lh=new ke(0),by=new ke(16777215);function My(){dr.background=new ke(lh);const s=new vo(-10,10,-10,10),e=new wt({canvas:document.querySelector("canvas")});e.setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight),s.position.z=10,e.render(dr,s);const t=new Er(1,1,1),n=[];window.addEventListener("resize",function(){s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),e.setSize(window.innerWidth,window.innerHeight)});for(let r=0;r<100*Math.random()+10;r++)n.push(new cn(t,new mo({color:16777215*Math.random()}))),n[r].position.x=Math.random()*20-10,n[r].position.y=Math.random()*20-10,n[r].position.z=Math.random()*10-5,dr.add(n[r]);addEventListener("pointermove",r=>{n.forEach((a,l)=>{a&&2*Math.abs(10*(r.clientX/window.innerWidth*2-1)-a.position.x)<1&&2*Math.abs(10*(r.clientY/window.innerHeight*2-1)-a.position.y)<1&&(n[l]=!1)})});const i=()=>{requestAnimationFrame(i),n.forEach(r=>{r&&(r.rotation.x+=.05*Math.random(),r.rotation.y+=.05*Math.random())}),e.render(dr,s)};i()}function wy(){const s=document.getElementById("ball");s.addEventListener("mousedown",function(e){var t=e.clientY;s.style.backgroundColor="blue",s.style.color="transparent",s.style.userSelect="none",s.style.left=e.clientX+"px",s.style.top=t+window.scrollY+"px",s.style.cursor="none",document.addEventListener("mousemove",function(n){t=n.clientY,s.style.left=n.clientX+"px",s.style.top=t+window.scrollY+"px"}),window.addEventListener("scroll",function(){s.style.top=t+window.scrollY+"px"})})}window.addEventListener("load",function(){navigator.userAgentData.mobile||document.querySelectorAll(".cta-btn--hero").forEach(s=>{s.innerHTML+=s.text=="Install"?" &#11123;":" &#127760;"})});function Sy(){for(var s="0123456789ABCDEF",e="#",t=0;t<6;t++)e+=s[Math.floor(Math.random()*16)];return e}window.addEventListener("load",function(){const s=document.getElementsByClassName("bubbles")[0].childNodes;document.addEventListener("contextmenu",e=>{e.preventDefault(),s[Math.floor(Math.random()*s.length)].style.background=Sy()},!1)});(()=>{var s="",e="38384040373937396665";document.addEventListener("keydown",function(t){s=e.indexOf(s)?"":s+t.keyCode,s===e&&(Qh(),document.getElementById("ball").style.display="block",wy())})})();"serviceWorker"in navigator&&navigator.serviceWorker.register("../sw.js");window.innerWidth<180&&alert("Please use a larger screen to view this website.");function Ty(){const s=document.getElementsByTagName("html")[0].dataset;s.theme==="dark"?(s.theme="light",dr.background=by):(s.theme="dark",dr.background=lh)}document.getElementById("theme-toggle").addEventListener("click",Ty);document.addEventListener("click",Kh);Zh();jh();tf();My();
//# sourceMappingURL=index.js.map
