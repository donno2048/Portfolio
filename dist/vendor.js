var Mf=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Zl={exports:{}},Ds={exports:{}};/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */(function(r){(function(e,t){r.exports=e.document?t(e,!0):function(n){if(!n.document)throw new Error("jQuery requires a window with a document");return t(n)}})(typeof window!="undefined"?window:Mf,function(e,t){var n=[],i=Object.getPrototypeOf,s=n.slice,a=n.flat?function(o){return n.flat.call(o)}:function(o){return n.concat.apply([],o)},l=n.push,h=n.indexOf,u={},p=u.toString,m=u.hasOwnProperty,v=m.toString,_=v.call(Object),b={},S=function(c){return typeof c=="function"&&typeof c.nodeType!="number"&&typeof c.item!="function"},C=function(c){return c!=null&&c===c.window},x=e.document,y={type:!0,src:!0,nonce:!0,noModule:!0};function z(o,c,d){d=d||x;var g,w,M=d.createElement("script");if(M.text=o,c)for(g in y)w=c[g]||c.getAttribute&&c.getAttribute(g),w&&M.setAttribute(g,w);d.head.appendChild(M).parentNode.removeChild(M)}function L(o){return o==null?o+"":typeof o=="object"||typeof o=="function"?u[p.call(o)]||"object":typeof o}var O="3.6.0",f=function(o,c){return new f.fn.init(o,c)};f.fn=f.prototype={jquery:O,constructor:f,length:0,toArray:function(){return s.call(this)},get:function(o){return o==null?s.call(this):o<0?this[o+this.length]:this[o]},pushStack:function(o){var c=f.merge(this.constructor(),o);return c.prevObject=this,c},each:function(o){return f.each(this,o)},map:function(o){return this.pushStack(f.map(this,function(c,d){return o.call(c,d,c)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(f.grep(this,function(o,c){return(c+1)%2}))},odd:function(){return this.pushStack(f.grep(this,function(o,c){return c%2}))},eq:function(o){var c=this.length,d=+o+(o<0?c:0);return this.pushStack(d>=0&&d<c?[this[d]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:n.sort,splice:n.splice},f.extend=f.fn.extend=function(){var o,c,d,g,w,M,T=arguments[0]||{},N=1,F=arguments.length,V=!1;for(typeof T=="boolean"&&(V=T,T=arguments[N]||{},N++),typeof T!="object"&&!S(T)&&(T={}),N===F&&(T=this,N--);N<F;N++)if((o=arguments[N])!=null)for(c in o)g=o[c],!(c==="__proto__"||T===g)&&(V&&g&&(f.isPlainObject(g)||(w=Array.isArray(g)))?(d=T[c],w&&!Array.isArray(d)?M=[]:!w&&!f.isPlainObject(d)?M={}:M=d,w=!1,T[c]=f.extend(V,M,g)):g!==void 0&&(T[c]=g));return T},f.extend({expando:"jQuery"+(O+Math.random()).replace(/\D/g,""),isReady:!0,error:function(o){throw new Error(o)},noop:function(){},isPlainObject:function(o){var c,d;return!o||p.call(o)!=="[object Object]"?!1:(c=i(o),c?(d=m.call(c,"constructor")&&c.constructor,typeof d=="function"&&v.call(d)===_):!0)},isEmptyObject:function(o){var c;for(c in o)return!1;return!0},globalEval:function(o,c,d){z(o,{nonce:c&&c.nonce},d)},each:function(o,c){var d,g=0;if(W(o))for(d=o.length;g<d&&c.call(o[g],g,o[g])!==!1;g++);else for(g in o)if(c.call(o[g],g,o[g])===!1)break;return o},makeArray:function(o,c){var d=c||[];return o!=null&&(W(Object(o))?f.merge(d,typeof o=="string"?[o]:o):l.call(d,o)),d},inArray:function(o,c,d){return c==null?-1:h.call(c,o,d)},merge:function(o,c){for(var d=+c.length,g=0,w=o.length;g<d;g++)o[w++]=c[g];return o.length=w,o},grep:function(o,c,d){for(var g,w=[],M=0,T=o.length,N=!d;M<T;M++)g=!c(o[M],M),g!==N&&w.push(o[M]);return w},map:function(o,c,d){var g,w,M=0,T=[];if(W(o))for(g=o.length;M<g;M++)w=c(o[M],M,d),w!=null&&T.push(w);else for(M in o)w=c(o[M],M,d),w!=null&&T.push(w);return a(T)},guid:1,support:b}),typeof Symbol=="function"&&(f.fn[Symbol.iterator]=n[Symbol.iterator]),f.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(o,c){u["[object "+c+"]"]=c.toLowerCase()});function W(o){var c=!!o&&"length"in o&&o.length,d=L(o);return S(o)||C(o)?!1:d==="array"||c===0||typeof c=="number"&&c>0&&c-1 in o}var ae=function(o){var c,d,g,w,M,T,N,F,V,J,pe,q,ee,Ve,rt,Ge,qt,Gt,xn,St="sizzle"+1*new Date,it=o.document,fn=0,gt=0,zt=Cs(),Or=Cs(),Ts=Cs(),_n=Cs(),Ci=function(E,I){return E===I&&(pe=!0),0},Li={}.hasOwnProperty,dn=[],ri=dn.pop,Cn=dn.push,si=dn.push,kl=dn.slice,Ri=function(E,I){for(var U=0,re=E.length;U<re;U++)if(E[U]===I)return U;return-1},Vo="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",xt="[\\x20\\t\\r\\n\\f]",Pi="(?:\\\\[\\da-fA-F]{1,6}"+xt+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",Vl="\\["+xt+"*("+Pi+")(?:"+xt+"*([*^$|!~]?=)"+xt+`*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(`+Pi+"))|)"+xt+"*\\]",Go=":("+Pi+`)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|`+Vl+")*)|.*)\\)|)",cf=new RegExp(xt+"+","g"),Es=new RegExp("^"+xt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+xt+"+$","g"),uf=new RegExp("^"+xt+"*,"+xt+"*"),Gl=new RegExp("^"+xt+"*([>+~]|"+xt+")"+xt+"*"),hf=new RegExp(xt+"|>"),ff=new RegExp(Go),df=new RegExp("^"+Pi+"$"),As={ID:new RegExp("^#("+Pi+")"),CLASS:new RegExp("^\\.("+Pi+")"),TAG:new RegExp("^("+Pi+"|[*])"),ATTR:new RegExp("^"+Vl),PSEUDO:new RegExp("^"+Go),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+xt+"*(even|odd|(([+-]|)(\\d*)n|)"+xt+"*(?:([+-]|)"+xt+"*(\\d+)|))"+xt+"*\\)|)","i"),bool:new RegExp("^(?:"+Vo+")$","i"),needsContext:new RegExp("^"+xt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+xt+"*((?:-\\d)?\\d*)"+xt+"*\\)|)(?=[^-]|$)","i")},pf=/HTML$/i,mf=/^(?:input|select|textarea|button)$/i,gf=/^h\d$/i,zr=/^[^{]+\{\s*\[native \w/,vf=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Wo=/[+~]/,Xn=new RegExp("\\\\[\\da-fA-F]{1,6}"+xt+"?|\\\\([^\\r\\n\\f])","g"),Yn=function(E,I){var U="0x"+E.slice(1)-65536;return I||(U<0?String.fromCharCode(U+65536):String.fromCharCode(U>>10|55296,U&1023|56320))},Wl=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ql=function(E,I){return I?E==="\0"?"\uFFFD":E.slice(0,-1)+"\\"+E.charCodeAt(E.length-1).toString(16)+" ":"\\"+E},jl=function(){q()},yf=Rs(function(E){return E.disabled===!0&&E.nodeName.toLowerCase()==="fieldset"},{dir:"parentNode",next:"legend"});try{si.apply(dn=kl.call(it.childNodes),it.childNodes),dn[it.childNodes.length].nodeType}catch{si={apply:dn.length?function(I,U){Cn.apply(I,kl.call(U))}:function(I,U){for(var re=I.length,G=0;I[re++]=U[G++];);I.length=re-1}}}function Et(E,I,U,re){var G,fe,me,we,Ee,Ye,je,$e=I&&I.ownerDocument,ct=I?I.nodeType:9;if(U=U||[],typeof E!="string"||!E||ct!==1&&ct!==9&&ct!==11)return U;if(!re&&(q(I),I=I||ee,rt)){if(ct!==11&&(Ee=vf.exec(E)))if(G=Ee[1]){if(ct===9)if(me=I.getElementById(G)){if(me.id===G)return U.push(me),U}else return U;else if($e&&(me=$e.getElementById(G))&&xn(I,me)&&me.id===G)return U.push(me),U}else{if(Ee[2])return si.apply(U,I.getElementsByTagName(E)),U;if((G=Ee[3])&&d.getElementsByClassName&&I.getElementsByClassName)return si.apply(U,I.getElementsByClassName(G)),U}if(d.qsa&&!_n[E+" "]&&(!Ge||!Ge.test(E))&&(ct!==1||I.nodeName.toLowerCase()!=="object")){if(je=E,$e=I,ct===1&&(hf.test(E)||Gl.test(E))){for($e=Wo.test(E)&&jo(I.parentNode)||I,($e!==I||!d.scope)&&((we=I.getAttribute("id"))?we=we.replace(Wl,ql):I.setAttribute("id",we=St)),Ye=T(E),fe=Ye.length;fe--;)Ye[fe]=(we?"#"+we:":scope")+" "+Ls(Ye[fe]);je=Ye.join(",")}try{return si.apply(U,$e.querySelectorAll(je)),U}catch{_n(E,!0)}finally{we===St&&I.removeAttribute("id")}}}return F(E.replace(Es,"$1"),I,U,re)}function Cs(){var E=[];function I(U,re){return E.push(U+" ")>g.cacheLength&&delete I[E.shift()],I[U+" "]=re}return I}function Nn(E){return E[St]=!0,E}function Fn(E){var I=ee.createElement("fieldset");try{return!!E(I)}catch{return!1}finally{I.parentNode&&I.parentNode.removeChild(I),I=null}}function qo(E,I){for(var U=E.split("|"),re=U.length;re--;)g.attrHandle[U[re]]=I}function Xl(E,I){var U=I&&E,re=U&&E.nodeType===1&&I.nodeType===1&&E.sourceIndex-I.sourceIndex;if(re)return re;if(U){for(;U=U.nextSibling;)if(U===I)return-1}return E?1:-1}function xf(E){return function(I){var U=I.nodeName.toLowerCase();return U==="input"&&I.type===E}}function _f(E){return function(I){var U=I.nodeName.toLowerCase();return(U==="input"||U==="button")&&I.type===E}}function Yl(E){return function(I){return"form"in I?I.parentNode&&I.disabled===!1?"label"in I?"label"in I.parentNode?I.parentNode.disabled===E:I.disabled===E:I.isDisabled===E||I.isDisabled!==!E&&yf(I)===E:I.disabled===E:"label"in I?I.disabled===E:!1}}function Di(E){return Nn(function(I){return I=+I,Nn(function(U,re){for(var G,fe=E([],U.length,I),me=fe.length;me--;)U[G=fe[me]]&&(U[G]=!(re[G]=U[G]))})})}function jo(E){return E&&typeof E.getElementsByTagName!="undefined"&&E}d=Et.support={},M=Et.isXML=function(E){var I=E&&E.namespaceURI,U=E&&(E.ownerDocument||E).documentElement;return!pf.test(I||U&&U.nodeName||"HTML")},q=Et.setDocument=function(E){var I,U,re=E?E.ownerDocument||E:it;return re==ee||re.nodeType!==9||!re.documentElement||(ee=re,Ve=ee.documentElement,rt=!M(ee),it!=ee&&(U=ee.defaultView)&&U.top!==U&&(U.addEventListener?U.addEventListener("unload",jl,!1):U.attachEvent&&U.attachEvent("onunload",jl)),d.scope=Fn(function(G){return Ve.appendChild(G).appendChild(ee.createElement("div")),typeof G.querySelectorAll!="undefined"&&!G.querySelectorAll(":scope fieldset div").length}),d.attributes=Fn(function(G){return G.className="i",!G.getAttribute("className")}),d.getElementsByTagName=Fn(function(G){return G.appendChild(ee.createComment("")),!G.getElementsByTagName("*").length}),d.getElementsByClassName=zr.test(ee.getElementsByClassName),d.getById=Fn(function(G){return Ve.appendChild(G).id=St,!ee.getElementsByName||!ee.getElementsByName(St).length}),d.getById?(g.filter.ID=function(G){var fe=G.replace(Xn,Yn);return function(me){return me.getAttribute("id")===fe}},g.find.ID=function(G,fe){if(typeof fe.getElementById!="undefined"&&rt){var me=fe.getElementById(G);return me?[me]:[]}}):(g.filter.ID=function(G){var fe=G.replace(Xn,Yn);return function(me){var we=typeof me.getAttributeNode!="undefined"&&me.getAttributeNode("id");return we&&we.value===fe}},g.find.ID=function(G,fe){if(typeof fe.getElementById!="undefined"&&rt){var me,we,Ee,Ye=fe.getElementById(G);if(Ye){if(me=Ye.getAttributeNode("id"),me&&me.value===G)return[Ye];for(Ee=fe.getElementsByName(G),we=0;Ye=Ee[we++];)if(me=Ye.getAttributeNode("id"),me&&me.value===G)return[Ye]}return[]}}),g.find.TAG=d.getElementsByTagName?function(G,fe){if(typeof fe.getElementsByTagName!="undefined")return fe.getElementsByTagName(G);if(d.qsa)return fe.querySelectorAll(G)}:function(G,fe){var me,we=[],Ee=0,Ye=fe.getElementsByTagName(G);if(G==="*"){for(;me=Ye[Ee++];)me.nodeType===1&&we.push(me);return we}return Ye},g.find.CLASS=d.getElementsByClassName&&function(G,fe){if(typeof fe.getElementsByClassName!="undefined"&&rt)return fe.getElementsByClassName(G)},qt=[],Ge=[],(d.qsa=zr.test(ee.querySelectorAll))&&(Fn(function(G){var fe;Ve.appendChild(G).innerHTML="<a id='"+St+"'></a><select id='"+St+"-\r\\' msallowcapture=''><option selected=''></option></select>",G.querySelectorAll("[msallowcapture^='']").length&&Ge.push("[*^$]="+xt+`*(?:''|"")`),G.querySelectorAll("[selected]").length||Ge.push("\\["+xt+"*(?:value|"+Vo+")"),G.querySelectorAll("[id~="+St+"-]").length||Ge.push("~="),fe=ee.createElement("input"),fe.setAttribute("name",""),G.appendChild(fe),G.querySelectorAll("[name='']").length||Ge.push("\\["+xt+"*name"+xt+"*="+xt+`*(?:''|"")`),G.querySelectorAll(":checked").length||Ge.push(":checked"),G.querySelectorAll("a#"+St+"+*").length||Ge.push(".#.+[+~]"),G.querySelectorAll("\\\f"),Ge.push("[\\r\\n\\f]")}),Fn(function(G){G.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var fe=ee.createElement("input");fe.setAttribute("type","hidden"),G.appendChild(fe).setAttribute("name","D"),G.querySelectorAll("[name=d]").length&&Ge.push("name"+xt+"*[*^$|!~]?="),G.querySelectorAll(":enabled").length!==2&&Ge.push(":enabled",":disabled"),Ve.appendChild(G).disabled=!0,G.querySelectorAll(":disabled").length!==2&&Ge.push(":enabled",":disabled"),G.querySelectorAll("*,:x"),Ge.push(",.*:")})),(d.matchesSelector=zr.test(Gt=Ve.matches||Ve.webkitMatchesSelector||Ve.mozMatchesSelector||Ve.oMatchesSelector||Ve.msMatchesSelector))&&Fn(function(G){d.disconnectedMatch=Gt.call(G,"*"),Gt.call(G,"[s!='']:x"),qt.push("!=",Go)}),Ge=Ge.length&&new RegExp(Ge.join("|")),qt=qt.length&&new RegExp(qt.join("|")),I=zr.test(Ve.compareDocumentPosition),xn=I||zr.test(Ve.contains)?function(G,fe){var me=G.nodeType===9?G.documentElement:G,we=fe&&fe.parentNode;return G===we||!!(we&&we.nodeType===1&&(me.contains?me.contains(we):G.compareDocumentPosition&&G.compareDocumentPosition(we)&16))}:function(G,fe){if(fe){for(;fe=fe.parentNode;)if(fe===G)return!0}return!1},Ci=I?function(G,fe){if(G===fe)return pe=!0,0;var me=!G.compareDocumentPosition-!fe.compareDocumentPosition;return me||(me=(G.ownerDocument||G)==(fe.ownerDocument||fe)?G.compareDocumentPosition(fe):1,me&1||!d.sortDetached&&fe.compareDocumentPosition(G)===me?G==ee||G.ownerDocument==it&&xn(it,G)?-1:fe==ee||fe.ownerDocument==it&&xn(it,fe)?1:J?Ri(J,G)-Ri(J,fe):0:me&4?-1:1)}:function(G,fe){if(G===fe)return pe=!0,0;var me,we=0,Ee=G.parentNode,Ye=fe.parentNode,je=[G],$e=[fe];if(!Ee||!Ye)return G==ee?-1:fe==ee?1:Ee?-1:Ye?1:J?Ri(J,G)-Ri(J,fe):0;if(Ee===Ye)return Xl(G,fe);for(me=G;me=me.parentNode;)je.unshift(me);for(me=fe;me=me.parentNode;)$e.unshift(me);for(;je[we]===$e[we];)we++;return we?Xl(je[we],$e[we]):je[we]==it?-1:$e[we]==it?1:0}),ee},Et.matches=function(E,I){return Et(E,null,null,I)},Et.matchesSelector=function(E,I){if(q(E),d.matchesSelector&&rt&&!_n[I+" "]&&(!qt||!qt.test(I))&&(!Ge||!Ge.test(I)))try{var U=Gt.call(E,I);if(U||d.disconnectedMatch||E.document&&E.document.nodeType!==11)return U}catch{_n(I,!0)}return Et(I,ee,null,[E]).length>0},Et.contains=function(E,I){return(E.ownerDocument||E)!=ee&&q(E),xn(E,I)},Et.attr=function(E,I){(E.ownerDocument||E)!=ee&&q(E);var U=g.attrHandle[I.toLowerCase()],re=U&&Li.call(g.attrHandle,I.toLowerCase())?U(E,I,!rt):void 0;return re!==void 0?re:d.attributes||!rt?E.getAttribute(I):(re=E.getAttributeNode(I))&&re.specified?re.value:null},Et.escape=function(E){return(E+"").replace(Wl,ql)},Et.error=function(E){throw new Error("Syntax error, unrecognized expression: "+E)},Et.uniqueSort=function(E){var I,U=[],re=0,G=0;if(pe=!d.detectDuplicates,J=!d.sortStable&&E.slice(0),E.sort(Ci),pe){for(;I=E[G++];)I===E[G]&&(re=U.push(G));for(;re--;)E.splice(U[re],1)}return J=null,E},w=Et.getText=function(E){var I,U="",re=0,G=E.nodeType;if(G){if(G===1||G===9||G===11){if(typeof E.textContent=="string")return E.textContent;for(E=E.firstChild;E;E=E.nextSibling)U+=w(E)}else if(G===3||G===4)return E.nodeValue}else for(;I=E[re++];)U+=w(I);return U},g=Et.selectors={cacheLength:50,createPseudo:Nn,match:As,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(E){return E[1]=E[1].replace(Xn,Yn),E[3]=(E[3]||E[4]||E[5]||"").replace(Xn,Yn),E[2]==="~="&&(E[3]=" "+E[3]+" "),E.slice(0,4)},CHILD:function(E){return E[1]=E[1].toLowerCase(),E[1].slice(0,3)==="nth"?(E[3]||Et.error(E[0]),E[4]=+(E[4]?E[5]+(E[6]||1):2*(E[3]==="even"||E[3]==="odd")),E[5]=+(E[7]+E[8]||E[3]==="odd")):E[3]&&Et.error(E[0]),E},PSEUDO:function(E){var I,U=!E[6]&&E[2];return As.CHILD.test(E[0])?null:(E[3]?E[2]=E[4]||E[5]||"":U&&ff.test(U)&&(I=T(U,!0))&&(I=U.indexOf(")",U.length-I)-U.length)&&(E[0]=E[0].slice(0,I),E[2]=U.slice(0,I)),E.slice(0,3))}},filter:{TAG:function(E){var I=E.replace(Xn,Yn).toLowerCase();return E==="*"?function(){return!0}:function(U){return U.nodeName&&U.nodeName.toLowerCase()===I}},CLASS:function(E){var I=zt[E+" "];return I||(I=new RegExp("(^|"+xt+")"+E+"("+xt+"|$)"))&&zt(E,function(U){return I.test(typeof U.className=="string"&&U.className||typeof U.getAttribute!="undefined"&&U.getAttribute("class")||"")})},ATTR:function(E,I,U){return function(re){var G=Et.attr(re,E);return G==null?I==="!=":I?(G+="",I==="="?G===U:I==="!="?G!==U:I==="^="?U&&G.indexOf(U)===0:I==="*="?U&&G.indexOf(U)>-1:I==="$="?U&&G.slice(-U.length)===U:I==="~="?(" "+G.replace(cf," ")+" ").indexOf(U)>-1:I==="|="?G===U||G.slice(0,U.length+1)===U+"-":!1):!0}},CHILD:function(E,I,U,re,G){var fe=E.slice(0,3)!=="nth",me=E.slice(-4)!=="last",we=I==="of-type";return re===1&&G===0?function(Ee){return!!Ee.parentNode}:function(Ee,Ye,je){var $e,ct,At,Je,jt,rn,bn=fe!==me?"nextSibling":"previousSibling",Nt=Ee.parentNode,Ur=we&&Ee.nodeName.toLowerCase(),Hr=!je&&!we,wn=!1;if(Nt){if(fe){for(;bn;){for(Je=Ee;Je=Je[bn];)if(we?Je.nodeName.toLowerCase()===Ur:Je.nodeType===1)return!1;rn=bn=E==="only"&&!rn&&"nextSibling"}return!0}if(rn=[me?Nt.firstChild:Nt.lastChild],me&&Hr){for(Je=Nt,At=Je[St]||(Je[St]={}),ct=At[Je.uniqueID]||(At[Je.uniqueID]={}),$e=ct[E]||[],jt=$e[0]===fn&&$e[1],wn=jt&&$e[2],Je=jt&&Nt.childNodes[jt];Je=++jt&&Je&&Je[bn]||(wn=jt=0)||rn.pop();)if(Je.nodeType===1&&++wn&&Je===Ee){ct[E]=[fn,jt,wn];break}}else if(Hr&&(Je=Ee,At=Je[St]||(Je[St]={}),ct=At[Je.uniqueID]||(At[Je.uniqueID]={}),$e=ct[E]||[],jt=$e[0]===fn&&$e[1],wn=jt),wn===!1)for(;(Je=++jt&&Je&&Je[bn]||(wn=jt=0)||rn.pop())&&!((we?Je.nodeName.toLowerCase()===Ur:Je.nodeType===1)&&++wn&&(Hr&&(At=Je[St]||(Je[St]={}),ct=At[Je.uniqueID]||(At[Je.uniqueID]={}),ct[E]=[fn,wn]),Je===Ee)););return wn-=G,wn===re||wn%re==0&&wn/re>=0}}},PSEUDO:function(E,I){var U,re=g.pseudos[E]||g.setFilters[E.toLowerCase()]||Et.error("unsupported pseudo: "+E);return re[St]?re(I):re.length>1?(U=[E,E,"",I],g.setFilters.hasOwnProperty(E.toLowerCase())?Nn(function(G,fe){for(var me,we=re(G,I),Ee=we.length;Ee--;)me=Ri(G,we[Ee]),G[me]=!(fe[me]=we[Ee])}):function(G){return re(G,0,U)}):re}},pseudos:{not:Nn(function(E){var I=[],U=[],re=N(E.replace(Es,"$1"));return re[St]?Nn(function(G,fe,me,we){for(var Ee,Ye=re(G,null,we,[]),je=G.length;je--;)(Ee=Ye[je])&&(G[je]=!(fe[je]=Ee))}):function(G,fe,me){return I[0]=G,re(I,null,me,U),I[0]=null,!U.pop()}}),has:Nn(function(E){return function(I){return Et(E,I).length>0}}),contains:Nn(function(E){return E=E.replace(Xn,Yn),function(I){return(I.textContent||w(I)).indexOf(E)>-1}}),lang:Nn(function(E){return df.test(E||"")||Et.error("unsupported lang: "+E),E=E.replace(Xn,Yn).toLowerCase(),function(I){var U;do if(U=rt?I.lang:I.getAttribute("xml:lang")||I.getAttribute("lang"))return U=U.toLowerCase(),U===E||U.indexOf(E+"-")===0;while((I=I.parentNode)&&I.nodeType===1);return!1}}),target:function(E){var I=o.location&&o.location.hash;return I&&I.slice(1)===E.id},root:function(E){return E===Ve},focus:function(E){return E===ee.activeElement&&(!ee.hasFocus||ee.hasFocus())&&!!(E.type||E.href||~E.tabIndex)},enabled:Yl(!1),disabled:Yl(!0),checked:function(E){var I=E.nodeName.toLowerCase();return I==="input"&&!!E.checked||I==="option"&&!!E.selected},selected:function(E){return E.parentNode&&E.parentNode.selectedIndex,E.selected===!0},empty:function(E){for(E=E.firstChild;E;E=E.nextSibling)if(E.nodeType<6)return!1;return!0},parent:function(E){return!g.pseudos.empty(E)},header:function(E){return gf.test(E.nodeName)},input:function(E){return mf.test(E.nodeName)},button:function(E){var I=E.nodeName.toLowerCase();return I==="input"&&E.type==="button"||I==="button"},text:function(E){var I;return E.nodeName.toLowerCase()==="input"&&E.type==="text"&&((I=E.getAttribute("type"))==null||I.toLowerCase()==="text")},first:Di(function(){return[0]}),last:Di(function(E,I){return[I-1]}),eq:Di(function(E,I,U){return[U<0?U+I:U]}),even:Di(function(E,I){for(var U=0;U<I;U+=2)E.push(U);return E}),odd:Di(function(E,I){for(var U=1;U<I;U+=2)E.push(U);return E}),lt:Di(function(E,I,U){for(var re=U<0?U+I:U>I?I:U;--re>=0;)E.push(re);return E}),gt:Di(function(E,I,U){for(var re=U<0?U+I:U;++re<I;)E.push(re);return E})}},g.pseudos.nth=g.pseudos.eq;for(c in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})g.pseudos[c]=xf(c);for(c in{submit:!0,reset:!0})g.pseudos[c]=_f(c);function Jl(){}Jl.prototype=g.filters=g.pseudos,g.setFilters=new Jl,T=Et.tokenize=function(E,I){var U,re,G,fe,me,we,Ee,Ye=Or[E+" "];if(Ye)return I?0:Ye.slice(0);for(me=E,we=[],Ee=g.preFilter;me;){(!U||(re=uf.exec(me)))&&(re&&(me=me.slice(re[0].length)||me),we.push(G=[])),U=!1,(re=Gl.exec(me))&&(U=re.shift(),G.push({value:U,type:re[0].replace(Es," ")}),me=me.slice(U.length));for(fe in g.filter)(re=As[fe].exec(me))&&(!Ee[fe]||(re=Ee[fe](re)))&&(U=re.shift(),G.push({value:U,type:fe,matches:re}),me=me.slice(U.length));if(!U)break}return I?me.length:me?Et.error(E):Or(E,we).slice(0)};function Ls(E){for(var I=0,U=E.length,re="";I<U;I++)re+=E[I].value;return re}function Rs(E,I,U){var re=I.dir,G=I.next,fe=G||re,me=U&&fe==="parentNode",we=gt++;return I.first?function(Ee,Ye,je){for(;Ee=Ee[re];)if(Ee.nodeType===1||me)return E(Ee,Ye,je);return!1}:function(Ee,Ye,je){var $e,ct,At,Je=[fn,we];if(je){for(;Ee=Ee[re];)if((Ee.nodeType===1||me)&&E(Ee,Ye,je))return!0}else for(;Ee=Ee[re];)if(Ee.nodeType===1||me)if(At=Ee[St]||(Ee[St]={}),ct=At[Ee.uniqueID]||(At[Ee.uniqueID]={}),G&&G===Ee.nodeName.toLowerCase())Ee=Ee[re]||Ee;else{if(($e=ct[fe])&&$e[0]===fn&&$e[1]===we)return Je[2]=$e[2];if(ct[fe]=Je,Je[2]=E(Ee,Ye,je))return!0}return!1}}function Xo(E){return E.length>1?function(I,U,re){for(var G=E.length;G--;)if(!E[G](I,U,re))return!1;return!0}:E[0]}function bf(E,I,U){for(var re=0,G=I.length;re<G;re++)Et(E,I[re],U);return U}function Ps(E,I,U,re,G){for(var fe,me=[],we=0,Ee=E.length,Ye=I!=null;we<Ee;we++)(fe=E[we])&&(!U||U(fe,re,G))&&(me.push(fe),Ye&&I.push(we));return me}function Yo(E,I,U,re,G,fe){return re&&!re[St]&&(re=Yo(re)),G&&!G[St]&&(G=Yo(G,fe)),Nn(function(me,we,Ee,Ye){var je,$e,ct,At=[],Je=[],jt=we.length,rn=me||bf(I||"*",Ee.nodeType?[Ee]:Ee,[]),bn=E&&(me||!I)?Ps(rn,At,E,Ee,Ye):rn,Nt=U?G||(me?E:jt||re)?[]:we:bn;if(U&&U(bn,Nt,Ee,Ye),re)for(je=Ps(Nt,Je),re(je,[],Ee,Ye),$e=je.length;$e--;)(ct=je[$e])&&(Nt[Je[$e]]=!(bn[Je[$e]]=ct));if(me){if(G||E){if(G){for(je=[],$e=Nt.length;$e--;)(ct=Nt[$e])&&je.push(bn[$e]=ct);G(null,Nt=[],je,Ye)}for($e=Nt.length;$e--;)(ct=Nt[$e])&&(je=G?Ri(me,ct):At[$e])>-1&&(me[je]=!(we[je]=ct))}}else Nt=Ps(Nt===we?Nt.splice(jt,Nt.length):Nt),G?G(null,we,Nt,Ye):si.apply(we,Nt)})}function Jo(E){for(var I,U,re,G=E.length,fe=g.relative[E[0].type],me=fe||g.relative[" "],we=fe?1:0,Ee=Rs(function($e){return $e===I},me,!0),Ye=Rs(function($e){return Ri(I,$e)>-1},me,!0),je=[function($e,ct,At){var Je=!fe&&(At||ct!==V)||((I=ct).nodeType?Ee($e,ct,At):Ye($e,ct,At));return I=null,Je}];we<G;we++)if(U=g.relative[E[we].type])je=[Rs(Xo(je),U)];else{if(U=g.filter[E[we].type].apply(null,E[we].matches),U[St]){for(re=++we;re<G&&!g.relative[E[re].type];re++);return Yo(we>1&&Xo(je),we>1&&Ls(E.slice(0,we-1).concat({value:E[we-2].type===" "?"*":""})).replace(Es,"$1"),U,we<re&&Jo(E.slice(we,re)),re<G&&Jo(E=E.slice(re)),re<G&&Ls(E))}je.push(U)}return Xo(je)}function wf(E,I){var U=I.length>0,re=E.length>0,G=function(fe,me,we,Ee,Ye){var je,$e,ct,At=0,Je="0",jt=fe&&[],rn=[],bn=V,Nt=fe||re&&g.find.TAG("*",Ye),Ur=fn+=bn==null?1:Math.random()||.1,Hr=Nt.length;for(Ye&&(V=me==ee||me||Ye);Je!==Hr&&(je=Nt[Je])!=null;Je++){if(re&&je){for($e=0,!me&&je.ownerDocument!=ee&&(q(je),we=!rt);ct=E[$e++];)if(ct(je,me||ee,we)){Ee.push(je);break}Ye&&(fn=Ur)}U&&((je=!ct&&je)&&At--,fe&&jt.push(je))}if(At+=Je,U&&Je!==At){for($e=0;ct=I[$e++];)ct(jt,rn,me,we);if(fe){if(At>0)for(;Je--;)jt[Je]||rn[Je]||(rn[Je]=ri.call(Ee));rn=Ps(rn)}si.apply(Ee,rn),Ye&&!fe&&rn.length>0&&At+I.length>1&&Et.uniqueSort(Ee)}return Ye&&(fn=Ur,V=bn),jt};return U?Nn(G):G}return N=Et.compile=function(E,I){var U,re=[],G=[],fe=Ts[E+" "];if(!fe){for(I||(I=T(E)),U=I.length;U--;)fe=Jo(I[U]),fe[St]?re.push(fe):G.push(fe);fe=Ts(E,wf(G,re)),fe.selector=E}return fe},F=Et.select=function(E,I,U,re){var G,fe,me,we,Ee,Ye=typeof E=="function"&&E,je=!re&&T(E=Ye.selector||E);if(U=U||[],je.length===1){if(fe=je[0]=je[0].slice(0),fe.length>2&&(me=fe[0]).type==="ID"&&I.nodeType===9&&rt&&g.relative[fe[1].type]){if(I=(g.find.ID(me.matches[0].replace(Xn,Yn),I)||[])[0],I)Ye&&(I=I.parentNode);else return U;E=E.slice(fe.shift().value.length)}for(G=As.needsContext.test(E)?0:fe.length;G--&&(me=fe[G],!g.relative[we=me.type]);)if((Ee=g.find[we])&&(re=Ee(me.matches[0].replace(Xn,Yn),Wo.test(fe[0].type)&&jo(I.parentNode)||I))){if(fe.splice(G,1),E=re.length&&Ls(fe),!E)return si.apply(U,re),U;break}}return(Ye||N(E,je))(re,I,!rt,U,!I||Wo.test(E)&&jo(I.parentNode)||I),U},d.sortStable=St.split("").sort(Ci).join("")===St,d.detectDuplicates=!!pe,q(),d.sortDetached=Fn(function(E){return E.compareDocumentPosition(ee.createElement("fieldset"))&1}),Fn(function(E){return E.innerHTML="<a href='#'></a>",E.firstChild.getAttribute("href")==="#"})||qo("type|href|height|width",function(E,I,U){if(!U)return E.getAttribute(I,I.toLowerCase()==="type"?1:2)}),(!d.attributes||!Fn(function(E){return E.innerHTML="<input/>",E.firstChild.setAttribute("value",""),E.firstChild.getAttribute("value")===""}))&&qo("value",function(E,I,U){if(!U&&E.nodeName.toLowerCase()==="input")return E.defaultValue}),Fn(function(E){return E.getAttribute("disabled")==null})||qo(Vo,function(E,I,U){var re;if(!U)return E[I]===!0?I.toLowerCase():(re=E.getAttributeNode(I))&&re.specified?re.value:null}),Et}(e);f.find=ae,f.expr=ae.selectors,f.expr[":"]=f.expr.pseudos,f.uniqueSort=f.unique=ae.uniqueSort,f.text=ae.getText,f.isXMLDoc=ae.isXML,f.contains=ae.contains,f.escapeSelector=ae.escape;var Me=function(o,c,d){for(var g=[],w=d!==void 0;(o=o[c])&&o.nodeType!==9;)if(o.nodeType===1){if(w&&f(o).is(d))break;g.push(o)}return g},ge=function(o,c){for(var d=[];o;o=o.nextSibling)o.nodeType===1&&o!==c&&d.push(o);return d},A=f.expr.match.needsContext;function k(o,c){return o.nodeName&&o.nodeName.toLowerCase()===c.toLowerCase()}var X=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function Z(o,c,d){return S(c)?f.grep(o,function(g,w){return!!c.call(g,w,g)!==d}):c.nodeType?f.grep(o,function(g){return g===c!==d}):typeof c!="string"?f.grep(o,function(g){return h.call(c,g)>-1!==d}):f.filter(c,o,d)}f.filter=function(o,c,d){var g=c[0];return d&&(o=":not("+o+")"),c.length===1&&g.nodeType===1?f.find.matchesSelector(g,o)?[g]:[]:f.find.matches(o,f.grep(c,function(w){return w.nodeType===1}))},f.fn.extend({find:function(o){var c,d,g=this.length,w=this;if(typeof o!="string")return this.pushStack(f(o).filter(function(){for(c=0;c<g;c++)if(f.contains(w[c],this))return!0}));for(d=this.pushStack([]),c=0;c<g;c++)f.find(o,w[c],d);return g>1?f.uniqueSort(d):d},filter:function(o){return this.pushStack(Z(this,o||[],!1))},not:function(o){return this.pushStack(Z(this,o||[],!0))},is:function(o){return!!Z(this,typeof o=="string"&&A.test(o)?f(o):o||[],!1).length}});var K,Y=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,ce=f.fn.init=function(o,c,d){var g,w;if(!o)return this;if(d=d||K,typeof o=="string")if(o[0]==="<"&&o[o.length-1]===">"&&o.length>=3?g=[null,o,null]:g=Y.exec(o),g&&(g[1]||!c))if(g[1]){if(c=c instanceof f?c[0]:c,f.merge(this,f.parseHTML(g[1],c&&c.nodeType?c.ownerDocument||c:x,!0)),X.test(g[1])&&f.isPlainObject(c))for(g in c)S(this[g])?this[g](c[g]):this.attr(g,c[g]);return this}else return w=x.getElementById(g[2]),w&&(this[0]=w,this.length=1),this;else return!c||c.jquery?(c||d).find(o):this.constructor(c).find(o);else{if(o.nodeType)return this[0]=o,this.length=1,this;if(S(o))return d.ready!==void 0?d.ready(o):o(f)}return f.makeArray(o,this)};ce.prototype=f.fn,K=f(x);var ve=/^(?:parents|prev(?:Until|All))/,Ne={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({has:function(o){var c=f(o,this),d=c.length;return this.filter(function(){for(var g=0;g<d;g++)if(f.contains(this,c[g]))return!0})},closest:function(o,c){var d,g=0,w=this.length,M=[],T=typeof o!="string"&&f(o);if(!A.test(o)){for(;g<w;g++)for(d=this[g];d&&d!==c;d=d.parentNode)if(d.nodeType<11&&(T?T.index(d)>-1:d.nodeType===1&&f.find.matchesSelector(d,o))){M.push(d);break}}return this.pushStack(M.length>1?f.uniqueSort(M):M)},index:function(o){return o?typeof o=="string"?h.call(f(o),this[0]):h.call(this,o.jquery?o[0]:o):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(o,c){return this.pushStack(f.uniqueSort(f.merge(this.get(),f(o,c))))},addBack:function(o){return this.add(o==null?this.prevObject:this.prevObject.filter(o))}});function oe(o,c){for(;(o=o[c])&&o.nodeType!==1;);return o}f.each({parent:function(o){var c=o.parentNode;return c&&c.nodeType!==11?c:null},parents:function(o){return Me(o,"parentNode")},parentsUntil:function(o,c,d){return Me(o,"parentNode",d)},next:function(o){return oe(o,"nextSibling")},prev:function(o){return oe(o,"previousSibling")},nextAll:function(o){return Me(o,"nextSibling")},prevAll:function(o){return Me(o,"previousSibling")},nextUntil:function(o,c,d){return Me(o,"nextSibling",d)},prevUntil:function(o,c,d){return Me(o,"previousSibling",d)},siblings:function(o){return ge((o.parentNode||{}).firstChild,o)},children:function(o){return ge(o.firstChild)},contents:function(o){return o.contentDocument!=null&&i(o.contentDocument)?o.contentDocument:(k(o,"template")&&(o=o.content||o),f.merge([],o.childNodes))}},function(o,c){f.fn[o]=function(d,g){var w=f.map(this,c,d);return o.slice(-5)!=="Until"&&(g=d),g&&typeof g=="string"&&(w=f.filter(g,w)),this.length>1&&(Ne[o]||f.uniqueSort(w),ve.test(o)&&w.reverse()),this.pushStack(w)}});var ue=/[^\x20\t\r\n\f]+/g;function Le(o){var c={};return f.each(o.match(ue)||[],function(d,g){c[g]=!0}),c}f.Callbacks=function(o){o=typeof o=="string"?Le(o):f.extend({},o);var c,d,g,w,M=[],T=[],N=-1,F=function(){for(w=w||o.once,g=c=!0;T.length;N=-1)for(d=T.shift();++N<M.length;)M[N].apply(d[0],d[1])===!1&&o.stopOnFalse&&(N=M.length,d=!1);o.memory||(d=!1),c=!1,w&&(d?M=[]:M="")},V={add:function(){return M&&(d&&!c&&(N=M.length-1,T.push(d)),function J(pe){f.each(pe,function(q,ee){S(ee)?(!o.unique||!V.has(ee))&&M.push(ee):ee&&ee.length&&L(ee)!=="string"&&J(ee)})}(arguments),d&&!c&&F()),this},remove:function(){return f.each(arguments,function(J,pe){for(var q;(q=f.inArray(pe,M,q))>-1;)M.splice(q,1),q<=N&&N--}),this},has:function(J){return J?f.inArray(J,M)>-1:M.length>0},empty:function(){return M&&(M=[]),this},disable:function(){return w=T=[],M=d="",this},disabled:function(){return!M},lock:function(){return w=T=[],!d&&!c&&(M=d=""),this},locked:function(){return!!w},fireWith:function(J,pe){return w||(pe=pe||[],pe=[J,pe.slice?pe.slice():pe],T.push(pe),c||F()),this},fire:function(){return V.fireWith(this,arguments),this},fired:function(){return!!g}};return V};function De(o){return o}function Ue(o){throw o}function ne(o,c,d,g){var w;try{o&&S(w=o.promise)?w.call(o).done(c).fail(d):o&&S(w=o.then)?w.call(o,c,d):c.apply(void 0,[o].slice(g))}catch(M){d.apply(void 0,[M])}}f.extend({Deferred:function(o){var c=[["notify","progress",f.Callbacks("memory"),f.Callbacks("memory"),2],["resolve","done",f.Callbacks("once memory"),f.Callbacks("once memory"),0,"resolved"],["reject","fail",f.Callbacks("once memory"),f.Callbacks("once memory"),1,"rejected"]],d="pending",g={state:function(){return d},always:function(){return w.done(arguments).fail(arguments),this},catch:function(M){return g.then(null,M)},pipe:function(){var M=arguments;return f.Deferred(function(T){f.each(c,function(N,F){var V=S(M[F[4]])&&M[F[4]];w[F[1]](function(){var J=V&&V.apply(this,arguments);J&&S(J.promise)?J.promise().progress(T.notify).done(T.resolve).fail(T.reject):T[F[0]+"With"](this,V?[J]:arguments)})}),M=null}).promise()},then:function(M,T,N){var F=0;function V(J,pe,q,ee){return function(){var Ve=this,rt=arguments,Ge=function(){var Gt,xn;if(!(J<F)){if(Gt=q.apply(Ve,rt),Gt===pe.promise())throw new TypeError("Thenable self-resolution");xn=Gt&&(typeof Gt=="object"||typeof Gt=="function")&&Gt.then,S(xn)?ee?xn.call(Gt,V(F,pe,De,ee),V(F,pe,Ue,ee)):(F++,xn.call(Gt,V(F,pe,De,ee),V(F,pe,Ue,ee),V(F,pe,De,pe.notifyWith))):(q!==De&&(Ve=void 0,rt=[Gt]),(ee||pe.resolveWith)(Ve,rt))}},qt=ee?Ge:function(){try{Ge()}catch(Gt){f.Deferred.exceptionHook&&f.Deferred.exceptionHook(Gt,qt.stackTrace),J+1>=F&&(q!==Ue&&(Ve=void 0,rt=[Gt]),pe.rejectWith(Ve,rt))}};J?qt():(f.Deferred.getStackHook&&(qt.stackTrace=f.Deferred.getStackHook()),e.setTimeout(qt))}}return f.Deferred(function(J){c[0][3].add(V(0,J,S(N)?N:De,J.notifyWith)),c[1][3].add(V(0,J,S(M)?M:De)),c[2][3].add(V(0,J,S(T)?T:Ue))}).promise()},promise:function(M){return M!=null?f.extend(M,g):g}},w={};return f.each(c,function(M,T){var N=T[2],F=T[5];g[T[1]]=N.add,F&&N.add(function(){d=F},c[3-M][2].disable,c[3-M][3].disable,c[0][2].lock,c[0][3].lock),N.add(T[3].fire),w[T[0]]=function(){return w[T[0]+"With"](this===w?void 0:this,arguments),this},w[T[0]+"With"]=N.fireWith}),g.promise(w),o&&o.call(w,w),w},when:function(o){var c=arguments.length,d=c,g=Array(d),w=s.call(arguments),M=f.Deferred(),T=function(N){return function(F){g[N]=this,w[N]=arguments.length>1?s.call(arguments):F,--c||M.resolveWith(g,w)}};if(c<=1&&(ne(o,M.done(T(d)).resolve,M.reject,!c),M.state()==="pending"||S(w[d]&&w[d].then)))return M.then();for(;d--;)ne(w[d],T(d),M.reject);return M.promise()}});var pt=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;f.Deferred.exceptionHook=function(o,c){e.console&&e.console.warn&&o&&pt.test(o.name)&&e.console.warn("jQuery.Deferred exception: "+o.message,o.stack,c)},f.readyException=function(o){e.setTimeout(function(){throw o})};var Oe=f.Deferred();f.fn.ready=function(o){return Oe.then(o).catch(function(c){f.readyException(c)}),this},f.extend({isReady:!1,readyWait:1,ready:function(o){(o===!0?--f.readyWait:f.isReady)||(f.isReady=!0,!(o!==!0&&--f.readyWait>0)&&Oe.resolveWith(x,[f]))}}),f.ready.then=Oe.then;function Xe(){x.removeEventListener("DOMContentLoaded",Xe),e.removeEventListener("load",Xe),f.ready()}x.readyState==="complete"||x.readyState!=="loading"&&!x.documentElement.doScroll?e.setTimeout(f.ready):(x.addEventListener("DOMContentLoaded",Xe),e.addEventListener("load",Xe));var Te=function(o,c,d,g,w,M,T){var N=0,F=o.length,V=d==null;if(L(d)==="object"){w=!0;for(N in d)Te(o,c,N,d[N],!0,M,T)}else if(g!==void 0&&(w=!0,S(g)||(T=!0),V&&(T?(c.call(o,g),c=null):(V=c,c=function(J,pe,q){return V.call(f(J),q)})),c))for(;N<F;N++)c(o[N],d,T?g:g.call(o[N],N,c(o[N],d)));return w?o:V?c.call(o):F?c(o[0],d):M},at=/^-ms-/,Qe=/-([a-z])/g;function de(o,c){return c.toUpperCase()}function xe(o){return o.replace(at,"ms-").replace(Qe,de)}var _e=function(o){return o.nodeType===1||o.nodeType===9||!+o.nodeType};function Re(){this.expando=f.expando+Re.uid++}Re.uid=1,Re.prototype={cache:function(o){var c=o[this.expando];return c||(c={},_e(o)&&(o.nodeType?o[this.expando]=c:Object.defineProperty(o,this.expando,{value:c,configurable:!0}))),c},set:function(o,c,d){var g,w=this.cache(o);if(typeof c=="string")w[xe(c)]=d;else for(g in c)w[xe(g)]=c[g];return w},get:function(o,c){return c===void 0?this.cache(o):o[this.expando]&&o[this.expando][xe(c)]},access:function(o,c,d){return c===void 0||c&&typeof c=="string"&&d===void 0?this.get(o,c):(this.set(o,c,d),d!==void 0?d:c)},remove:function(o,c){var d,g=o[this.expando];if(g!==void 0){if(c!==void 0)for(Array.isArray(c)?c=c.map(xe):(c=xe(c),c=c in g?[c]:c.match(ue)||[]),d=c.length;d--;)delete g[c[d]];(c===void 0||f.isEmptyObject(g))&&(o.nodeType?o[this.expando]=void 0:delete o[this.expando])}},hasData:function(o){var c=o[this.expando];return c!==void 0&&!f.isEmptyObject(c)}};var se=new Re,Fe=new Re,et=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ft=/[A-Z]/g;function Mt(o){return o==="true"?!0:o==="false"?!1:o==="null"?null:o===+o+""?+o:et.test(o)?JSON.parse(o):o}function vt(o,c,d){var g;if(d===void 0&&o.nodeType===1)if(g="data-"+c.replace(ft,"-$&").toLowerCase(),d=o.getAttribute(g),typeof d=="string"){try{d=Mt(d)}catch{}Fe.set(o,c,d)}else d=void 0;return d}f.extend({hasData:function(o){return Fe.hasData(o)||se.hasData(o)},data:function(o,c,d){return Fe.access(o,c,d)},removeData:function(o,c){Fe.remove(o,c)},_data:function(o,c,d){return se.access(o,c,d)},_removeData:function(o,c){se.remove(o,c)}}),f.fn.extend({data:function(o,c){var d,g,w,M=this[0],T=M&&M.attributes;if(o===void 0){if(this.length&&(w=Fe.get(M),M.nodeType===1&&!se.get(M,"hasDataAttrs"))){for(d=T.length;d--;)T[d]&&(g=T[d].name,g.indexOf("data-")===0&&(g=xe(g.slice(5)),vt(M,g,w[g])));se.set(M,"hasDataAttrs",!0)}return w}return typeof o=="object"?this.each(function(){Fe.set(this,o)}):Te(this,function(N){var F;if(M&&N===void 0)return F=Fe.get(M,o),F!==void 0||(F=vt(M,o),F!==void 0)?F:void 0;this.each(function(){Fe.set(this,o,N)})},null,c,arguments.length>1,null,!0)},removeData:function(o){return this.each(function(){Fe.remove(this,o)})}}),f.extend({queue:function(o,c,d){var g;if(o)return c=(c||"fx")+"queue",g=se.get(o,c),d&&(!g||Array.isArray(d)?g=se.access(o,c,f.makeArray(d)):g.push(d)),g||[]},dequeue:function(o,c){c=c||"fx";var d=f.queue(o,c),g=d.length,w=d.shift(),M=f._queueHooks(o,c),T=function(){f.dequeue(o,c)};w==="inprogress"&&(w=d.shift(),g--),w&&(c==="fx"&&d.unshift("inprogress"),delete M.stop,w.call(o,T,M)),!g&&M&&M.empty.fire()},_queueHooks:function(o,c){var d=c+"queueHooks";return se.get(o,d)||se.access(o,d,{empty:f.Callbacks("once memory").add(function(){se.remove(o,[c+"queue",d])})})}}),f.fn.extend({queue:function(o,c){var d=2;return typeof o!="string"&&(c=o,o="fx",d--),arguments.length<d?f.queue(this[0],o):c===void 0?this:this.each(function(){var g=f.queue(this,o,c);f._queueHooks(this,o),o==="fx"&&g[0]!=="inprogress"&&f.dequeue(this,o)})},dequeue:function(o){return this.each(function(){f.dequeue(this,o)})},clearQueue:function(o){return this.queue(o||"fx",[])},promise:function(o,c){var d,g=1,w=f.Deferred(),M=this,T=this.length,N=function(){--g||w.resolveWith(M,[M])};for(typeof o!="string"&&(c=o,o=void 0),o=o||"fx";T--;)d=se.get(M[T],o+"queueHooks"),d&&d.empty&&(g++,d.empty.add(N));return N(),w.promise(c)}});var D=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,R=new RegExp("^(?:([+-])=|)("+D+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],be=x.documentElement,Ie=function(o){return f.contains(o.ownerDocument,o)},le={composed:!0};be.getRootNode&&(Ie=function(o){return f.contains(o.ownerDocument,o)||o.getRootNode(le)===o.ownerDocument});var ke=function(o,c){return o=c||o,o.style.display==="none"||o.style.display===""&&Ie(o)&&f.css(o,"display")==="none"};function He(o,c,d,g){var w,M,T=20,N=g?function(){return g.cur()}:function(){return f.css(o,c,"")},F=N(),V=d&&d[3]||(f.cssNumber[c]?"":"px"),J=o.nodeType&&(f.cssNumber[c]||V!=="px"&&+F)&&R.exec(f.css(o,c));if(J&&J[3]!==V){for(F=F/2,V=V||J[3],J=+F||1;T--;)f.style(o,c,J+V),(1-M)*(1-(M=N()/F||.5))<=0&&(T=0),J=J/M;J=J*2,f.style(o,c,J+V),d=d||[]}return d&&(J=+J||+F||0,w=d[1]?J+(d[1]+1)*d[2]:+d[2],g&&(g.unit=V,g.start=J,g.end=w)),w}var Ae={};function Ce(o){var c,d=o.ownerDocument,g=o.nodeName,w=Ae[g];return w||(c=d.body.appendChild(d.createElement(g)),w=f.css(c,"display"),c.parentNode.removeChild(c),w==="none"&&(w="block"),Ae[g]=w,w)}function Ze(o,c){for(var d,g,w=[],M=0,T=o.length;M<T;M++)g=o[M],!!g.style&&(d=g.style.display,c?(d==="none"&&(w[M]=se.get(g,"display")||null,w[M]||(g.style.display="")),g.style.display===""&&ke(g)&&(w[M]=Ce(g))):d!=="none"&&(w[M]="none",se.set(g,"display",d)));for(M=0;M<T;M++)w[M]!=null&&(o[M].style.display=w[M]);return o}f.fn.extend({show:function(){return Ze(this,!0)},hide:function(){return Ze(this)},toggle:function(o){return typeof o=="boolean"?o?this.show():this.hide():this.each(function(){ke(this)?f(this).show():f(this).hide()})}});var H=/^(?:checkbox|radio)$/i,Be=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,Pe=/^$|^module$|\/(?:java|ecma)script/i;(function(){var o=x.createDocumentFragment(),c=o.appendChild(x.createElement("div")),d=x.createElement("input");d.setAttribute("type","radio"),d.setAttribute("checked","checked"),d.setAttribute("name","t"),c.appendChild(d),b.checkClone=c.cloneNode(!0).cloneNode(!0).lastChild.checked,c.innerHTML="<textarea>x</textarea>",b.noCloneChecked=!!c.cloneNode(!0).lastChild.defaultValue,c.innerHTML="<option></option>",b.option=!!c.lastChild})();var ze={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ze.tbody=ze.tfoot=ze.colgroup=ze.caption=ze.thead,ze.th=ze.td,b.option||(ze.optgroup=ze.option=[1,"<select multiple='multiple'>","</select>"]);function te(o,c){var d;return typeof o.getElementsByTagName!="undefined"?d=o.getElementsByTagName(c||"*"):typeof o.querySelectorAll!="undefined"?d=o.querySelectorAll(c||"*"):d=[],c===void 0||c&&k(o,c)?f.merge([o],d):d}function qe(o,c){for(var d=0,g=o.length;d<g;d++)se.set(o[d],"globalEval",!c||se.get(c[d],"globalEval"))}var ut=/<|&#?\w+;/;function Lt(o,c,d,g,w){for(var M,T,N,F,V,J,pe=c.createDocumentFragment(),q=[],ee=0,Ve=o.length;ee<Ve;ee++)if(M=o[ee],M||M===0)if(L(M)==="object")f.merge(q,M.nodeType?[M]:M);else if(!ut.test(M))q.push(c.createTextNode(M));else{for(T=T||pe.appendChild(c.createElement("div")),N=(Be.exec(M)||["",""])[1].toLowerCase(),F=ze[N]||ze._default,T.innerHTML=F[1]+f.htmlPrefilter(M)+F[2],J=F[0];J--;)T=T.lastChild;f.merge(q,T.childNodes),T=pe.firstChild,T.textContent=""}for(pe.textContent="",ee=0;M=q[ee++];){if(g&&f.inArray(M,g)>-1){w&&w.push(M);continue}if(V=Ie(M),T=te(pe.appendChild(M),"script"),V&&qe(T),d)for(J=0;M=T[J++];)Pe.test(M.type||"")&&d.push(M)}return pe}var nn=/^([^.]*)(?:\.(.+)|)/;function _t(){return!0}function Qt(){return!1}function Dn(o,c){return o===Gi()==(c==="focus")}function Gi(){try{return x.activeElement}catch{}}function Ir(o,c,d,g,w,M){var T,N;if(typeof c=="object"){typeof d!="string"&&(g=g||d,d=void 0);for(N in c)Ir(o,N,d,g,c[N],M);return o}if(g==null&&w==null?(w=d,g=d=void 0):w==null&&(typeof d=="string"?(w=g,g=void 0):(w=g,g=d,d=void 0)),w===!1)w=Qt;else if(!w)return o;return M===1&&(T=w,w=function(F){return f().off(F),T.apply(this,arguments)},w.guid=T.guid||(T.guid=f.guid++)),o.each(function(){f.event.add(this,c,w,g,d)})}f.event={global:{},add:function(o,c,d,g,w){var M,T,N,F,V,J,pe,q,ee,Ve,rt,Ge=se.get(o);if(!!_e(o))for(d.handler&&(M=d,d=M.handler,w=M.selector),w&&f.find.matchesSelector(be,w),d.guid||(d.guid=f.guid++),(F=Ge.events)||(F=Ge.events=Object.create(null)),(T=Ge.handle)||(T=Ge.handle=function(qt){return typeof f!="undefined"&&f.event.triggered!==qt.type?f.event.dispatch.apply(o,arguments):void 0}),c=(c||"").match(ue)||[""],V=c.length;V--;)N=nn.exec(c[V])||[],ee=rt=N[1],Ve=(N[2]||"").split(".").sort(),!!ee&&(pe=f.event.special[ee]||{},ee=(w?pe.delegateType:pe.bindType)||ee,pe=f.event.special[ee]||{},J=f.extend({type:ee,origType:rt,data:g,handler:d,guid:d.guid,selector:w,needsContext:w&&f.expr.match.needsContext.test(w),namespace:Ve.join(".")},M),(q=F[ee])||(q=F[ee]=[],q.delegateCount=0,(!pe.setup||pe.setup.call(o,g,Ve,T)===!1)&&o.addEventListener&&o.addEventListener(ee,T)),pe.add&&(pe.add.call(o,J),J.handler.guid||(J.handler.guid=d.guid)),w?q.splice(q.delegateCount++,0,J):q.push(J),f.event.global[ee]=!0)},remove:function(o,c,d,g,w){var M,T,N,F,V,J,pe,q,ee,Ve,rt,Ge=se.hasData(o)&&se.get(o);if(!(!Ge||!(F=Ge.events))){for(c=(c||"").match(ue)||[""],V=c.length;V--;){if(N=nn.exec(c[V])||[],ee=rt=N[1],Ve=(N[2]||"").split(".").sort(),!ee){for(ee in F)f.event.remove(o,ee+c[V],d,g,!0);continue}for(pe=f.event.special[ee]||{},ee=(g?pe.delegateType:pe.bindType)||ee,q=F[ee]||[],N=N[2]&&new RegExp("(^|\\.)"+Ve.join("\\.(?:.*\\.|)")+"(\\.|$)"),T=M=q.length;M--;)J=q[M],(w||rt===J.origType)&&(!d||d.guid===J.guid)&&(!N||N.test(J.namespace))&&(!g||g===J.selector||g==="**"&&J.selector)&&(q.splice(M,1),J.selector&&q.delegateCount--,pe.remove&&pe.remove.call(o,J));T&&!q.length&&((!pe.teardown||pe.teardown.call(o,Ve,Ge.handle)===!1)&&f.removeEvent(o,ee,Ge.handle),delete F[ee])}f.isEmptyObject(F)&&se.remove(o,"handle events")}},dispatch:function(o){var c,d,g,w,M,T,N=new Array(arguments.length),F=f.event.fix(o),V=(se.get(this,"events")||Object.create(null))[F.type]||[],J=f.event.special[F.type]||{};for(N[0]=F,c=1;c<arguments.length;c++)N[c]=arguments[c];if(F.delegateTarget=this,!(J.preDispatch&&J.preDispatch.call(this,F)===!1)){for(T=f.event.handlers.call(this,F,V),c=0;(w=T[c++])&&!F.isPropagationStopped();)for(F.currentTarget=w.elem,d=0;(M=w.handlers[d++])&&!F.isImmediatePropagationStopped();)(!F.rnamespace||M.namespace===!1||F.rnamespace.test(M.namespace))&&(F.handleObj=M,F.data=M.data,g=((f.event.special[M.origType]||{}).handle||M.handler).apply(w.elem,N),g!==void 0&&(F.result=g)===!1&&(F.preventDefault(),F.stopPropagation()));return J.postDispatch&&J.postDispatch.call(this,F),F.result}},handlers:function(o,c){var d,g,w,M,T,N=[],F=c.delegateCount,V=o.target;if(F&&V.nodeType&&!(o.type==="click"&&o.button>=1)){for(;V!==this;V=V.parentNode||this)if(V.nodeType===1&&!(o.type==="click"&&V.disabled===!0)){for(M=[],T={},d=0;d<F;d++)g=c[d],w=g.selector+" ",T[w]===void 0&&(T[w]=g.needsContext?f(w,this).index(V)>-1:f.find(w,this,null,[V]).length),T[w]&&M.push(g);M.length&&N.push({elem:V,handlers:M})}}return V=this,F<c.length&&N.push({elem:V,handlers:c.slice(F)}),N},addProp:function(o,c){Object.defineProperty(f.Event.prototype,o,{enumerable:!0,configurable:!0,get:S(c)?function(){if(this.originalEvent)return c(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[o]},set:function(d){Object.defineProperty(this,o,{enumerable:!0,configurable:!0,writable:!0,value:d})}})},fix:function(o){return o[f.expando]?o:new f.Event(o)},special:{load:{noBubble:!0},click:{setup:function(o){var c=this||o;return H.test(c.type)&&c.click&&k(c,"input")&&ni(c,"click",_t),!1},trigger:function(o){var c=this||o;return H.test(c.type)&&c.click&&k(c,"input")&&ni(c,"click"),!0},_default:function(o){var c=o.target;return H.test(c.type)&&c.click&&k(c,"input")&&se.get(c,"click")||k(c,"a")}},beforeunload:{postDispatch:function(o){o.result!==void 0&&o.originalEvent&&(o.originalEvent.returnValue=o.result)}}}};function ni(o,c,d){if(!d){se.get(o,c)===void 0&&f.event.add(o,c,_t);return}se.set(o,c,!1),f.event.add(o,c,{namespace:!1,handler:function(g){var w,M,T=se.get(this,c);if(g.isTrigger&1&&this[c]){if(T.length)(f.event.special[c]||{}).delegateType&&g.stopPropagation();else if(T=s.call(arguments),se.set(this,c,T),w=d(this,c),this[c](),M=se.get(this,c),T!==M||w?se.set(this,c,!1):M={},T!==M)return g.stopImmediatePropagation(),g.preventDefault(),M&&M.value}else T.length&&(se.set(this,c,{value:f.event.trigger(f.extend(T[0],f.Event.prototype),T.slice(1),this)}),g.stopImmediatePropagation())}})}f.removeEvent=function(o,c,d){o.removeEventListener&&o.removeEventListener(c,d)},f.Event=function(o,c){if(!(this instanceof f.Event))return new f.Event(o,c);o&&o.type?(this.originalEvent=o,this.type=o.type,this.isDefaultPrevented=o.defaultPrevented||o.defaultPrevented===void 0&&o.returnValue===!1?_t:Qt,this.target=o.target&&o.target.nodeType===3?o.target.parentNode:o.target,this.currentTarget=o.currentTarget,this.relatedTarget=o.relatedTarget):this.type=o,c&&f.extend(this,c),this.timeStamp=o&&o.timeStamp||Date.now(),this[f.expando]=!0},f.Event.prototype={constructor:f.Event,isDefaultPrevented:Qt,isPropagationStopped:Qt,isImmediatePropagationStopped:Qt,isSimulated:!1,preventDefault:function(){var o=this.originalEvent;this.isDefaultPrevented=_t,o&&!this.isSimulated&&o.preventDefault()},stopPropagation:function(){var o=this.originalEvent;this.isPropagationStopped=_t,o&&!this.isSimulated&&o.stopPropagation()},stopImmediatePropagation:function(){var o=this.originalEvent;this.isImmediatePropagationStopped=_t,o&&!this.isSimulated&&o.stopImmediatePropagation(),this.stopPropagation()}},f.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},f.event.addProp),f.each({focus:"focusin",blur:"focusout"},function(o,c){f.event.special[o]={setup:function(){return ni(this,o,Dn),!1},trigger:function(){return ni(this,o),!0},_default:function(){return!0},delegateType:c}}),f.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(o,c){f.event.special[o]={delegateType:c,bindType:c,handle:function(d){var g,w=this,M=d.relatedTarget,T=d.handleObj;return(!M||M!==w&&!f.contains(w,M))&&(d.type=T.origType,g=T.handler.apply(this,arguments),d.type=c),g}}}),f.fn.extend({on:function(o,c,d,g){return Ir(this,o,c,d,g)},one:function(o,c,d,g){return Ir(this,o,c,d,g,1)},off:function(o,c,d){var g,w;if(o&&o.preventDefault&&o.handleObj)return g=o.handleObj,f(o.delegateTarget).off(g.namespace?g.origType+"."+g.namespace:g.origType,g.selector,g.handler),this;if(typeof o=="object"){for(w in o)this.off(w,c,o[w]);return this}return(c===!1||typeof c=="function")&&(d=c,c=void 0),d===!1&&(d=Qt),this.each(function(){f.event.remove(this,o,d,c)})}});var bs=/<script|<style|<link/i,Do=/checked\s*(?:[^=]|=\s*.checked.)/i,Io=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function ws(o,c){return k(o,"table")&&k(c.nodeType!==11?c:c.firstChild,"tr")&&f(o).children("tbody")[0]||o}function P(o){return o.type=(o.getAttribute("type")!==null)+"/"+o.type,o}function j(o){return(o.type||"").slice(0,5)==="true/"?o.type=o.type.slice(5):o.removeAttribute("type"),o}function Q(o,c){var d,g,w,M,T,N,F;if(c.nodeType===1){if(se.hasData(o)&&(M=se.get(o),F=M.events,F)){se.remove(c,"handle events");for(w in F)for(d=0,g=F[w].length;d<g;d++)f.event.add(c,w,F[w][d])}Fe.hasData(o)&&(T=Fe.access(o),N=f.extend({},T),Fe.set(c,N))}}function $(o,c){var d=c.nodeName.toLowerCase();d==="input"&&H.test(o.type)?c.checked=o.checked:(d==="input"||d==="textarea")&&(c.defaultValue=o.defaultValue)}function he(o,c,d,g){c=a(c);var w,M,T,N,F,V,J=0,pe=o.length,q=pe-1,ee=c[0],Ve=S(ee);if(Ve||pe>1&&typeof ee=="string"&&!b.checkClone&&Do.test(ee))return o.each(function(rt){var Ge=o.eq(rt);Ve&&(c[0]=ee.call(this,rt,Ge.html())),he(Ge,c,d,g)});if(pe&&(w=Lt(c,o[0].ownerDocument,!1,o,g),M=w.firstChild,w.childNodes.length===1&&(w=M),M||g)){for(T=f.map(te(w,"script"),P),N=T.length;J<pe;J++)F=w,J!==q&&(F=f.clone(F,!0,!0),N&&f.merge(T,te(F,"script"))),d.call(o[J],F,J);if(N)for(V=T[T.length-1].ownerDocument,f.map(T,j),J=0;J<N;J++)F=T[J],Pe.test(F.type||"")&&!se.access(F,"globalEval")&&f.contains(V,F)&&(F.src&&(F.type||"").toLowerCase()!=="module"?f._evalUrl&&!F.noModule&&f._evalUrl(F.src,{nonce:F.nonce||F.getAttribute("nonce")},V):z(F.textContent.replace(Io,""),F,V))}return o}function tt(o,c,d){for(var g,w=c?f.filter(c,o):o,M=0;(g=w[M])!=null;M++)!d&&g.nodeType===1&&f.cleanData(te(g)),g.parentNode&&(d&&Ie(g)&&qe(te(g,"script")),g.parentNode.removeChild(g));return o}f.extend({htmlPrefilter:function(o){return o},clone:function(o,c,d){var g,w,M,T,N=o.cloneNode(!0),F=Ie(o);if(!b.noCloneChecked&&(o.nodeType===1||o.nodeType===11)&&!f.isXMLDoc(o))for(T=te(N),M=te(o),g=0,w=M.length;g<w;g++)$(M[g],T[g]);if(c)if(d)for(M=M||te(o),T=T||te(N),g=0,w=M.length;g<w;g++)Q(M[g],T[g]);else Q(o,N);return T=te(N,"script"),T.length>0&&qe(T,!F&&te(o,"script")),N},cleanData:function(o){for(var c,d,g,w=f.event.special,M=0;(d=o[M])!==void 0;M++)if(_e(d)){if(c=d[se.expando]){if(c.events)for(g in c.events)w[g]?f.event.remove(d,g):f.removeEvent(d,g,c.handle);d[se.expando]=void 0}d[Fe.expando]&&(d[Fe.expando]=void 0)}}}),f.fn.extend({detach:function(o){return tt(this,o,!0)},remove:function(o){return tt(this,o)},text:function(o){return Te(this,function(c){return c===void 0?f.text(this):this.empty().each(function(){(this.nodeType===1||this.nodeType===11||this.nodeType===9)&&(this.textContent=c)})},null,o,arguments.length)},append:function(){return he(this,arguments,function(o){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var c=ws(this,o);c.appendChild(o)}})},prepend:function(){return he(this,arguments,function(o){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var c=ws(this,o);c.insertBefore(o,c.firstChild)}})},before:function(){return he(this,arguments,function(o){this.parentNode&&this.parentNode.insertBefore(o,this)})},after:function(){return he(this,arguments,function(o){this.parentNode&&this.parentNode.insertBefore(o,this.nextSibling)})},empty:function(){for(var o,c=0;(o=this[c])!=null;c++)o.nodeType===1&&(f.cleanData(te(o,!1)),o.textContent="");return this},clone:function(o,c){return o=o==null?!1:o,c=c==null?o:c,this.map(function(){return f.clone(this,o,c)})},html:function(o){return Te(this,function(c){var d=this[0]||{},g=0,w=this.length;if(c===void 0&&d.nodeType===1)return d.innerHTML;if(typeof c=="string"&&!bs.test(c)&&!ze[(Be.exec(c)||["",""])[1].toLowerCase()]){c=f.htmlPrefilter(c);try{for(;g<w;g++)d=this[g]||{},d.nodeType===1&&(f.cleanData(te(d,!1)),d.innerHTML=c);d=0}catch{}}d&&this.empty().append(c)},null,o,arguments.length)},replaceWith:function(){var o=[];return he(this,arguments,function(c){var d=this.parentNode;f.inArray(this,o)<0&&(f.cleanData(te(this)),d&&d.replaceChild(c,this))},o)}}),f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(o,c){f.fn[o]=function(d){for(var g,w=[],M=f(d),T=M.length-1,N=0;N<=T;N++)g=N===T?this:this.clone(!0),f(M[N])[c](g),l.apply(w,g.get());return this.pushStack(w)}});var nt=new RegExp("^("+D+")(?!px)[a-z%]+$","i"),st=function(o){var c=o.ownerDocument.defaultView;return(!c||!c.opener)&&(c=e),c.getComputedStyle(o)},ot=function(o,c,d){var g,w,M={};for(w in c)M[w]=o.style[w],o.style[w]=c[w];g=d.call(o);for(w in c)o.style[w]=M[w];return g},yt=new RegExp(ie.join("|"),"i");(function(){function o(){if(!!V){F.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",V.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",be.appendChild(F).appendChild(V);var J=e.getComputedStyle(V);d=J.top!=="1%",N=c(J.marginLeft)===12,V.style.right="60%",M=c(J.right)===36,g=c(J.width)===36,V.style.position="absolute",w=c(V.offsetWidth/3)===12,be.removeChild(F),V=null}}function c(J){return Math.round(parseFloat(J))}var d,g,w,M,T,N,F=x.createElement("div"),V=x.createElement("div");!V.style||(V.style.backgroundClip="content-box",V.cloneNode(!0).style.backgroundClip="",b.clearCloneStyle=V.style.backgroundClip==="content-box",f.extend(b,{boxSizingReliable:function(){return o(),g},pixelBoxStyles:function(){return o(),M},pixelPosition:function(){return o(),d},reliableMarginLeft:function(){return o(),N},scrollboxSize:function(){return o(),w},reliableTrDimensions:function(){var J,pe,q,ee;return T==null&&(J=x.createElement("table"),pe=x.createElement("tr"),q=x.createElement("div"),J.style.cssText="position:absolute;left:-11111px;border-collapse:separate",pe.style.cssText="border:1px solid",pe.style.height="1px",q.style.height="9px",q.style.display="block",be.appendChild(J).appendChild(pe).appendChild(q),ee=e.getComputedStyle(pe),T=parseInt(ee.height,10)+parseInt(ee.borderTopWidth,10)+parseInt(ee.borderBottomWidth,10)===pe.offsetHeight,be.removeChild(J)),T}}))})();function lt(o,c,d){var g,w,M,T,N=o.style;return d=d||st(o),d&&(T=d.getPropertyValue(c)||d[c],T===""&&!Ie(o)&&(T=f.style(o,c)),!b.pixelBoxStyles()&&nt.test(T)&&yt.test(c)&&(g=N.width,w=N.minWidth,M=N.maxWidth,N.minWidth=N.maxWidth=N.width=T,T=d.width,N.width=g,N.minWidth=w,N.maxWidth=M)),T!==void 0?T+"":T}function dt(o,c){return{get:function(){if(o()){delete this.get;return}return(this.get=c).apply(this,arguments)}}}var Dt=["Webkit","Moz","ms"],Hn=x.createElement("div").style,jn={};function mt(o){for(var c=o[0].toUpperCase()+o.slice(1),d=Dt.length;d--;)if(o=Dt[d]+c,o in Hn)return o}function hn(o){var c=f.cssProps[o]||jn[o];return c||(o in Hn?o:jn[o]=mt(o)||o)}var Ht=/^(none|table(?!-c[ea]).+)/,vn=/^--/,Wi={position:"absolute",visibility:"hidden",display:"block"},yn={letterSpacing:"0",fontWeight:"400"};function An(o,c,d){var g=R.exec(c);return g?Math.max(0,g[2]-(d||0))+(g[3]||"px"):c}function Vt(o,c,d,g,w,M){var T=c==="width"?1:0,N=0,F=0;if(d===(g?"border":"content"))return 0;for(;T<4;T+=2)d==="margin"&&(F+=f.css(o,d+ie[T],!0,w)),g?(d==="content"&&(F-=f.css(o,"padding"+ie[T],!0,w)),d!=="margin"&&(F-=f.css(o,"border"+ie[T]+"Width",!0,w))):(F+=f.css(o,"padding"+ie[T],!0,w),d!=="padding"?F+=f.css(o,"border"+ie[T]+"Width",!0,w):N+=f.css(o,"border"+ie[T]+"Width",!0,w));return!g&&M>=0&&(F+=Math.max(0,Math.ceil(o["offset"+c[0].toUpperCase()+c.slice(1)]-M-F-N-.5))||0),F}function ii(o,c,d){var g=st(o),w=!b.boxSizingReliable()||d,M=w&&f.css(o,"boxSizing",!1,g)==="border-box",T=M,N=lt(o,c,g),F="offset"+c[0].toUpperCase()+c.slice(1);if(nt.test(N)){if(!d)return N;N="auto"}return(!b.boxSizingReliable()&&M||!b.reliableTrDimensions()&&k(o,"tr")||N==="auto"||!parseFloat(N)&&f.css(o,"display",!1,g)==="inline")&&o.getClientRects().length&&(M=f.css(o,"boxSizing",!1,g)==="border-box",T=F in o,T&&(N=o[F])),N=parseFloat(N)||0,N+Vt(o,c,d||(M?"border":"content"),T,g,N)+"px"}f.extend({cssHooks:{opacity:{get:function(o,c){if(c){var d=lt(o,"opacity");return d===""?"1":d}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(o,c,d,g){if(!(!o||o.nodeType===3||o.nodeType===8||!o.style)){var w,M,T,N=xe(c),F=vn.test(c),V=o.style;if(F||(c=hn(N)),T=f.cssHooks[c]||f.cssHooks[N],d!==void 0){if(M=typeof d,M==="string"&&(w=R.exec(d))&&w[1]&&(d=He(o,c,w),M="number"),d==null||d!==d)return;M==="number"&&!F&&(d+=w&&w[3]||(f.cssNumber[N]?"":"px")),!b.clearCloneStyle&&d===""&&c.indexOf("background")===0&&(V[c]="inherit"),(!T||!("set"in T)||(d=T.set(o,d,g))!==void 0)&&(F?V.setProperty(c,d):V[c]=d)}else return T&&"get"in T&&(w=T.get(o,!1,g))!==void 0?w:V[c]}},css:function(o,c,d,g){var w,M,T,N=xe(c),F=vn.test(c);return F||(c=hn(N)),T=f.cssHooks[c]||f.cssHooks[N],T&&"get"in T&&(w=T.get(o,!0,d)),w===void 0&&(w=lt(o,c,g)),w==="normal"&&c in yn&&(w=yn[c]),d===""||d?(M=parseFloat(w),d===!0||isFinite(M)?M||0:w):w}}),f.each(["height","width"],function(o,c){f.cssHooks[c]={get:function(d,g,w){if(g)return Ht.test(f.css(d,"display"))&&(!d.getClientRects().length||!d.getBoundingClientRect().width)?ot(d,Wi,function(){return ii(d,c,w)}):ii(d,c,w)},set:function(d,g,w){var M,T=st(d),N=!b.scrollboxSize()&&T.position==="absolute",F=N||w,V=F&&f.css(d,"boxSizing",!1,T)==="border-box",J=w?Vt(d,c,w,V,T):0;return V&&N&&(J-=Math.ceil(d["offset"+c[0].toUpperCase()+c.slice(1)]-parseFloat(T[c])-Vt(d,c,"border",!1,T)-.5)),J&&(M=R.exec(g))&&(M[3]||"px")!=="px"&&(d.style[c]=g,g=f.css(d,c)),An(d,g,J)}}}),f.cssHooks.marginLeft=dt(b.reliableMarginLeft,function(o,c){if(c)return(parseFloat(lt(o,"marginLeft"))||o.getBoundingClientRect().left-ot(o,{marginLeft:0},function(){return o.getBoundingClientRect().left}))+"px"}),f.each({margin:"",padding:"",border:"Width"},function(o,c){f.cssHooks[o+c]={expand:function(d){for(var g=0,w={},M=typeof d=="string"?d.split(" "):[d];g<4;g++)w[o+ie[g]+c]=M[g]||M[g-2]||M[0];return w}},o!=="margin"&&(f.cssHooks[o+c].set=An)}),f.fn.extend({css:function(o,c){return Te(this,function(d,g,w){var M,T,N={},F=0;if(Array.isArray(g)){for(M=st(d),T=g.length;F<T;F++)N[g[F]]=f.css(d,g[F],!1,M);return N}return w!==void 0?f.style(d,g,w):f.css(d,g)},o,c,arguments.length>1)}});function Rt(o,c,d,g,w){return new Rt.prototype.init(o,c,d,g,w)}f.Tween=Rt,Rt.prototype={constructor:Rt,init:function(o,c,d,g,w,M){this.elem=o,this.prop=d,this.easing=w||f.easing._default,this.options=c,this.start=this.now=this.cur(),this.end=g,this.unit=M||(f.cssNumber[d]?"":"px")},cur:function(){var o=Rt.propHooks[this.prop];return o&&o.get?o.get(this):Rt.propHooks._default.get(this)},run:function(o){var c,d=Rt.propHooks[this.prop];return this.options.duration?this.pos=c=f.easing[this.easing](o,this.options.duration*o,0,1,this.options.duration):this.pos=c=o,this.now=(this.end-this.start)*c+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),d&&d.set?d.set(this):Rt.propHooks._default.set(this),this}},Rt.prototype.init.prototype=Rt.prototype,Rt.propHooks={_default:{get:function(o){var c;return o.elem.nodeType!==1||o.elem[o.prop]!=null&&o.elem.style[o.prop]==null?o.elem[o.prop]:(c=f.css(o.elem,o.prop,""),!c||c==="auto"?0:c)},set:function(o){f.fx.step[o.prop]?f.fx.step[o.prop](o):o.elem.nodeType===1&&(f.cssHooks[o.prop]||o.elem.style[hn(o.prop)]!=null)?f.style(o.elem,o.prop,o.now+o.unit):o.elem[o.prop]=o.now}}},Rt.propHooks.scrollTop=Rt.propHooks.scrollLeft={set:function(o){o.elem.nodeType&&o.elem.parentNode&&(o.elem[o.prop]=o.now)}},f.easing={linear:function(o){return o},swing:function(o){return .5-Math.cos(o*Math.PI)/2},_default:"swing"},f.fx=Rt.prototype.init,f.fx.step={};var qi,Ms,Uh=/^(?:toggle|show|hide)$/,Hh=/queueHooks$/;function No(){Ms&&(x.hidden===!1&&e.requestAnimationFrame?e.requestAnimationFrame(No):e.setTimeout(No,f.fx.interval),f.fx.tick())}function Ll(){return e.setTimeout(function(){qi=void 0}),qi=Date.now()}function Ss(o,c){var d,g=0,w={height:o};for(c=c?1:0;g<4;g+=2-c)d=ie[g],w["margin"+d]=w["padding"+d]=o;return c&&(w.opacity=w.width=o),w}function Rl(o,c,d){for(var g,w=(In.tweeners[c]||[]).concat(In.tweeners["*"]),M=0,T=w.length;M<T;M++)if(g=w[M].call(d,c,o))return g}function kh(o,c,d){var g,w,M,T,N,F,V,J,pe="width"in c||"height"in c,q=this,ee={},Ve=o.style,rt=o.nodeType&&ke(o),Ge=se.get(o,"fxshow");d.queue||(T=f._queueHooks(o,"fx"),T.unqueued==null&&(T.unqueued=0,N=T.empty.fire,T.empty.fire=function(){T.unqueued||N()}),T.unqueued++,q.always(function(){q.always(function(){T.unqueued--,f.queue(o,"fx").length||T.empty.fire()})}));for(g in c)if(w=c[g],Uh.test(w)){if(delete c[g],M=M||w==="toggle",w===(rt?"hide":"show"))if(w==="show"&&Ge&&Ge[g]!==void 0)rt=!0;else continue;ee[g]=Ge&&Ge[g]||f.style(o,g)}if(F=!f.isEmptyObject(c),!(!F&&f.isEmptyObject(ee))){pe&&o.nodeType===1&&(d.overflow=[Ve.overflow,Ve.overflowX,Ve.overflowY],V=Ge&&Ge.display,V==null&&(V=se.get(o,"display")),J=f.css(o,"display"),J==="none"&&(V?J=V:(Ze([o],!0),V=o.style.display||V,J=f.css(o,"display"),Ze([o]))),(J==="inline"||J==="inline-block"&&V!=null)&&f.css(o,"float")==="none"&&(F||(q.done(function(){Ve.display=V}),V==null&&(J=Ve.display,V=J==="none"?"":J)),Ve.display="inline-block")),d.overflow&&(Ve.overflow="hidden",q.always(function(){Ve.overflow=d.overflow[0],Ve.overflowX=d.overflow[1],Ve.overflowY=d.overflow[2]})),F=!1;for(g in ee)F||(Ge?"hidden"in Ge&&(rt=Ge.hidden):Ge=se.access(o,"fxshow",{display:V}),M&&(Ge.hidden=!rt),rt&&Ze([o],!0),q.done(function(){rt||Ze([o]),se.remove(o,"fxshow");for(g in ee)f.style(o,g,ee[g])})),F=Rl(rt?Ge[g]:0,g,q),g in Ge||(Ge[g]=F.start,rt&&(F.end=F.start,F.start=0))}}function Vh(o,c){var d,g,w,M,T;for(d in o)if(g=xe(d),w=c[g],M=o[d],Array.isArray(M)&&(w=M[1],M=o[d]=M[0]),d!==g&&(o[g]=M,delete o[d]),T=f.cssHooks[g],T&&"expand"in T){M=T.expand(M),delete o[g];for(d in M)d in o||(o[d]=M[d],c[d]=w)}else c[g]=w}function In(o,c,d){var g,w,M=0,T=In.prefilters.length,N=f.Deferred().always(function(){delete F.elem}),F=function(){if(w)return!1;for(var pe=qi||Ll(),q=Math.max(0,V.startTime+V.duration-pe),ee=q/V.duration||0,Ve=1-ee,rt=0,Ge=V.tweens.length;rt<Ge;rt++)V.tweens[rt].run(Ve);return N.notifyWith(o,[V,Ve,q]),Ve<1&&Ge?q:(Ge||N.notifyWith(o,[V,1,0]),N.resolveWith(o,[V]),!1)},V=N.promise({elem:o,props:f.extend({},c),opts:f.extend(!0,{specialEasing:{},easing:f.easing._default},d),originalProperties:c,originalOptions:d,startTime:qi||Ll(),duration:d.duration,tweens:[],createTween:function(pe,q){var ee=f.Tween(o,V.opts,pe,q,V.opts.specialEasing[pe]||V.opts.easing);return V.tweens.push(ee),ee},stop:function(pe){var q=0,ee=pe?V.tweens.length:0;if(w)return this;for(w=!0;q<ee;q++)V.tweens[q].run(1);return pe?(N.notifyWith(o,[V,1,0]),N.resolveWith(o,[V,pe])):N.rejectWith(o,[V,pe]),this}}),J=V.props;for(Vh(J,V.opts.specialEasing);M<T;M++)if(g=In.prefilters[M].call(V,o,J,V.opts),g)return S(g.stop)&&(f._queueHooks(V.elem,V.opts.queue).stop=g.stop.bind(g)),g;return f.map(J,Rl,V),S(V.opts.start)&&V.opts.start.call(o,V),V.progress(V.opts.progress).done(V.opts.done,V.opts.complete).fail(V.opts.fail).always(V.opts.always),f.fx.timer(f.extend(F,{elem:o,anim:V,queue:V.opts.queue})),V}f.Animation=f.extend(In,{tweeners:{"*":[function(o,c){var d=this.createTween(o,c);return He(d.elem,o,R.exec(c),d),d}]},tweener:function(o,c){S(o)?(c=o,o=["*"]):o=o.match(ue);for(var d,g=0,w=o.length;g<w;g++)d=o[g],In.tweeners[d]=In.tweeners[d]||[],In.tweeners[d].unshift(c)},prefilters:[kh],prefilter:function(o,c){c?In.prefilters.unshift(o):In.prefilters.push(o)}}),f.speed=function(o,c,d){var g=o&&typeof o=="object"?f.extend({},o):{complete:d||!d&&c||S(o)&&o,duration:o,easing:d&&c||c&&!S(c)&&c};return f.fx.off?g.duration=0:typeof g.duration!="number"&&(g.duration in f.fx.speeds?g.duration=f.fx.speeds[g.duration]:g.duration=f.fx.speeds._default),(g.queue==null||g.queue===!0)&&(g.queue="fx"),g.old=g.complete,g.complete=function(){S(g.old)&&g.old.call(this),g.queue&&f.dequeue(this,g.queue)},g},f.fn.extend({fadeTo:function(o,c,d,g){return this.filter(ke).css("opacity",0).show().end().animate({opacity:c},o,d,g)},animate:function(o,c,d,g){var w=f.isEmptyObject(o),M=f.speed(c,d,g),T=function(){var N=In(this,f.extend({},o),M);(w||se.get(this,"finish"))&&N.stop(!0)};return T.finish=T,w||M.queue===!1?this.each(T):this.queue(M.queue,T)},stop:function(o,c,d){var g=function(w){var M=w.stop;delete w.stop,M(d)};return typeof o!="string"&&(d=c,c=o,o=void 0),c&&this.queue(o||"fx",[]),this.each(function(){var w=!0,M=o!=null&&o+"queueHooks",T=f.timers,N=se.get(this);if(M)N[M]&&N[M].stop&&g(N[M]);else for(M in N)N[M]&&N[M].stop&&Hh.test(M)&&g(N[M]);for(M=T.length;M--;)T[M].elem===this&&(o==null||T[M].queue===o)&&(T[M].anim.stop(d),w=!1,T.splice(M,1));(w||!d)&&f.dequeue(this,o)})},finish:function(o){return o!==!1&&(o=o||"fx"),this.each(function(){var c,d=se.get(this),g=d[o+"queue"],w=d[o+"queueHooks"],M=f.timers,T=g?g.length:0;for(d.finish=!0,f.queue(this,o,[]),w&&w.stop&&w.stop.call(this,!0),c=M.length;c--;)M[c].elem===this&&M[c].queue===o&&(M[c].anim.stop(!0),M.splice(c,1));for(c=0;c<T;c++)g[c]&&g[c].finish&&g[c].finish.call(this);delete d.finish})}}),f.each(["toggle","show","hide"],function(o,c){var d=f.fn[c];f.fn[c]=function(g,w,M){return g==null||typeof g=="boolean"?d.apply(this,arguments):this.animate(Ss(c,!0),g,w,M)}}),f.each({slideDown:Ss("show"),slideUp:Ss("hide"),slideToggle:Ss("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(o,c){f.fn[o]=function(d,g,w){return this.animate(c,d,g,w)}}),f.timers=[],f.fx.tick=function(){var o,c=0,d=f.timers;for(qi=Date.now();c<d.length;c++)o=d[c],!o()&&d[c]===o&&d.splice(c--,1);d.length||f.fx.stop(),qi=void 0},f.fx.timer=function(o){f.timers.push(o),f.fx.start()},f.fx.interval=13,f.fx.start=function(){Ms||(Ms=!0,No())},f.fx.stop=function(){Ms=null},f.fx.speeds={slow:600,fast:200,_default:400},f.fn.delay=function(o,c){return o=f.fx&&f.fx.speeds[o]||o,c=c||"fx",this.queue(c,function(d,g){var w=e.setTimeout(d,o);g.stop=function(){e.clearTimeout(w)}})},function(){var o=x.createElement("input"),c=x.createElement("select"),d=c.appendChild(x.createElement("option"));o.type="checkbox",b.checkOn=o.value!=="",b.optSelected=d.selected,o=x.createElement("input"),o.value="t",o.type="radio",b.radioValue=o.value==="t"}();var Pl,Nr=f.expr.attrHandle;f.fn.extend({attr:function(o,c){return Te(this,f.attr,o,c,arguments.length>1)},removeAttr:function(o){return this.each(function(){f.removeAttr(this,o)})}}),f.extend({attr:function(o,c,d){var g,w,M=o.nodeType;if(!(M===3||M===8||M===2)){if(typeof o.getAttribute=="undefined")return f.prop(o,c,d);if((M!==1||!f.isXMLDoc(o))&&(w=f.attrHooks[c.toLowerCase()]||(f.expr.match.bool.test(c)?Pl:void 0)),d!==void 0){if(d===null){f.removeAttr(o,c);return}return w&&"set"in w&&(g=w.set(o,d,c))!==void 0?g:(o.setAttribute(c,d+""),d)}return w&&"get"in w&&(g=w.get(o,c))!==null?g:(g=f.find.attr(o,c),g==null?void 0:g)}},attrHooks:{type:{set:function(o,c){if(!b.radioValue&&c==="radio"&&k(o,"input")){var d=o.value;return o.setAttribute("type",c),d&&(o.value=d),c}}}},removeAttr:function(o,c){var d,g=0,w=c&&c.match(ue);if(w&&o.nodeType===1)for(;d=w[g++];)o.removeAttribute(d)}}),Pl={set:function(o,c,d){return c===!1?f.removeAttr(o,d):o.setAttribute(d,d),d}},f.each(f.expr.match.bool.source.match(/\w+/g),function(o,c){var d=Nr[c]||f.find.attr;Nr[c]=function(g,w,M){var T,N,F=w.toLowerCase();return M||(N=Nr[F],Nr[F]=T,T=d(g,w,M)!=null?F:null,Nr[F]=N),T}});var Gh=/^(?:input|select|textarea|button)$/i,Wh=/^(?:a|area)$/i;f.fn.extend({prop:function(o,c){return Te(this,f.prop,o,c,arguments.length>1)},removeProp:function(o){return this.each(function(){delete this[f.propFix[o]||o]})}}),f.extend({prop:function(o,c,d){var g,w,M=o.nodeType;if(!(M===3||M===8||M===2))return(M!==1||!f.isXMLDoc(o))&&(c=f.propFix[c]||c,w=f.propHooks[c]),d!==void 0?w&&"set"in w&&(g=w.set(o,d,c))!==void 0?g:o[c]=d:w&&"get"in w&&(g=w.get(o,c))!==null?g:o[c]},propHooks:{tabIndex:{get:function(o){var c=f.find.attr(o,"tabindex");return c?parseInt(c,10):Gh.test(o.nodeName)||Wh.test(o.nodeName)&&o.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),b.optSelected||(f.propHooks.selected={get:function(o){var c=o.parentNode;return c&&c.parentNode&&c.parentNode.selectedIndex,null},set:function(o){var c=o.parentNode;c&&(c.selectedIndex,c.parentNode&&c.parentNode.selectedIndex)}}),f.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){f.propFix[this.toLowerCase()]=this});function Ei(o){var c=o.match(ue)||[];return c.join(" ")}function Ai(o){return o.getAttribute&&o.getAttribute("class")||""}function Fo(o){return Array.isArray(o)?o:typeof o=="string"?o.match(ue)||[]:[]}f.fn.extend({addClass:function(o){var c,d,g,w,M,T,N,F=0;if(S(o))return this.each(function(V){f(this).addClass(o.call(this,V,Ai(this)))});if(c=Fo(o),c.length){for(;d=this[F++];)if(w=Ai(d),g=d.nodeType===1&&" "+Ei(w)+" ",g){for(T=0;M=c[T++];)g.indexOf(" "+M+" ")<0&&(g+=M+" ");N=Ei(g),w!==N&&d.setAttribute("class",N)}}return this},removeClass:function(o){var c,d,g,w,M,T,N,F=0;if(S(o))return this.each(function(V){f(this).removeClass(o.call(this,V,Ai(this)))});if(!arguments.length)return this.attr("class","");if(c=Fo(o),c.length){for(;d=this[F++];)if(w=Ai(d),g=d.nodeType===1&&" "+Ei(w)+" ",g){for(T=0;M=c[T++];)for(;g.indexOf(" "+M+" ")>-1;)g=g.replace(" "+M+" "," ");N=Ei(g),w!==N&&d.setAttribute("class",N)}}return this},toggleClass:function(o,c){var d=typeof o,g=d==="string"||Array.isArray(o);return typeof c=="boolean"&&g?c?this.addClass(o):this.removeClass(o):S(o)?this.each(function(w){f(this).toggleClass(o.call(this,w,Ai(this),c),c)}):this.each(function(){var w,M,T,N;if(g)for(M=0,T=f(this),N=Fo(o);w=N[M++];)T.hasClass(w)?T.removeClass(w):T.addClass(w);else(o===void 0||d==="boolean")&&(w=Ai(this),w&&se.set(this,"__className__",w),this.setAttribute&&this.setAttribute("class",w||o===!1?"":se.get(this,"__className__")||""))})},hasClass:function(o){var c,d,g=0;for(c=" "+o+" ";d=this[g++];)if(d.nodeType===1&&(" "+Ei(Ai(d))+" ").indexOf(c)>-1)return!0;return!1}});var qh=/\r/g;f.fn.extend({val:function(o){var c,d,g,w=this[0];return arguments.length?(g=S(o),this.each(function(M){var T;this.nodeType===1&&(g?T=o.call(this,M,f(this).val()):T=o,T==null?T="":typeof T=="number"?T+="":Array.isArray(T)&&(T=f.map(T,function(N){return N==null?"":N+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()],(!c||!("set"in c)||c.set(this,T,"value")===void 0)&&(this.value=T))})):w?(c=f.valHooks[w.type]||f.valHooks[w.nodeName.toLowerCase()],c&&"get"in c&&(d=c.get(w,"value"))!==void 0?d:(d=w.value,typeof d=="string"?d.replace(qh,""):d==null?"":d)):void 0}}),f.extend({valHooks:{option:{get:function(o){var c=f.find.attr(o,"value");return c!=null?c:Ei(f.text(o))}},select:{get:function(o){var c,d,g,w=o.options,M=o.selectedIndex,T=o.type==="select-one",N=T?null:[],F=T?M+1:w.length;for(M<0?g=F:g=T?M:0;g<F;g++)if(d=w[g],(d.selected||g===M)&&!d.disabled&&(!d.parentNode.disabled||!k(d.parentNode,"optgroup"))){if(c=f(d).val(),T)return c;N.push(c)}return N},set:function(o,c){for(var d,g,w=o.options,M=f.makeArray(c),T=w.length;T--;)g=w[T],(g.selected=f.inArray(f.valHooks.option.get(g),M)>-1)&&(d=!0);return d||(o.selectedIndex=-1),M}}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]={set:function(o,c){if(Array.isArray(c))return o.checked=f.inArray(f(o).val(),c)>-1}},b.checkOn||(f.valHooks[this].get=function(o){return o.getAttribute("value")===null?"on":o.value})}),b.focusin="onfocusin"in e;var Dl=/^(?:focusinfocus|focusoutblur)$/,Il=function(o){o.stopPropagation()};f.extend(f.event,{trigger:function(o,c,d,g){var w,M,T,N,F,V,J,pe,q=[d||x],ee=m.call(o,"type")?o.type:o,Ve=m.call(o,"namespace")?o.namespace.split("."):[];if(M=pe=T=d=d||x,!(d.nodeType===3||d.nodeType===8)&&!Dl.test(ee+f.event.triggered)&&(ee.indexOf(".")>-1&&(Ve=ee.split("."),ee=Ve.shift(),Ve.sort()),F=ee.indexOf(":")<0&&"on"+ee,o=o[f.expando]?o:new f.Event(ee,typeof o=="object"&&o),o.isTrigger=g?2:3,o.namespace=Ve.join("."),o.rnamespace=o.namespace?new RegExp("(^|\\.)"+Ve.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,o.result=void 0,o.target||(o.target=d),c=c==null?[o]:f.makeArray(c,[o]),J=f.event.special[ee]||{},!(!g&&J.trigger&&J.trigger.apply(d,c)===!1))){if(!g&&!J.noBubble&&!C(d)){for(N=J.delegateType||ee,Dl.test(N+ee)||(M=M.parentNode);M;M=M.parentNode)q.push(M),T=M;T===(d.ownerDocument||x)&&q.push(T.defaultView||T.parentWindow||e)}for(w=0;(M=q[w++])&&!o.isPropagationStopped();)pe=M,o.type=w>1?N:J.bindType||ee,V=(se.get(M,"events")||Object.create(null))[o.type]&&se.get(M,"handle"),V&&V.apply(M,c),V=F&&M[F],V&&V.apply&&_e(M)&&(o.result=V.apply(M,c),o.result===!1&&o.preventDefault());return o.type=ee,!g&&!o.isDefaultPrevented()&&(!J._default||J._default.apply(q.pop(),c)===!1)&&_e(d)&&F&&S(d[ee])&&!C(d)&&(T=d[F],T&&(d[F]=null),f.event.triggered=ee,o.isPropagationStopped()&&pe.addEventListener(ee,Il),d[ee](),o.isPropagationStopped()&&pe.removeEventListener(ee,Il),f.event.triggered=void 0,T&&(d[F]=T)),o.result}},simulate:function(o,c,d){var g=f.extend(new f.Event,d,{type:o,isSimulated:!0});f.event.trigger(g,null,c)}}),f.fn.extend({trigger:function(o,c){return this.each(function(){f.event.trigger(o,c,this)})},triggerHandler:function(o,c){var d=this[0];if(d)return f.event.trigger(o,c,d,!0)}}),b.focusin||f.each({focus:"focusin",blur:"focusout"},function(o,c){var d=function(g){f.event.simulate(c,g.target,f.event.fix(g))};f.event.special[c]={setup:function(){var g=this.ownerDocument||this.document||this,w=se.access(g,c);w||g.addEventListener(o,d,!0),se.access(g,c,(w||0)+1)},teardown:function(){var g=this.ownerDocument||this.document||this,w=se.access(g,c)-1;w?se.access(g,c,w):(g.removeEventListener(o,d,!0),se.remove(g,c))}}});var Fr=e.location,Nl={guid:Date.now()},Bo=/\?/;f.parseXML=function(o){var c,d;if(!o||typeof o!="string")return null;try{c=new e.DOMParser().parseFromString(o,"text/xml")}catch{}return d=c&&c.getElementsByTagName("parsererror")[0],(!c||d)&&f.error("Invalid XML: "+(d?f.map(d.childNodes,function(g){return g.textContent}).join(`
`):o)),c};var jh=/\[\]$/,Fl=/\r?\n/g,Xh=/^(?:submit|button|image|reset|file)$/i,Yh=/^(?:input|select|textarea|keygen)/i;function Oo(o,c,d,g){var w;if(Array.isArray(c))f.each(c,function(M,T){d||jh.test(o)?g(o,T):Oo(o+"["+(typeof T=="object"&&T!=null?M:"")+"]",T,d,g)});else if(!d&&L(c)==="object")for(w in c)Oo(o+"["+w+"]",c[w],d,g);else g(o,c)}f.param=function(o,c){var d,g=[],w=function(M,T){var N=S(T)?T():T;g[g.length]=encodeURIComponent(M)+"="+encodeURIComponent(N==null?"":N)};if(o==null)return"";if(Array.isArray(o)||o.jquery&&!f.isPlainObject(o))f.each(o,function(){w(this.name,this.value)});else for(d in o)Oo(d,o[d],c,w);return g.join("&")},f.fn.extend({serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var o=f.prop(this,"elements");return o?f.makeArray(o):this}).filter(function(){var o=this.type;return this.name&&!f(this).is(":disabled")&&Yh.test(this.nodeName)&&!Xh.test(o)&&(this.checked||!H.test(o))}).map(function(o,c){var d=f(this).val();return d==null?null:Array.isArray(d)?f.map(d,function(g){return{name:c.name,value:g.replace(Fl,`\r
`)}}):{name:c.name,value:d.replace(Fl,`\r
`)}}).get()}});var Jh=/%20/g,Zh=/#.*$/,$h=/([?&])_=[^&]*/,Kh=/^(.*?):[ \t]*([^\r\n]*)$/mg,Qh=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ef=/^(?:GET|HEAD)$/,tf=/^\/\//,Bl={},zo={},Ol="*/".concat("*"),Uo=x.createElement("a");Uo.href=Fr.href;function zl(o){return function(c,d){typeof c!="string"&&(d=c,c="*");var g,w=0,M=c.toLowerCase().match(ue)||[];if(S(d))for(;g=M[w++];)g[0]==="+"?(g=g.slice(1)||"*",(o[g]=o[g]||[]).unshift(d)):(o[g]=o[g]||[]).push(d)}}function Ul(o,c,d,g){var w={},M=o===zo;function T(N){var F;return w[N]=!0,f.each(o[N]||[],function(V,J){var pe=J(c,d,g);if(typeof pe=="string"&&!M&&!w[pe])return c.dataTypes.unshift(pe),T(pe),!1;if(M)return!(F=pe)}),F}return T(c.dataTypes[0])||!w["*"]&&T("*")}function Ho(o,c){var d,g,w=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==void 0&&((w[d]?o:g||(g={}))[d]=c[d]);return g&&f.extend(!0,o,g),o}function nf(o,c,d){for(var g,w,M,T,N=o.contents,F=o.dataTypes;F[0]==="*";)F.shift(),g===void 0&&(g=o.mimeType||c.getResponseHeader("Content-Type"));if(g){for(w in N)if(N[w]&&N[w].test(g)){F.unshift(w);break}}if(F[0]in d)M=F[0];else{for(w in d){if(!F[0]||o.converters[w+" "+F[0]]){M=w;break}T||(T=w)}M=M||T}if(M)return M!==F[0]&&F.unshift(M),d[M]}function rf(o,c,d,g){var w,M,T,N,F,V={},J=o.dataTypes.slice();if(J[1])for(T in o.converters)V[T.toLowerCase()]=o.converters[T];for(M=J.shift();M;)if(o.responseFields[M]&&(d[o.responseFields[M]]=c),!F&&g&&o.dataFilter&&(c=o.dataFilter(c,o.dataType)),F=M,M=J.shift(),M){if(M==="*")M=F;else if(F!=="*"&&F!==M){if(T=V[F+" "+M]||V["* "+M],!T){for(w in V)if(N=w.split(" "),N[1]===M&&(T=V[F+" "+N[0]]||V["* "+N[0]],T)){T===!0?T=V[w]:V[w]!==!0&&(M=N[0],J.unshift(N[1]));break}}if(T!==!0)if(T&&o.throws)c=T(c);else try{c=T(c)}catch(pe){return{state:"parsererror",error:T?pe:"No conversion from "+F+" to "+M}}}}return{state:"success",data:c}}f.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Fr.href,type:"GET",isLocal:Qh.test(Fr.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ol,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":f.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(o,c){return c?Ho(Ho(o,f.ajaxSettings),c):Ho(f.ajaxSettings,o)},ajaxPrefilter:zl(Bl),ajaxTransport:zl(zo),ajax:function(o,c){typeof o=="object"&&(c=o,o=void 0),c=c||{};var d,g,w,M,T,N,F,V,J,pe,q=f.ajaxSetup({},c),ee=q.context||q,Ve=q.context&&(ee.nodeType||ee.jquery)?f(ee):f.event,rt=f.Deferred(),Ge=f.Callbacks("once memory"),qt=q.statusCode||{},Gt={},xn={},St="canceled",it={readyState:0,getResponseHeader:function(gt){var zt;if(F){if(!M)for(M={};zt=Kh.exec(w);)M[zt[1].toLowerCase()+" "]=(M[zt[1].toLowerCase()+" "]||[]).concat(zt[2]);zt=M[gt.toLowerCase()+" "]}return zt==null?null:zt.join(", ")},getAllResponseHeaders:function(){return F?w:null},setRequestHeader:function(gt,zt){return F==null&&(gt=xn[gt.toLowerCase()]=xn[gt.toLowerCase()]||gt,Gt[gt]=zt),this},overrideMimeType:function(gt){return F==null&&(q.mimeType=gt),this},statusCode:function(gt){var zt;if(gt)if(F)it.always(gt[it.status]);else for(zt in gt)qt[zt]=[qt[zt],gt[zt]];return this},abort:function(gt){var zt=gt||St;return d&&d.abort(zt),fn(0,zt),this}};if(rt.promise(it),q.url=((o||q.url||Fr.href)+"").replace(tf,Fr.protocol+"//"),q.type=c.method||c.type||q.method||q.type,q.dataTypes=(q.dataType||"*").toLowerCase().match(ue)||[""],q.crossDomain==null){N=x.createElement("a");try{N.href=q.url,N.href=N.href,q.crossDomain=Uo.protocol+"//"+Uo.host!=N.protocol+"//"+N.host}catch{q.crossDomain=!0}}if(q.data&&q.processData&&typeof q.data!="string"&&(q.data=f.param(q.data,q.traditional)),Ul(Bl,q,c,it),F)return it;V=f.event&&q.global,V&&f.active++==0&&f.event.trigger("ajaxStart"),q.type=q.type.toUpperCase(),q.hasContent=!ef.test(q.type),g=q.url.replace(Zh,""),q.hasContent?q.data&&q.processData&&(q.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&(q.data=q.data.replace(Jh,"+")):(pe=q.url.slice(g.length),q.data&&(q.processData||typeof q.data=="string")&&(g+=(Bo.test(g)?"&":"?")+q.data,delete q.data),q.cache===!1&&(g=g.replace($h,"$1"),pe=(Bo.test(g)?"&":"?")+"_="+Nl.guid+++pe),q.url=g+pe),q.ifModified&&(f.lastModified[g]&&it.setRequestHeader("If-Modified-Since",f.lastModified[g]),f.etag[g]&&it.setRequestHeader("If-None-Match",f.etag[g])),(q.data&&q.hasContent&&q.contentType!==!1||c.contentType)&&it.setRequestHeader("Content-Type",q.contentType),it.setRequestHeader("Accept",q.dataTypes[0]&&q.accepts[q.dataTypes[0]]?q.accepts[q.dataTypes[0]]+(q.dataTypes[0]!=="*"?", "+Ol+"; q=0.01":""):q.accepts["*"]);for(J in q.headers)it.setRequestHeader(J,q.headers[J]);if(q.beforeSend&&(q.beforeSend.call(ee,it,q)===!1||F))return it.abort();if(St="abort",Ge.add(q.complete),it.done(q.success),it.fail(q.error),d=Ul(zo,q,c,it),!d)fn(-1,"No Transport");else{if(it.readyState=1,V&&Ve.trigger("ajaxSend",[it,q]),F)return it;q.async&&q.timeout>0&&(T=e.setTimeout(function(){it.abort("timeout")},q.timeout));try{F=!1,d.send(Gt,fn)}catch(gt){if(F)throw gt;fn(-1,gt)}}function fn(gt,zt,Or,Ts){var _n,Ci,Li,dn,ri,Cn=zt;F||(F=!0,T&&e.clearTimeout(T),d=void 0,w=Ts||"",it.readyState=gt>0?4:0,_n=gt>=200&&gt<300||gt===304,Or&&(dn=nf(q,it,Or)),!_n&&f.inArray("script",q.dataTypes)>-1&&f.inArray("json",q.dataTypes)<0&&(q.converters["text script"]=function(){}),dn=rf(q,dn,it,_n),_n?(q.ifModified&&(ri=it.getResponseHeader("Last-Modified"),ri&&(f.lastModified[g]=ri),ri=it.getResponseHeader("etag"),ri&&(f.etag[g]=ri)),gt===204||q.type==="HEAD"?Cn="nocontent":gt===304?Cn="notmodified":(Cn=dn.state,Ci=dn.data,Li=dn.error,_n=!Li)):(Li=Cn,(gt||!Cn)&&(Cn="error",gt<0&&(gt=0))),it.status=gt,it.statusText=(zt||Cn)+"",_n?rt.resolveWith(ee,[Ci,Cn,it]):rt.rejectWith(ee,[it,Cn,Li]),it.statusCode(qt),qt=void 0,V&&Ve.trigger(_n?"ajaxSuccess":"ajaxError",[it,q,_n?Ci:Li]),Ge.fireWith(ee,[it,Cn]),V&&(Ve.trigger("ajaxComplete",[it,q]),--f.active||f.event.trigger("ajaxStop")))}return it},getJSON:function(o,c,d){return f.get(o,c,d,"json")},getScript:function(o,c){return f.get(o,void 0,c,"script")}}),f.each(["get","post"],function(o,c){f[c]=function(d,g,w,M){return S(g)&&(M=M||w,w=g,g=void 0),f.ajax(f.extend({url:d,type:c,dataType:M,data:g,success:w},f.isPlainObject(d)&&d))}}),f.ajaxPrefilter(function(o){var c;for(c in o.headers)c.toLowerCase()==="content-type"&&(o.contentType=o.headers[c]||"")}),f._evalUrl=function(o,c,d){return f.ajax({url:o,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(g){f.globalEval(g,c,d)}})},f.fn.extend({wrapAll:function(o){var c;return this[0]&&(S(o)&&(o=o.call(this[0])),c=f(o,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&c.insertBefore(this[0]),c.map(function(){for(var d=this;d.firstElementChild;)d=d.firstElementChild;return d}).append(this)),this},wrapInner:function(o){return S(o)?this.each(function(c){f(this).wrapInner(o.call(this,c))}):this.each(function(){var c=f(this),d=c.contents();d.length?d.wrapAll(o):c.append(o)})},wrap:function(o){var c=S(o);return this.each(function(d){f(this).wrapAll(c?o.call(this,d):o)})},unwrap:function(o){return this.parent(o).not("body").each(function(){f(this).replaceWith(this.childNodes)}),this}}),f.expr.pseudos.hidden=function(o){return!f.expr.pseudos.visible(o)},f.expr.pseudos.visible=function(o){return!!(o.offsetWidth||o.offsetHeight||o.getClientRects().length)},f.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch{}};var sf={0:200,1223:204},Br=f.ajaxSettings.xhr();b.cors=!!Br&&"withCredentials"in Br,b.ajax=Br=!!Br,f.ajaxTransport(function(o){var c,d;if(b.cors||Br&&!o.crossDomain)return{send:function(g,w){var M,T=o.xhr();if(T.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(M in o.xhrFields)T[M]=o.xhrFields[M];o.mimeType&&T.overrideMimeType&&T.overrideMimeType(o.mimeType),!o.crossDomain&&!g["X-Requested-With"]&&(g["X-Requested-With"]="XMLHttpRequest");for(M in g)T.setRequestHeader(M,g[M]);c=function(N){return function(){c&&(c=d=T.onload=T.onerror=T.onabort=T.ontimeout=T.onreadystatechange=null,N==="abort"?T.abort():N==="error"?typeof T.status!="number"?w(0,"error"):w(T.status,T.statusText):w(sf[T.status]||T.status,T.statusText,(T.responseType||"text")!=="text"||typeof T.responseText!="string"?{binary:T.response}:{text:T.responseText},T.getAllResponseHeaders()))}},T.onload=c(),d=T.onerror=T.ontimeout=c("error"),T.onabort!==void 0?T.onabort=d:T.onreadystatechange=function(){T.readyState===4&&e.setTimeout(function(){c&&d()})},c=c("abort");try{T.send(o.hasContent&&o.data||null)}catch(N){if(c)throw N}},abort:function(){c&&c()}}}),f.ajaxPrefilter(function(o){o.crossDomain&&(o.contents.script=!1)}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(o){return f.globalEval(o),o}}}),f.ajaxPrefilter("script",function(o){o.cache===void 0&&(o.cache=!1),o.crossDomain&&(o.type="GET")}),f.ajaxTransport("script",function(o){if(o.crossDomain||o.scriptAttrs){var c,d;return{send:function(g,w){c=f("<script>").attr(o.scriptAttrs||{}).prop({charset:o.scriptCharset,src:o.url}).on("load error",d=function(M){c.remove(),d=null,M&&w(M.type==="error"?404:200,M.type)}),x.head.appendChild(c[0])},abort:function(){d&&d()}}}});var Hl=[],ko=/(=)\?(?=&|$)|\?\?/;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var o=Hl.pop()||f.expando+"_"+Nl.guid++;return this[o]=!0,o}}),f.ajaxPrefilter("json jsonp",function(o,c,d){var g,w,M,T=o.jsonp!==!1&&(ko.test(o.url)?"url":typeof o.data=="string"&&(o.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&ko.test(o.data)&&"data");if(T||o.dataTypes[0]==="jsonp")return g=o.jsonpCallback=S(o.jsonpCallback)?o.jsonpCallback():o.jsonpCallback,T?o[T]=o[T].replace(ko,"$1"+g):o.jsonp!==!1&&(o.url+=(Bo.test(o.url)?"&":"?")+o.jsonp+"="+g),o.converters["script json"]=function(){return M||f.error(g+" was not called"),M[0]},o.dataTypes[0]="json",w=e[g],e[g]=function(){M=arguments},d.always(function(){w===void 0?f(e).removeProp(g):e[g]=w,o[g]&&(o.jsonpCallback=c.jsonpCallback,Hl.push(g)),M&&S(w)&&w(M[0]),M=w=void 0}),"script"}),b.createHTMLDocument=function(){var o=x.implementation.createHTMLDocument("").body;return o.innerHTML="<form></form><form></form>",o.childNodes.length===2}(),f.parseHTML=function(o,c,d){if(typeof o!="string")return[];typeof c=="boolean"&&(d=c,c=!1);var g,w,M;return c||(b.createHTMLDocument?(c=x.implementation.createHTMLDocument(""),g=c.createElement("base"),g.href=x.location.href,c.head.appendChild(g)):c=x),w=X.exec(o),M=!d&&[],w?[c.createElement(w[1])]:(w=Lt([o],c,M),M&&M.length&&f(M).remove(),f.merge([],w.childNodes))},f.fn.load=function(o,c,d){var g,w,M,T=this,N=o.indexOf(" ");return N>-1&&(g=Ei(o.slice(N)),o=o.slice(0,N)),S(c)?(d=c,c=void 0):c&&typeof c=="object"&&(w="POST"),T.length>0&&f.ajax({url:o,type:w||"GET",dataType:"html",data:c}).done(function(F){M=arguments,T.html(g?f("<div>").append(f.parseHTML(F)).find(g):F)}).always(d&&function(F,V){T.each(function(){d.apply(this,M||[F.responseText,V,F])})}),this},f.expr.pseudos.animated=function(o){return f.grep(f.timers,function(c){return o===c.elem}).length},f.offset={setOffset:function(o,c,d){var g,w,M,T,N,F,V,J=f.css(o,"position"),pe=f(o),q={};J==="static"&&(o.style.position="relative"),N=pe.offset(),M=f.css(o,"top"),F=f.css(o,"left"),V=(J==="absolute"||J==="fixed")&&(M+F).indexOf("auto")>-1,V?(g=pe.position(),T=g.top,w=g.left):(T=parseFloat(M)||0,w=parseFloat(F)||0),S(c)&&(c=c.call(o,d,f.extend({},N))),c.top!=null&&(q.top=c.top-N.top+T),c.left!=null&&(q.left=c.left-N.left+w),"using"in c?c.using.call(o,q):pe.css(q)}},f.fn.extend({offset:function(o){if(arguments.length)return o===void 0?this:this.each(function(w){f.offset.setOffset(this,o,w)});var c,d,g=this[0];if(!!g)return g.getClientRects().length?(c=g.getBoundingClientRect(),d=g.ownerDocument.defaultView,{top:c.top+d.pageYOffset,left:c.left+d.pageXOffset}):{top:0,left:0}},position:function(){if(!!this[0]){var o,c,d,g=this[0],w={top:0,left:0};if(f.css(g,"position")==="fixed")c=g.getBoundingClientRect();else{for(c=this.offset(),d=g.ownerDocument,o=g.offsetParent||d.documentElement;o&&(o===d.body||o===d.documentElement)&&f.css(o,"position")==="static";)o=o.parentNode;o&&o!==g&&o.nodeType===1&&(w=f(o).offset(),w.top+=f.css(o,"borderTopWidth",!0),w.left+=f.css(o,"borderLeftWidth",!0))}return{top:c.top-w.top-f.css(g,"marginTop",!0),left:c.left-w.left-f.css(g,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var o=this.offsetParent;o&&f.css(o,"position")==="static";)o=o.offsetParent;return o||be})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(o,c){var d=c==="pageYOffset";f.fn[o]=function(g){return Te(this,function(w,M,T){var N;if(C(w)?N=w:w.nodeType===9&&(N=w.defaultView),T===void 0)return N?N[c]:w[M];N?N.scrollTo(d?N.pageXOffset:T,d?T:N.pageYOffset):w[M]=T},o,g,arguments.length)}}),f.each(["top","left"],function(o,c){f.cssHooks[c]=dt(b.pixelPosition,function(d,g){if(g)return g=lt(d,c),nt.test(g)?f(d).position()[c]+"px":g})}),f.each({Height:"height",Width:"width"},function(o,c){f.each({padding:"inner"+o,content:c,"":"outer"+o},function(d,g){f.fn[g]=function(w,M){var T=arguments.length&&(d||typeof w!="boolean"),N=d||(w===!0||M===!0?"margin":"border");return Te(this,function(F,V,J){var pe;return C(F)?g.indexOf("outer")===0?F["inner"+o]:F.document.documentElement["client"+o]:F.nodeType===9?(pe=F.documentElement,Math.max(F.body["scroll"+o],pe["scroll"+o],F.body["offset"+o],pe["offset"+o],pe["client"+o])):J===void 0?f.css(F,V,N):f.style(F,V,J,N)},c,T?w:void 0,T)}})}),f.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(o,c){f.fn[c]=function(d){return this.on(c,d)}}),f.fn.extend({bind:function(o,c,d){return this.on(o,null,c,d)},unbind:function(o,c){return this.off(o,null,c)},delegate:function(o,c,d,g){return this.on(c,o,d,g)},undelegate:function(o,c,d){return arguments.length===1?this.off(o,"**"):this.off(c,o||"**",d)},hover:function(o,c){return this.mouseenter(o).mouseleave(c||o)}}),f.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(o,c){f.fn[c]=function(d,g){return arguments.length>0?this.on(c,null,d,g):this.trigger(c)}});var of=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;f.proxy=function(o,c){var d,g,w;if(typeof c=="string"&&(d=o[c],c=o,o=d),!!S(o))return g=s.call(arguments,2),w=function(){return o.apply(c||this,g.concat(s.call(arguments)))},w.guid=o.guid=o.guid||f.guid++,w},f.holdReady=function(o){o?f.readyWait++:f.ready(!0)},f.isArray=Array.isArray,f.parseJSON=JSON.parse,f.nodeName=k,f.isFunction=S,f.isWindow=C,f.camelCase=xe,f.type=L,f.now=Date.now,f.isNumeric=function(o){var c=f.type(o);return(c==="number"||c==="string")&&!isNaN(o-parseFloat(o))},f.trim=function(o){return o==null?"":(o+"").replace(of,"")};var af=e.jQuery,lf=e.$;return f.noConflict=function(o){return e.$===f&&(e.$=lf),o&&e.jQuery===f&&(e.jQuery=af),f},typeof t=="undefined"&&(e.jQuery=e.$=f),f})})(Ds);var f0=Ds.exports;(function(r){(function(e){r.exports?r.exports=function(t,n){return n===void 0&&(typeof window!="undefined"?n=Ds.exports:n=Ds.exports(t)),e(n),n}:e(jQuery)})(function(e){return e.fn.tilt=function(t){const n=function(){this.ticking||(requestAnimationFrame(m.bind(this)),this.ticking=!0)},i=function(){const b=this;e(this).on("mousemove",h),e(this).on("mouseenter",a),this.settings.reset&&e(this).on("mouseleave",u),this.settings.glare&&e(window).on("resize",_.bind(b))},s=function(){this.timeout!==void 0&&clearTimeout(this.timeout),e(this).css({transition:`${this.settings.speed}ms ${this.settings.easing}`}),this.settings.glare&&this.glareElement.css({transition:`opacity ${this.settings.speed}ms ${this.settings.easing}`}),this.timeout=setTimeout(()=>{e(this).css({transition:""}),this.settings.glare&&this.glareElement.css({transition:""})},this.settings.speed)},a=function(b){this.ticking=!1,e(this).css({"will-change":"transform"}),s.call(this),e(this).trigger("tilt.mouseEnter")},l=function(b){return typeof b=="undefined"&&(b={pageX:e(this).offset().left+e(this).outerWidth()/2,pageY:e(this).offset().top+e(this).outerHeight()/2}),{x:b.pageX,y:b.pageY}},h=function(b){this.mousePositions=l(b),n.call(this)},u=function(){s.call(this),this.reset=!0,n.call(this),e(this).trigger("tilt.mouseLeave")},p=function(){const b=e(this).outerWidth(),S=e(this).outerHeight(),C=e(this).offset().left,x=e(this).offset().top,y=(this.mousePositions.x-C)/b,z=(this.mousePositions.y-x)/S,L=(this.settings.maxTilt/2-y*this.settings.maxTilt).toFixed(2),O=(z*this.settings.maxTilt-this.settings.maxTilt/2).toFixed(2),f=Math.atan2(this.mousePositions.x-(C+b/2),-(this.mousePositions.y-(x+S/2)))*(180/Math.PI);return{tiltX:L,tiltY:O,percentageX:y*100,percentageY:z*100,angle:f}},m=function(){if(this.transforms=p.call(this),this.reset){this.reset=!1,e(this).css("transform",`perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg)`),this.settings.glare&&(this.glareElement.css("transform","rotate(180deg) translate(-50%, -50%)"),this.glareElement.css("opacity","0"));return}else e(this).css("transform",`perspective(${this.settings.perspective}px) rotateX(${this.settings.disableAxis==="x"?0:this.transforms.tiltY}deg) rotateY(${this.settings.disableAxis==="y"?0:this.transforms.tiltX}deg) scale3d(${this.settings.scale},${this.settings.scale},${this.settings.scale})`),this.settings.glare&&(this.glareElement.css("transform",`rotate(${this.transforms.angle}deg) translate(-50%, -50%)`),this.glareElement.css("opacity",`${this.transforms.percentageY*this.settings.maxGlare/100}`));e(this).trigger("change",[this.transforms]),this.ticking=!1},v=function(){const b=this.settings.glarePrerender;if(b||e(this).append('<div class="js-tilt-glare"><div class="js-tilt-glare-inner"></div></div>'),this.glareElementWrapper=e(this).find(".js-tilt-glare"),this.glareElement=e(this).find(".js-tilt-glare-inner"),b)return;const S={position:"absolute",top:"0",left:"0",width:"100%",height:"100%"};this.glareElementWrapper.css(S).css({overflow:"hidden","pointer-events":"none"}),this.glareElement.css({position:"absolute",top:"50%",left:"50%","background-image":"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)",width:`${e(this).outerWidth()*2}`,height:`${e(this).outerWidth()*2}`,transform:"rotate(180deg) translate(-50%, -50%)","transform-origin":"0% 0%",opacity:"0"})},_=function(){this.glareElement.css({width:`${e(this).outerWidth()*2}`,height:`${e(this).outerWidth()*2}`})};return e.fn.tilt.destroy=function(){e(this).each(function(){e(this).find(".js-tilt-glare").remove(),e(this).css({"will-change":"",transform:""}),e(this).off("mousemove mouseenter mouseleave")})},e.fn.tilt.getValues=function(){const b=[];return e(this).each(function(){this.mousePositions=l.call(this),b.push(p.call(this))}),b},e.fn.tilt.reset=function(){e(this).each(function(){this.mousePositions=l.call(this),this.settings=e(this).data("settings"),u.call(this),setTimeout(()=>{this.reset=!1},this.settings.transition)})},this.each(function(){this.settings=e.extend({maxTilt:e(this).is("[data-tilt-max]")?e(this).data("tilt-max"):20,perspective:e(this).is("[data-tilt-perspective]")?e(this).data("tilt-perspective"):300,easing:e(this).is("[data-tilt-easing]")?e(this).data("tilt-easing"):"cubic-bezier(.03,.98,.52,.99)",scale:e(this).is("[data-tilt-scale]")?e(this).data("tilt-scale"):"1",speed:e(this).is("[data-tilt-speed]")?e(this).data("tilt-speed"):"400",transition:e(this).is("[data-tilt-transition]")?e(this).data("tilt-transition"):!0,disableAxis:e(this).is("[data-tilt-disable-axis]")?e(this).data("tilt-disable-axis"):null,axis:e(this).is("[data-tilt-axis]")?e(this).data("tilt-axis"):null,reset:e(this).is("[data-tilt-reset]")?e(this).data("tilt-reset"):!0,glare:e(this).is("[data-tilt-glare]")?e(this).data("tilt-glare"):!1,maxGlare:e(this).is("[data-tilt-maxglare]")?e(this).data("tilt-maxglare"):1},t),this.settings.axis!==null&&(console.warn("Tilt.js: the axis setting has been renamed to disableAxis. See https://github.com/gijsroge/tilt.js/pull/26 for more information"),this.settings.disableAxis=this.settings.axis),this.init=()=>{e(this).data("settings",this.settings),this.settings.glare&&v.call(this),i.call(this)},this.init()})},e("[data-tilt]").tilt(),!0})})(Zl);var d0=Zl.exports;/*! @license is-dom-node v1.0.4

	Copyright 2018 Fisssion LLC.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

*/function Zo(r){return typeof window.Node=="object"?r instanceof window.Node:r!==null&&typeof r=="object"&&typeof r.nodeType=="number"&&typeof r.nodeName=="string"}/*! @license is-dom-node-list v1.2.1

	Copyright 2018 Fisssion LLC.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

*/function Sf(r){var e=Object.prototype.toString.call(r),t=/^\[object (HTMLCollection|NodeList|Object)\]$/;return typeof window.NodeList=="object"?r instanceof window.NodeList:r!==null&&typeof r=="object"&&typeof r.length=="number"&&t.test(e)&&(r.length===0||Zo(r[0]))}/*! @license Tealight v0.3.6

	Copyright 2018 Fisssion LLC.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

*/function kr(r,e){if(e===void 0&&(e=document),r instanceof Array)return r.filter(Zo);if(Zo(r))return[r];if(Sf(r))return Array.prototype.slice.call(r);if(typeof r=="string")try{var t=e.querySelectorAll(r);return Array.prototype.slice.call(t)}catch{return[]}return[]}/*! @license Rematrix v0.3.0

	Copyright 2018 Julian Lloyd.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
*/function $o(r){if(r.constructor!==Array)throw new TypeError("Expected array.");if(r.length===16)return r;if(r.length===6){var e=oi();return e[0]=r[0],e[1]=r[1],e[4]=r[2],e[5]=r[3],e[12]=r[4],e[13]=r[5],e}throw new RangeError("Expected array with either 6 or 16 values.")}function oi(){for(var r=[],e=0;e<16;e++)e%5==0?r.push(1):r.push(0);return r}function Tf(r,e){for(var t=$o(r),n=$o(e),i=[],s=0;s<4;s++)for(var a=[t[s],t[s+4],t[s+8],t[s+12]],l=0;l<4;l++){var h=l*4,u=[n[h],n[h+1],n[h+2],n[h+3]],p=a[0]*u[0]+a[1]*u[1]+a[2]*u[2]+a[3]*u[3];i[s+h]=p}return i}function Ef(r){if(typeof r=="string"){var e=r.match(/matrix(3d)?\(([^)]+)\)/);if(e){var t=e[2].split(", ").map(parseFloat);return $o(t)}}return oi()}function Af(r){var e=Math.PI/180*r,t=oi();return t[5]=t[10]=Math.cos(e),t[6]=t[9]=Math.sin(e),t[9]*=-1,t}function Cf(r){var e=Math.PI/180*r,t=oi();return t[0]=t[10]=Math.cos(e),t[2]=t[8]=Math.sin(e),t[2]*=-1,t}function Lf(r){var e=Math.PI/180*r,t=oi();return t[0]=t[5]=Math.cos(e),t[1]=t[4]=Math.sin(e),t[4]*=-1,t}function $l(r,e){var t=oi();return t[0]=r,t[5]=typeof e=="number"?e:r,t}function Rf(r){var e=oi();return e[12]=r,e}function Pf(r){var e=oi();return e[13]=r,e}/*! @license miniraf v1.0.0

	Copyright 2018 Fisssion LLC.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.

*/var Kl=function(){var r=Date.now();return function(e){var t=Date.now();t-r>16?(r=t,e(t)):setTimeout(function(){return Kl(e)},0)}}(),Df=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||Kl;/*! @license ScrollReveal v4.0.9

	Copyright 2021 Fisssion LLC.

	Licensed under the GNU General Public License 3.0 for
	compatible open source projects and non-commercial use.

	For commercial sites, themes, projects, and applications,
	keep your source code private/proprietary by purchasing
	a commercial license from https://scrollrevealjs.org/
*/var Ql={delay:0,distance:"0",duration:600,easing:"cubic-bezier(0.5, 0, 0, 1)",interval:0,opacity:0,origin:"bottom",rotate:{x:0,y:0,z:0},scale:1,cleanup:!1,container:document.documentElement,desktop:!0,mobile:!0,reset:!1,useDelay:"always",viewFactor:0,viewOffset:{top:0,right:0,bottom:0,left:0},afterReset:function(){},afterReveal:function(){},beforeReset:function(){},beforeReveal:function(){}};function If(){return document.documentElement.classList.remove("sr"),{clean:function(){},destroy:function(){},reveal:function(){},sync:function(){},get noop(){return!0}}}function Nf(){document.documentElement.classList.add("sr"),document.body?document.body.style.height="100%":document.addEventListener("DOMContentLoaded",function(){document.body.style.height="100%"})}var Vr={success:Nf,failure:If};function Is(r){return r!==null&&r instanceof Object&&(r.constructor===Object||Object.prototype.toString.call(r)==="[object Object]")}function It(r,e){if(Is(r)){var t=Object.keys(r);return t.forEach(function(n){return e(r[n],n,r)})}if(r instanceof Array)return r.forEach(function(n,i){return e(n,i,r)});throw new TypeError("Expected either an array or object literal.")}function Ii(r){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];if(this.constructor.debug&&console){var n="%cScrollReveal: "+r;e.forEach(function(i){return n+=`
 \u2014 `+i}),console.log(n,"color: #ea654b;")}}function ec(){var r=this,e=function(){return{active:[],stale:[]}},t=e(),n=e(),i=e();try{It(kr("[data-sr-id]"),function(s){var a=parseInt(s.getAttribute("data-sr-id"));t.active.push(a)})}catch(s){throw s}It(this.store.elements,function(s){t.active.indexOf(s.id)===-1&&t.stale.push(s.id)}),It(t.stale,function(s){return delete r.store.elements[s]}),It(this.store.elements,function(s){i.active.indexOf(s.containerId)===-1&&i.active.push(s.containerId),s.hasOwnProperty("sequence")&&n.active.indexOf(s.sequence.id)===-1&&n.active.push(s.sequence.id)}),It(this.store.containers,function(s){i.active.indexOf(s.id)===-1&&i.stale.push(s.id)}),It(i.stale,function(s){var a=r.store.containers[s].node;a.removeEventListener("scroll",r.delegate),a.removeEventListener("resize",r.delegate),delete r.store.containers[s]}),It(this.store.sequences,function(s){n.active.indexOf(s.id)===-1&&n.stale.push(s.id)}),It(n.stale,function(s){return delete r.store.sequences[s]})}var tc=function(){var r={},e=document.documentElement.style;function t(n,i){if(i===void 0&&(i=e),n&&typeof n=="string"){if(r[n])return r[n];if(typeof i[n]=="string")return r[n]=n;if(typeof i["-webkit-"+n]=="string")return r[n]="-webkit-"+n;throw new RangeError('Unable to find "'+n+'" style property.')}throw new TypeError("Expected a string.")}return t.clearCache=function(){return r={}},t}();function Ff(r){var e=window.getComputedStyle(r.node),t=e.position,n=r.config,i={},s=r.node.getAttribute("style")||"",a=s.match(/[\w-]+\s*:\s*[^;]+\s*/gi)||[];i.computed=a?a.map(function(ae){return ae.trim()}).join("; ")+";":"",i.generated=a.some(function(ae){return ae.match(/visibility\s?:\s?visible/i)})?i.computed:a.concat(["visibility: visible"]).map(function(ae){return ae.trim()}).join("; ")+";";var l=parseFloat(e.opacity),h=isNaN(parseFloat(n.opacity))?parseFloat(e.opacity):parseFloat(n.opacity),u={computed:l!==h?"opacity: "+l+";":"",generated:l!==h?"opacity: "+h+";":""},p=[];if(parseFloat(n.distance)){var m=n.origin==="top"||n.origin==="bottom"?"Y":"X",v=n.distance;(n.origin==="top"||n.origin==="left")&&(v=/^-/.test(v)?v.substr(1):"-"+v);var _=v.match(/(^-?\d+\.?\d?)|(em$|px$|%$)/g),b=_[0],S=_[1];switch(S){case"em":v=parseInt(e.fontSize)*b;break;case"px":v=b;break;case"%":v=m==="Y"?r.node.getBoundingClientRect().height*b/100:r.node.getBoundingClientRect().width*b/100;break;default:throw new RangeError("Unrecognized or missing distance unit.")}m==="Y"?p.push(Pf(v)):p.push(Rf(v))}n.rotate.x&&p.push(Af(n.rotate.x)),n.rotate.y&&p.push(Cf(n.rotate.y)),n.rotate.z&&p.push(Lf(n.rotate.z)),n.scale!==1&&(n.scale===0?p.push($l(2e-4)):p.push($l(n.scale)));var C={};if(p.length){C.property=tc("transform"),C.computed={raw:e[C.property],matrix:Ef(e[C.property])},p.unshift(C.computed.matrix);var x=p.reduce(Tf);C.generated={initial:C.property+": matrix3d("+x.join(", ")+");",final:C.property+": matrix3d("+C.computed.matrix.join(", ")+");"}}else C.generated={initial:"",final:""};var y={};if(u.generated||C.generated.initial){y.property=tc("transition"),y.computed=e[y.property],y.fragments=[];var z=n.delay,L=n.duration,O=n.easing;u.generated&&y.fragments.push({delayed:"opacity "+L/1e3+"s "+O+" "+z/1e3+"s",instant:"opacity "+L/1e3+"s "+O+" 0s"}),C.generated.initial&&y.fragments.push({delayed:C.property+" "+L/1e3+"s "+O+" "+z/1e3+"s",instant:C.property+" "+L/1e3+"s "+O+" 0s"});var f=y.computed&&!y.computed.match(/all 0s|none 0s/);f&&y.fragments.unshift({delayed:y.computed,instant:y.computed});var W=y.fragments.reduce(function(ae,Me,ge){return ae.delayed+=ge===0?Me.delayed:", "+Me.delayed,ae.instant+=ge===0?Me.instant:", "+Me.instant,ae},{delayed:"",instant:""});y.generated={delayed:y.property+": "+W.delayed+";",instant:y.property+": "+W.instant+";"}}else y.generated={delayed:"",instant:""};return{inline:i,opacity:u,position:t,transform:C,transition:y}}function ji(r,e){e.split(";").forEach(function(t){var n=t.split(":"),i=n[0],s=n.slice(1);i&&s&&(r.style[i.trim()]=s.join(":"))})}function Ko(r){var e=this,t;try{It(kr(r),function(n){var i=n.getAttribute("data-sr-id");if(i!==null){t=!0;var s=e.store.elements[i];s.callbackTimer&&window.clearTimeout(s.callbackTimer.clock),ji(s.node,s.styles.inline.generated),n.removeAttribute("data-sr-id"),delete e.store.elements[i]}})}catch(n){return Ii.call(this,"Clean failed.",n.message)}if(t)try{ec.call(this)}catch(n){return Ii.call(this,"Clean failed.",n.message)}}function Bf(){var r=this;It(this.store.elements,function(e){ji(e.node,e.styles.inline.generated),e.node.removeAttribute("data-sr-id")}),It(this.store.containers,function(e){var t=e.node===document.documentElement?window:e.node;t.removeEventListener("scroll",r.delegate),t.removeEventListener("resize",r.delegate)}),this.store={containers:{},elements:{},history:[],sequences:{}}}function Gr(r){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];if(Is(r))return It(e,function(n){It(n,function(i,s){Is(i)?((!r[s]||!Is(r[s]))&&(r[s]={}),Gr(r[s],i)):r[s]=i})}),r;throw new TypeError("Target must be an object literal.")}function Ns(r){return r===void 0&&(r=navigator.userAgent),/Android|iPhone|iPad|iPod/i.test(r)}var Qo=function(){var r=0;return function(){return r++}}();function nc(){var r=this;ec.call(this),It(this.store.elements,function(e){var t=[e.styles.inline.generated];e.visible?(t.push(e.styles.opacity.computed),t.push(e.styles.transform.generated.final),e.revealed=!0):(t.push(e.styles.opacity.generated),t.push(e.styles.transform.generated.initial),e.revealed=!1),ji(e.node,t.filter(function(n){return n!==""}).join(" "))}),It(this.store.containers,function(e){var t=e.node===document.documentElement?window:e.node;t.addEventListener("scroll",r.delegate),t.addEventListener("resize",r.delegate)}),this.delegate(),this.initTimeout=null}function Wr(r,e){e===void 0&&(e={});var t=e.pristine||this.pristine,n=r.config.useDelay==="always"||r.config.useDelay==="onload"&&t||r.config.useDelay==="once"&&!r.seen,i=r.visible&&!r.revealed,s=!r.visible&&r.revealed&&r.config.reset;if(e.reveal||i)return Of.call(this,r,n);if(e.reset||s)return zf.call(this,r)}function Of(r,e){var t=[r.styles.inline.generated,r.styles.opacity.computed,r.styles.transform.generated.final];e?t.push(r.styles.transition.generated.delayed):t.push(r.styles.transition.generated.instant),r.revealed=r.seen=!0,ji(r.node,t.filter(function(n){return n!==""}).join(" ")),ic.call(this,r,e)}function zf(r){var e=[r.styles.inline.generated,r.styles.opacity.generated,r.styles.transform.generated.initial,r.styles.transition.generated.instant];r.revealed=!1,ji(r.node,e.filter(function(t){return t!==""}).join(" ")),ic.call(this,r)}function ic(r,e){var t=this,n=e?r.config.duration+r.config.delay:r.config.duration,i=r.revealed?r.config.beforeReveal:r.config.beforeReset,s=r.revealed?r.config.afterReveal:r.config.afterReset,a=0;r.callbackTimer&&(a=Date.now()-r.callbackTimer.start,window.clearTimeout(r.callbackTimer.clock)),i(r.node),r.callbackTimer={start:Date.now(),clock:window.setTimeout(function(){s(r.node),r.callbackTimer=null,r.revealed&&!r.config.reset&&r.config.cleanup&&Ko.call(t,r.node)},n-a)}}function rc(r,e){if(e===void 0&&(e=this.pristine),!r.visible&&r.revealed&&r.config.reset)return Wr.call(this,r,{reset:!0});var t=this.store.sequences[r.sequence.id],n=r.sequence.index;if(t){var i=new sc(t,"visible",this.store),s=new sc(t,"revealed",this.store);if(t.models={visible:i,revealed:s},!s.body.length){var a=t.members[i.body[0]],l=this.store.elements[a];if(l)return Fs.call(this,t,i.body[0],-1,e),Fs.call(this,t,i.body[0],1,e),Wr.call(this,l,{reveal:!0,pristine:e})}if(!t.blocked.head&&n===[].concat(s.head).pop()&&n>=[].concat(i.body).shift())return Fs.call(this,t,n,-1,e),Wr.call(this,r,{reveal:!0,pristine:e});if(!t.blocked.foot&&n===[].concat(s.foot).shift()&&n<=[].concat(i.body).pop())return Fs.call(this,t,n,1,e),Wr.call(this,r,{reveal:!0,pristine:e})}}function Uf(r){var e=Math.abs(r);if(!isNaN(e))this.id=Qo(),this.interval=Math.max(e,16),this.members=[],this.models={},this.blocked={head:!1,foot:!1};else throw new RangeError("Invalid sequence interval.")}function sc(r,e,t){var n=this;this.head=[],this.body=[],this.foot=[],It(r.members,function(i,s){var a=t.elements[i];a&&a[e]&&n.body.push(s)}),this.body.length&&It(r.members,function(i,s){var a=t.elements[i];a&&!a[e]&&(s<n.body[0]?n.head.push(s):n.foot.push(s))})}function Fs(r,e,t,n){var i=this,s=["head",null,"foot"][1+t],a=r.members[e+t],l=this.store.elements[a];r.blocked[s]=!0,setTimeout(function(){r.blocked[s]=!1,l&&rc.call(i,l,n)},r.interval)}function oc(r,e,t){var n=this;e===void 0&&(e={}),t===void 0&&(t=!1);var i=[],s,a=e.interval||Ql.interval;try{a&&(s=new Uf(a));var l=kr(r);if(!l.length)throw new Error("Invalid reveal target.");var h=l.reduce(function(u,p){var m={},v=p.getAttribute("data-sr-id");v?(Gr(m,n.store.elements[v]),ji(m.node,m.styles.inline.computed)):(m.id=Qo(),m.node=p,m.seen=!1,m.revealed=!1,m.visible=!1);var _=Gr({},m.config||n.defaults,e);if(!_.mobile&&Ns()||!_.desktop&&!Ns())return v&&Ko.call(n,m),u;var b=kr(_.container)[0];if(!b)throw new Error("Invalid container.");if(!b.contains(p))return u;var S;return S=Hf(b,i,n.store.containers),S===null&&(S=Qo(),i.push({id:S,node:b})),m.config=_,m.containerId=S,m.styles=Ff(m),s&&(m.sequence={id:s.id,index:s.members.length},s.members.push(m.id)),u.push(m),u},[]);It(h,function(u){n.store.elements[u.id]=u,u.node.setAttribute("data-sr-id",u.id)})}catch(u){return Ii.call(this,"Reveal failed.",u.message)}It(i,function(u){n.store.containers[u.id]={id:u.id,node:u.node}}),s&&(this.store.sequences[s.id]=s),t!==!0&&(this.store.history.push({target:r,options:e}),this.initTimeout&&window.clearTimeout(this.initTimeout),this.initTimeout=window.setTimeout(nc.bind(this),0))}function Hf(r){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var n=null;return It(e,function(i){It(i,function(s){n===null&&s.node===r&&(n=s.id)})}),n}function kf(){var r=this;It(this.store.history,function(e){oc.call(r,e.target,e.options,!0)}),nc.call(this)}var Vf=function(r){return(r>0)-(r<0)||+r},ac=Math.sign||Vf;function lc(r,e){var t=e?r.node.clientHeight:r.node.offsetHeight,n=e?r.node.clientWidth:r.node.offsetWidth,i=0,s=0,a=r.node;do isNaN(a.offsetTop)||(i+=a.offsetTop),isNaN(a.offsetLeft)||(s+=a.offsetLeft),a=a.offsetParent;while(a);return{bounds:{top:i,right:s+n,bottom:i+t,left:s},height:t,width:n}}function Gf(r){var e,t;return r.node===document.documentElement?(e=window.pageYOffset,t=window.pageXOffset):(e=r.node.scrollTop,t=r.node.scrollLeft),{top:e,left:t}}function Wf(r){r===void 0&&(r={});var e=this.store.containers[r.containerId];if(!!e){var t=Math.max(0,Math.min(1,r.config.viewFactor)),n=r.config.viewOffset,i={top:r.geometry.bounds.top+r.geometry.height*t,right:r.geometry.bounds.right-r.geometry.width*t,bottom:r.geometry.bounds.bottom-r.geometry.height*t,left:r.geometry.bounds.left+r.geometry.width*t},s={top:e.geometry.bounds.top+e.scroll.top+n.top,right:e.geometry.bounds.right+e.scroll.left-n.right,bottom:e.geometry.bounds.bottom+e.scroll.top-n.bottom,left:e.geometry.bounds.left+e.scroll.left+n.left};return i.top<s.bottom&&i.right>s.left&&i.bottom>s.top&&i.left<s.right||r.styles.position==="fixed"}}function qf(r,e){var t=this;r===void 0&&(r={type:"init"}),e===void 0&&(e=this.store.elements),Df(function(){var n=r.type==="init"||r.type==="resize";It(t.store.containers,function(i){n&&(i.geometry=lc.call(t,i,!0));var s=Gf.call(t,i);i.scroll&&(i.direction={x:ac(s.left-i.scroll.left),y:ac(s.top-i.scroll.top)}),i.scroll=s}),It(e,function(i){(n||i.geometry===void 0)&&(i.geometry=lc.call(t,i)),i.visible=Wf.call(t,i)}),It(e,function(i){i.sequence?rc.call(t,i):Wr.call(t,i)}),t.pristine=!1})}function jf(){var r=document.documentElement.style;return"transform"in r||"WebkitTransform"in r}function Xf(){var r=document.documentElement.style;return"transition"in r||"WebkitTransition"in r}var Yf="4.0.9",ea,ta,na,ia,ra,ai,sa,oa;function Xi(r){r===void 0&&(r={});var e=typeof this=="undefined"||Object.getPrototypeOf(this)!==Xi.prototype;if(e)return new Xi(r);if(!Xi.isSupported())return Ii.call(this,"Instantiation failed.","This browser is not supported."),Vr.failure();var t;try{t=ai?Gr({},ai,r):Gr({},Ql,r)}catch(i){return Ii.call(this,"Invalid configuration.",i.message),Vr.failure()}try{var n=kr(t.container)[0];if(!n)throw new Error("Invalid container.")}catch(i){return Ii.call(this,i.message),Vr.failure()}return ai=t,!ai.mobile&&Ns()||!ai.desktop&&!Ns()?(Ii.call(this,"This device is disabled.","desktop: "+ai.desktop,"mobile: "+ai.mobile),Vr.failure()):(Vr.success(),this.store={containers:{},elements:{},history:[],sequences:{}},this.pristine=!0,ea=ea||qf.bind(this),ta=ta||Bf.bind(this),na=na||oc.bind(this),ia=ia||Ko.bind(this),ra=ra||kf.bind(this),Object.defineProperty(this,"delegate",{get:function(){return ea}}),Object.defineProperty(this,"destroy",{get:function(){return ta}}),Object.defineProperty(this,"reveal",{get:function(){return na}}),Object.defineProperty(this,"clean",{get:function(){return ia}}),Object.defineProperty(this,"sync",{get:function(){return ra}}),Object.defineProperty(this,"defaults",{get:function(){return ai}}),Object.defineProperty(this,"version",{get:function(){return Yf}}),Object.defineProperty(this,"noop",{get:function(){return!1}}),oa||(oa=this))}Xi.isSupported=function(){return jf()&&Xf()};Object.defineProperty(Xi,"debug",{get:function(){return sa||!1},set:function(r){return sa=typeof r=="boolean"?r:sa}});Xi();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const aa="137",Jf=0,cc=1,Zf=2,uc=1,$f=2,qr=3,jr=0,Xt=1,Yi=2,hc=1,li=0,Xr=1,fc=2,dc=3,pc=4,Kf=5,Ji=100,Qf=101,ed=102,mc=103,gc=104,td=200,nd=201,id=202,rd=203,vc=204,yc=205,sd=206,od=207,ad=208,ld=209,cd=210,ud=0,hd=1,fd=2,la=3,dd=4,pd=5,md=6,gd=7,Bs=0,vd=1,yd=2,ci=0,xd=1,_d=2,bd=3,wd=4,Md=5,xc=300,Yr=301,Jr=302,ca=303,ua=304,Os=306,ha=307,fa=1e3,Mn=1001,da=1002,Yt=1003,_c=1004,bc=1005,sn=1006,Sd=1007,zs=1008,ui=1009,Td=1010,Ed=1011,Zr=1012,Ad=1013,Us=1014,Ni=1015,Zi=1016,Cd=1017,Ld=1018,$i=1020,Rd=1021,cn=1023,Pd=1024,Dd=1025,Fi=1026,Ki=1027,Id=1028,Nd=1029,Fd=1030,Bd=1031,Od=1033,pa=33776,ma=33777,ga=33778,va=33779,wc=35840,Mc=35841,Sc=35842,Tc=35843,zd=36196,Ec=37492,Ac=37496,Cc=37808,Lc=37809,Rc=37810,Pc=37811,Dc=37812,Ic=37813,Nc=37814,Fc=37815,Bc=37816,Oc=37817,zc=37818,Uc=37819,Hc=37820,kc=37821,Vc=36492,Ud=2200,Hd=2201,kd=2202,Hs=2300,ks=2301,ya=2302,Qi=2400,er=2401,Vs=2402,xa=2500,Gc=2501,Vd=0,hi=3e3,Ft=3001,Gd=3200,Wd=3201,tr=0,qd=1,_a=7680,jd=519,$r=35044,Gs=35048,Wc="300 es",ba=1035;class Bi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}const en=[];for(let r=0;r<256;r++)en[r]=(r<16?"0":"")+r.toString(16);const wa=Math.PI/180,Ma=180/Math.PI;function kn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(en[r&255]+en[r>>8&255]+en[r>>16&255]+en[r>>24&255]+"-"+en[e&255]+en[e>>8&255]+"-"+en[e>>16&15|64]+en[e>>24&255]+"-"+en[t&63|128]+en[t>>8&255]+"-"+en[t>>16&255]+en[t>>24&255]+en[n&255]+en[n>>8&255]+en[n>>16&255]+en[n>>24&255]).toUpperCase()}function Sn(r,e,t){return Math.max(e,Math.min(t,r))}function Xd(r,e){return(r%e+e)%e}function Sa(r,e,t){return(1-t)*r+t*e}function qc(r){return(r&r-1)==0&&r!==0}function Yd(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}class ye{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ye.prototype.isVector2=!0;class tn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,a,l,h,u){const p=this.elements;return p[0]=e,p[1]=i,p[2]=l,p[3]=t,p[4]=s,p[5]=h,p[6]=n,p[7]=a,p[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],l=n[3],h=n[6],u=n[1],p=n[4],m=n[7],v=n[2],_=n[5],b=n[8],S=i[0],C=i[3],x=i[6],y=i[1],z=i[4],L=i[7],O=i[2],f=i[5],W=i[8];return s[0]=a*S+l*y+h*O,s[3]=a*C+l*z+h*f,s[6]=a*x+l*L+h*W,s[1]=u*S+p*y+m*O,s[4]=u*C+p*z+m*f,s[7]=u*x+p*L+m*W,s[2]=v*S+_*y+b*O,s[5]=v*C+_*z+b*f,s[8]=v*x+_*L+b*W,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],l=e[5],h=e[6],u=e[7],p=e[8];return t*a*p-t*l*u-n*s*p+n*l*h+i*s*u-i*a*h}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],l=e[5],h=e[6],u=e[7],p=e[8],m=p*a-l*u,v=l*h-p*s,_=u*s-a*h,b=t*m+n*v+i*_;if(b===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/b;return e[0]=m*S,e[1]=(i*u-p*n)*S,e[2]=(l*n-i*a)*S,e[3]=v*S,e[4]=(p*t-i*h)*S,e[5]=(i*s-l*t)*S,e[6]=_*S,e[7]=(n*h-u*t)*S,e[8]=(a*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,l){const h=Math.cos(s),u=Math.sin(s);return this.set(n*h,n*u,-n*(h*a+u*l)+a+e,-i*u,i*h,-i*(-u*a+h*l)+l+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],a=i[3],l=i[6],h=i[1],u=i[4],p=i[7];return i[0]=t*s+n*h,i[3]=t*a+n*u,i[6]=t*l+n*p,i[1]=-n*s+t*h,i[4]=-n*a+t*u,i[7]=-n*l+t*p,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}tn.prototype.isMatrix3=!0;function jc(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}function Kr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const Xc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Bn={h:0,s:0,l:0},Ws={h:0,s:0,l:0};function Ta(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function nr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Ea(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}class We{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Xd(e,1),t=Sn(t,0,1),n=Sn(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,s=2*n-i;this.r=Ta(s,i,e+1/3),this.g=Ta(s,i,e),this.b=Ta(s,i,e-1/3)}return this}setStyle(e){function t(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;const s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(i[1])/360,h=parseInt(i[2],10)/100,u=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(l,h,u)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=n[1],s=i.length;if(s===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=Xc[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=nr(e.r),this.g=nr(e.g),this.b=nr(e.b),this}copyLinearToSRGB(e){return this.r=Ea(e.r),this.g=Ea(e.g),this.b=Ea(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,i=this.b,s=Math.max(t,n,i),a=Math.min(t,n,i);let l,h;const u=(a+s)/2;if(a===s)l=0,h=0;else{const p=s-a;switch(h=u<=.5?p/(s+a):p/(2-s-a),s){case t:l=(n-i)/p+(n<i?6:0);break;case n:l=(i-t)/p+2;break;case i:l=(t-n)/p+4;break}l/=6}return e.h=l,e.s=h,e.l=u,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(Bn),Bn.h+=e,Bn.s+=t,Bn.l+=n,this.setHSL(Bn.h,Bn.s,Bn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Bn),e.getHSL(Ws);const n=Sa(Bn.h,Ws.h,t),i=Sa(Bn.s,Ws.s,t),s=Sa(Bn.l,Ws.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}We.NAMES=Xc;We.prototype.isColor=!0;We.prototype.r=1;We.prototype.g=1;We.prototype.b=1;let ir;class Oi{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ir===void 0&&(ir=Kr("canvas")),ir.width=e.width,ir.height=e.height;const n=ir.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ir}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Kr("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=nr(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(nr(t[n]/255)*255):t[n]=nr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Jd=0;class Zt extends Bi{constructor(e=Zt.DEFAULT_IMAGE,t=Zt.DEFAULT_MAPPING,n=Mn,i=Mn,s=sn,a=zs,l=cn,h=ui,u=1,p=hi){super();Object.defineProperty(this,"id",{value:Jd++}),this.uuid=kn(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=h,this.offset=new ye(0,0),this.repeat=new ye(1,1),this.center=new ye(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new tn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=kn()),!t&&e.images[i.uuid]===void 0){let s;if(Array.isArray(i)){s=[];for(let a=0,l=i.length;a<l;a++)i[a].isDataTexture?s.push(Aa(i[a].image)):s.push(Aa(i[a]))}else s=Aa(i);e.images[i.uuid]={uuid:i.uuid,url:s}}n.image=i.uuid}return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==xc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case fa:e.x=e.x-Math.floor(e.x);break;case Mn:e.x=e.x<0?0:1;break;case da:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case fa:e.y=e.y-Math.floor(e.y);break;case Mn:e.y=e.y<0?0:1;break;case da:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}Zt.DEFAULT_IMAGE=void 0;Zt.DEFAULT_MAPPING=xc;Zt.prototype.isTexture=!0;function Aa(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?Oi.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Ct{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const a=.01,l=.1,h=e.elements,u=h[0],p=h[4],m=h[8],v=h[1],_=h[5],b=h[9],S=h[2],C=h[6],x=h[10];if(Math.abs(p-v)<a&&Math.abs(m-S)<a&&Math.abs(b-C)<a){if(Math.abs(p+v)<l&&Math.abs(m+S)<l&&Math.abs(b+C)<l&&Math.abs(u+_+x-3)<l)return this.set(1,0,0,0),this;t=Math.PI;const z=(u+1)/2,L=(_+1)/2,O=(x+1)/2,f=(p+v)/4,W=(m+S)/4,ae=(b+C)/4;return z>L&&z>O?z<a?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(z),i=f/n,s=W/n):L>O?L<a?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(L),n=f/i,s=ae/i):O<a?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(O),n=W/s,i=ae/s),this.set(n,i,s,t),this}let y=Math.sqrt((C-b)*(C-b)+(m-S)*(m-S)+(v-p)*(v-p));return Math.abs(y)<.001&&(y=1),this.x=(C-b)/y,this.y=(m-S)/y,this.z=(v-p)/y,this.w=Math.acos((u+_+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ct.prototype.isVector4=!0;class Ln extends Bi{constructor(e,t,n={}){super();this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t),this.texture=new Zt(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:sn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ln.prototype.isWebGLRenderTarget=!0;class Zd extends Ln{constructor(e,t,n){super(e,t);const i=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=i.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}Zd.prototype.isWebGLMultipleRenderTargets=!0;class Ca extends Ln{constructor(e,t,n={}){super(e,t,n);this.samples=4,this.ignoreDepthForMultisampleCopy=n.ignoreDepth!==void 0?n.ignoreDepth:!0,this.useRenderToTexture=n.useRenderToTexture!==void 0?n.useRenderToTexture:!1,this.useRenderbuffer=this.useRenderToTexture===!1}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}Ca.prototype.isWebGLMultisampleRenderTarget=!0;class pn{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,a,l){let h=n[i+0],u=n[i+1],p=n[i+2],m=n[i+3];const v=s[a+0],_=s[a+1],b=s[a+2],S=s[a+3];if(l===0){e[t+0]=h,e[t+1]=u,e[t+2]=p,e[t+3]=m;return}if(l===1){e[t+0]=v,e[t+1]=_,e[t+2]=b,e[t+3]=S;return}if(m!==S||h!==v||u!==_||p!==b){let C=1-l;const x=h*v+u*_+p*b+m*S,y=x>=0?1:-1,z=1-x*x;if(z>Number.EPSILON){const O=Math.sqrt(z),f=Math.atan2(O,x*y);C=Math.sin(C*f)/O,l=Math.sin(l*f)/O}const L=l*y;if(h=h*C+v*L,u=u*C+_*L,p=p*C+b*L,m=m*C+S*L,C===1-l){const O=1/Math.sqrt(h*h+u*u+p*p+m*m);h*=O,u*=O,p*=O,m*=O}}e[t]=h,e[t+1]=u,e[t+2]=p,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,s,a){const l=n[i],h=n[i+1],u=n[i+2],p=n[i+3],m=s[a],v=s[a+1],_=s[a+2],b=s[a+3];return e[t]=l*b+p*m+h*_-u*v,e[t+1]=h*b+p*v+u*m-l*_,e[t+2]=u*b+p*_+l*v-h*m,e[t+3]=p*b-l*m-h*v-u*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,a=e._order,l=Math.cos,h=Math.sin,u=l(n/2),p=l(i/2),m=l(s/2),v=h(n/2),_=h(i/2),b=h(s/2);switch(a){case"XYZ":this._x=v*p*m+u*_*b,this._y=u*_*m-v*p*b,this._z=u*p*b+v*_*m,this._w=u*p*m-v*_*b;break;case"YXZ":this._x=v*p*m+u*_*b,this._y=u*_*m-v*p*b,this._z=u*p*b-v*_*m,this._w=u*p*m+v*_*b;break;case"ZXY":this._x=v*p*m-u*_*b,this._y=u*_*m+v*p*b,this._z=u*p*b+v*_*m,this._w=u*p*m-v*_*b;break;case"ZYX":this._x=v*p*m-u*_*b,this._y=u*_*m+v*p*b,this._z=u*p*b-v*_*m,this._w=u*p*m+v*_*b;break;case"YZX":this._x=v*p*m+u*_*b,this._y=u*_*m+v*p*b,this._z=u*p*b-v*_*m,this._w=u*p*m-v*_*b;break;case"XZY":this._x=v*p*m-u*_*b,this._y=u*_*m-v*p*b,this._z=u*p*b+v*_*m,this._w=u*p*m+v*_*b;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],l=t[5],h=t[9],u=t[2],p=t[6],m=t[10],v=n+l+m;if(v>0){const _=.5/Math.sqrt(v+1);this._w=.25/_,this._x=(p-h)*_,this._y=(s-u)*_,this._z=(a-i)*_}else if(n>l&&n>m){const _=2*Math.sqrt(1+n-l-m);this._w=(p-h)/_,this._x=.25*_,this._y=(i+a)/_,this._z=(s+u)/_}else if(l>m){const _=2*Math.sqrt(1+l-n-m);this._w=(s-u)/_,this._x=(i+a)/_,this._y=.25*_,this._z=(h+p)/_}else{const _=2*Math.sqrt(1+m-n-l);this._w=(a-i)/_,this._x=(s+u)/_,this._y=(h+p)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Sn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,l=t._x,h=t._y,u=t._z,p=t._w;return this._x=n*p+a*l+i*u-s*h,this._y=i*p+a*h+s*l-n*u,this._z=s*p+a*u+n*h-i*l,this._w=a*p-n*l-i*h-s*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let l=a*e._w+n*e._x+i*e._y+s*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const h=1-l*l;if(h<=Number.EPSILON){const _=1-t;return this._w=_*a+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(h),p=Math.atan2(u,l),m=Math.sin((1-t)*p)/u,v=Math.sin(t*p)/u;return this._w=a*m+this._w*v,this._x=n*m+this._x*v,this._y=i*m+this._y*v,this._z=s*m+this._z*v,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}pn.prototype.isQuaternion=!0;class B{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Yc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Yc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,l=e.z,h=e.w,u=h*t+a*i-l*n,p=h*n+l*t-s*i,m=h*i+s*n-a*t,v=-s*t-a*n-l*i;return this.x=u*h+v*-s+p*-l-m*-a,this.y=p*h+v*-a+m*-s-u*-l,this.z=m*h+v*-l+u*-a-p*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,l=t.y,h=t.z;return this.x=i*h-s*l,this.y=s*a-n*h,this.z=n*l-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return La.copy(this).projectOnVector(e),this.sub(La)}reflect(e){return this.sub(La.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Sn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}B.prototype.isVector3=!0;const La=new B,Yc=new pn;class On{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,l=-1/0;for(let h=0,u=e.length;h<u;h+=3){const p=e[h],m=e[h+1],v=e[h+2];p<t&&(t=p),m<n&&(n=m),v<i&&(i=v),p>s&&(s=p),m>a&&(a=m),v>l&&(l=v)}return this.min.set(t,n,i),this.max.set(s,a,l),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,l=-1/0;for(let h=0,u=e.count;h<u;h++){const p=e.getX(h),m=e.getY(h),v=e.getZ(h);p<t&&(t=p),m<n&&(n=m),v<i&&(i=v),p>s&&(s=p),m>a&&(a=m),v>l&&(l=v)}return this.min.set(t,n,i),this.max.set(s,a,l),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=zi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let a=0,l=s.count;a<l;a++)zi.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(zi)}else n.boundingBox===null&&n.computeBoundingBox(),Ra.copy(n.boundingBox),Ra.applyMatrix4(e.matrixWorld),this.union(Ra);const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,zi),zi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Qr),qs.subVectors(this.max,Qr),rr.subVectors(e.a,Qr),sr.subVectors(e.b,Qr),or.subVectors(e.c,Qr),fi.subVectors(sr,rr),di.subVectors(or,sr),Ui.subVectors(rr,or);let t=[0,-fi.z,fi.y,0,-di.z,di.y,0,-Ui.z,Ui.y,fi.z,0,-fi.x,di.z,0,-di.x,Ui.z,0,-Ui.x,-fi.y,fi.x,0,-di.y,di.x,0,-Ui.y,Ui.x,0];return!Pa(t,rr,sr,or,qs)||(t=[1,0,0,0,1,0,0,0,1],!Pa(t,rr,sr,or,qs))?!1:(js.crossVectors(fi,di),t=[js.x,js.y,js.z],Pa(t,rr,sr,or,qs))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return zi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(zi).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Jn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Jn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Jn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Jn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Jn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Jn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Jn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Jn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Jn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}On.prototype.isBox3=!0;const Jn=[new B,new B,new B,new B,new B,new B,new B,new B],zi=new B,Ra=new On,rr=new B,sr=new B,or=new B,fi=new B,di=new B,Ui=new B,Qr=new B,qs=new B,js=new B,Hi=new B;function Pa(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){Hi.fromArray(r,s);const l=i.x*Math.abs(Hi.x)+i.y*Math.abs(Hi.y)+i.z*Math.abs(Hi.z),h=e.dot(Hi),u=t.dot(Hi),p=n.dot(Hi);if(Math.max(-Math.max(h,u,p),Math.min(h,u,p))>l)return!1}return!0}const $d=new On,Jc=new B,Xs=new B,Da=new B;class ar{constructor(e=new B,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):$d.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Da.subVectors(e,this.center);const t=Da.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(Da.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Xs.set(0,0,1).multiplyScalar(e.radius):Xs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Jc.copy(e.center).add(Xs)),this.expandByPoint(Jc.copy(e.center).sub(Xs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Zn=new B,Ia=new B,Ys=new B,pi=new B,Na=new B,Js=new B,Fa=new B;class lr{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zn.copy(this.direction).multiplyScalar(t).add(this.origin),Zn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ia.copy(e).add(t).multiplyScalar(.5),Ys.copy(t).sub(e).normalize(),pi.copy(this.origin).sub(Ia);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Ys),l=pi.dot(this.direction),h=-pi.dot(Ys),u=pi.lengthSq(),p=Math.abs(1-a*a);let m,v,_,b;if(p>0)if(m=a*h-l,v=a*l-h,b=s*p,m>=0)if(v>=-b)if(v<=b){const S=1/p;m*=S,v*=S,_=m*(m+a*v+2*l)+v*(a*m+v+2*h)+u}else v=s,m=Math.max(0,-(a*v+l)),_=-m*m+v*(v+2*h)+u;else v=-s,m=Math.max(0,-(a*v+l)),_=-m*m+v*(v+2*h)+u;else v<=-b?(m=Math.max(0,-(-a*s+l)),v=m>0?-s:Math.min(Math.max(-s,-h),s),_=-m*m+v*(v+2*h)+u):v<=b?(m=0,v=Math.min(Math.max(-s,-h),s),_=v*(v+2*h)+u):(m=Math.max(0,-(a*s+l)),v=m>0?s:Math.min(Math.max(-s,-h),s),_=-m*m+v*(v+2*h)+u);else v=a>0?-s:s,m=Math.max(0,-(a*v+l)),_=-m*m+v*(v+2*h)+u;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),i&&i.copy(Ys).multiplyScalar(v).add(Ia),_}intersectSphere(e,t){Zn.subVectors(e.center,this.origin);const n=Zn.dot(this.direction),i=Zn.dot(Zn)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),l=n-a,h=n+a;return l<0&&h<0?null:l<0?this.at(h,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,l,h;const u=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,v=this.origin;return u>=0?(n=(e.min.x-v.x)*u,i=(e.max.x-v.x)*u):(n=(e.max.x-v.x)*u,i=(e.min.x-v.x)*u),p>=0?(s=(e.min.y-v.y)*p,a=(e.max.y-v.y)*p):(s=(e.max.y-v.y)*p,a=(e.min.y-v.y)*p),n>a||s>i||((s>n||n!==n)&&(n=s),(a<i||i!==i)&&(i=a),m>=0?(l=(e.min.z-v.z)*m,h=(e.max.z-v.z)*m):(l=(e.max.z-v.z)*m,h=(e.min.z-v.z)*m),n>h||l>i)||((l>n||n!==n)&&(n=l),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Zn)!==null}intersectTriangle(e,t,n,i,s){Na.subVectors(t,e),Js.subVectors(n,e),Fa.crossVectors(Na,Js);let a=this.direction.dot(Fa),l;if(a>0){if(i)return null;l=1}else if(a<0)l=-1,a=-a;else return null;pi.subVectors(this.origin,e);const h=l*this.direction.dot(Js.crossVectors(pi,Js));if(h<0)return null;const u=l*this.direction.dot(Na.cross(pi));if(u<0||h+u>a)return null;const p=-l*pi.dot(Fa);return p<0?null:this.at(p/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ke{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,a,l,h,u,p,m,v,_,b,S,C){const x=this.elements;return x[0]=e,x[4]=t,x[8]=n,x[12]=i,x[1]=s,x[5]=a,x[9]=l,x[13]=h,x[2]=u,x[6]=p,x[10]=m,x[14]=v,x[3]=_,x[7]=b,x[11]=S,x[15]=C,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ke().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/cr.setFromMatrixColumn(e,0).length(),s=1/cr.setFromMatrixColumn(e,1).length(),a=1/cr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),l=Math.sin(n),h=Math.cos(i),u=Math.sin(i),p=Math.cos(s),m=Math.sin(s);if(e.order==="XYZ"){const v=a*p,_=a*m,b=l*p,S=l*m;t[0]=h*p,t[4]=-h*m,t[8]=u,t[1]=_+b*u,t[5]=v-S*u,t[9]=-l*h,t[2]=S-v*u,t[6]=b+_*u,t[10]=a*h}else if(e.order==="YXZ"){const v=h*p,_=h*m,b=u*p,S=u*m;t[0]=v+S*l,t[4]=b*l-_,t[8]=a*u,t[1]=a*m,t[5]=a*p,t[9]=-l,t[2]=_*l-b,t[6]=S+v*l,t[10]=a*h}else if(e.order==="ZXY"){const v=h*p,_=h*m,b=u*p,S=u*m;t[0]=v-S*l,t[4]=-a*m,t[8]=b+_*l,t[1]=_+b*l,t[5]=a*p,t[9]=S-v*l,t[2]=-a*u,t[6]=l,t[10]=a*h}else if(e.order==="ZYX"){const v=a*p,_=a*m,b=l*p,S=l*m;t[0]=h*p,t[4]=b*u-_,t[8]=v*u+S,t[1]=h*m,t[5]=S*u+v,t[9]=_*u-b,t[2]=-u,t[6]=l*h,t[10]=a*h}else if(e.order==="YZX"){const v=a*h,_=a*u,b=l*h,S=l*u;t[0]=h*p,t[4]=S-v*m,t[8]=b*m+_,t[1]=m,t[5]=a*p,t[9]=-l*p,t[2]=-u*p,t[6]=_*m+b,t[10]=v-S*m}else if(e.order==="XZY"){const v=a*h,_=a*u,b=l*h,S=l*u;t[0]=h*p,t[4]=-m,t[8]=u*p,t[1]=v*m+S,t[5]=a*p,t[9]=_*m-b,t[2]=b*m-_,t[6]=l*p,t[10]=S*m+v}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Kd,e,Qd)}lookAt(e,t,n){const i=this.elements;return Tn.subVectors(e,t),Tn.lengthSq()===0&&(Tn.z=1),Tn.normalize(),mi.crossVectors(n,Tn),mi.lengthSq()===0&&(Math.abs(n.z)===1?Tn.x+=1e-4:Tn.z+=1e-4,Tn.normalize(),mi.crossVectors(n,Tn)),mi.normalize(),Zs.crossVectors(Tn,mi),i[0]=mi.x,i[4]=Zs.x,i[8]=Tn.x,i[1]=mi.y,i[5]=Zs.y,i[9]=Tn.y,i[2]=mi.z,i[6]=Zs.z,i[10]=Tn.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],l=n[4],h=n[8],u=n[12],p=n[1],m=n[5],v=n[9],_=n[13],b=n[2],S=n[6],C=n[10],x=n[14],y=n[3],z=n[7],L=n[11],O=n[15],f=i[0],W=i[4],ae=i[8],Me=i[12],ge=i[1],A=i[5],k=i[9],X=i[13],Z=i[2],K=i[6],Y=i[10],ce=i[14],ve=i[3],Ne=i[7],oe=i[11],ue=i[15];return s[0]=a*f+l*ge+h*Z+u*ve,s[4]=a*W+l*A+h*K+u*Ne,s[8]=a*ae+l*k+h*Y+u*oe,s[12]=a*Me+l*X+h*ce+u*ue,s[1]=p*f+m*ge+v*Z+_*ve,s[5]=p*W+m*A+v*K+_*Ne,s[9]=p*ae+m*k+v*Y+_*oe,s[13]=p*Me+m*X+v*ce+_*ue,s[2]=b*f+S*ge+C*Z+x*ve,s[6]=b*W+S*A+C*K+x*Ne,s[10]=b*ae+S*k+C*Y+x*oe,s[14]=b*Me+S*X+C*ce+x*ue,s[3]=y*f+z*ge+L*Z+O*ve,s[7]=y*W+z*A+L*K+O*Ne,s[11]=y*ae+z*k+L*Y+O*oe,s[15]=y*Me+z*X+L*ce+O*ue,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],l=e[5],h=e[9],u=e[13],p=e[2],m=e[6],v=e[10],_=e[14],b=e[3],S=e[7],C=e[11],x=e[15];return b*(+s*h*m-i*u*m-s*l*v+n*u*v+i*l*_-n*h*_)+S*(+t*h*_-t*u*v+s*a*v-i*a*_+i*u*p-s*h*p)+C*(+t*u*m-t*l*_-s*a*m+n*a*_+s*l*p-n*u*p)+x*(-i*l*p-t*h*m+t*l*v+i*a*m-n*a*v+n*h*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],l=e[5],h=e[6],u=e[7],p=e[8],m=e[9],v=e[10],_=e[11],b=e[12],S=e[13],C=e[14],x=e[15],y=m*C*u-S*v*u+S*h*_-l*C*_-m*h*x+l*v*x,z=b*v*u-p*C*u-b*h*_+a*C*_+p*h*x-a*v*x,L=p*S*u-b*m*u+b*l*_-a*S*_-p*l*x+a*m*x,O=b*m*h-p*S*h-b*l*v+a*S*v+p*l*C-a*m*C,f=t*y+n*z+i*L+s*O;if(f===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const W=1/f;return e[0]=y*W,e[1]=(S*v*s-m*C*s-S*i*_+n*C*_+m*i*x-n*v*x)*W,e[2]=(l*C*s-S*h*s+S*i*u-n*C*u-l*i*x+n*h*x)*W,e[3]=(m*h*s-l*v*s-m*i*u+n*v*u+l*i*_-n*h*_)*W,e[4]=z*W,e[5]=(p*C*s-b*v*s+b*i*_-t*C*_-p*i*x+t*v*x)*W,e[6]=(b*h*s-a*C*s-b*i*u+t*C*u+a*i*x-t*h*x)*W,e[7]=(a*v*s-p*h*s+p*i*u-t*v*u-a*i*_+t*h*_)*W,e[8]=L*W,e[9]=(b*m*s-p*S*s-b*n*_+t*S*_+p*n*x-t*m*x)*W,e[10]=(a*S*s-b*l*s+b*n*u-t*S*u-a*n*x+t*l*x)*W,e[11]=(p*l*s-a*m*s-p*n*u+t*m*u+a*n*_-t*l*_)*W,e[12]=O*W,e[13]=(p*S*i-b*m*i+b*n*v-t*S*v-p*n*C+t*m*C)*W,e[14]=(b*l*i-a*S*i-b*n*h+t*S*h+a*n*C-t*l*C)*W,e[15]=(a*m*i-p*l*i+p*n*h-t*m*h-a*n*v+t*l*v)*W,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,l=e.y,h=e.z,u=s*a,p=s*l;return this.set(u*a+n,u*l-i*h,u*h+i*l,0,u*l+i*h,p*l+n,p*h-i*a,0,u*h-i*l,p*h+i*a,s*h*h+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,l=t._z,h=t._w,u=s+s,p=a+a,m=l+l,v=s*u,_=s*p,b=s*m,S=a*p,C=a*m,x=l*m,y=h*u,z=h*p,L=h*m,O=n.x,f=n.y,W=n.z;return i[0]=(1-(S+x))*O,i[1]=(_+L)*O,i[2]=(b-z)*O,i[3]=0,i[4]=(_-L)*f,i[5]=(1-(v+x))*f,i[6]=(C+y)*f,i[7]=0,i[8]=(b+z)*W,i[9]=(C-y)*W,i[10]=(1-(v+S))*W,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=cr.set(i[0],i[1],i[2]).length();const a=cr.set(i[4],i[5],i[6]).length(),l=cr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],zn.copy(this);const u=1/s,p=1/a,m=1/l;return zn.elements[0]*=u,zn.elements[1]*=u,zn.elements[2]*=u,zn.elements[4]*=p,zn.elements[5]*=p,zn.elements[6]*=p,zn.elements[8]*=m,zn.elements[9]*=m,zn.elements[10]*=m,t.setFromRotationMatrix(zn),n.x=s,n.y=a,n.z=l,this}makePerspective(e,t,n,i,s,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const l=this.elements,h=2*s/(t-e),u=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i),v=-(a+s)/(a-s),_=-2*a*s/(a-s);return l[0]=h,l[4]=0,l[8]=p,l[12]=0,l[1]=0,l[5]=u,l[9]=m,l[13]=0,l[2]=0,l[6]=0,l[10]=v,l[14]=_,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,s,a){const l=this.elements,h=1/(t-e),u=1/(n-i),p=1/(a-s),m=(t+e)*h,v=(n+i)*u,_=(a+s)*p;return l[0]=2*h,l[4]=0,l[8]=0,l[12]=-m,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-v,l[2]=0,l[6]=0,l[10]=-2*p,l[14]=-_,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Ke.prototype.isMatrix4=!0;const cr=new B,zn=new Ke,Kd=new B(0,0,0),Qd=new B(1,1,1),mi=new B,Zs=new B,Tn=new B,Zc=new Ke,$c=new pn;class ur{constructor(e=0,t=0,n=0,i=ur.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],l=i[8],h=i[1],u=i[5],p=i[9],m=i[2],v=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Sn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-p,_),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(v,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Sn(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(l,_),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-m,s),this._z=0);break;case"ZXY":this._x=Math.asin(Sn(v,-1,1)),Math.abs(v)<.9999999?(this._y=Math.atan2(-m,_),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(h,s));break;case"ZYX":this._y=Math.asin(-Sn(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(v,_),this._z=Math.atan2(h,s)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(Sn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,u),this._y=Math.atan2(-m,s)):(this._x=0,this._y=Math.atan2(l,_));break;case"XZY":this._z=Math.asin(-Sn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(v,u),this._y=Math.atan2(l,s)):(this._x=Math.atan2(-p,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Zc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Zc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return $c.setFromEuler(this),this.setFromQuaternion($c,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new B(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ur.prototype.isEuler=!0;ur.DefaultOrder="XYZ";ur.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Kc{constructor(){this.mask=1|0}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let ep=0;const Qc=new B,hr=new pn,$n=new Ke,$s=new B,es=new B,tp=new B,np=new pn,eu=new B(1,0,0),tu=new B(0,1,0),nu=new B(0,0,1),ip={type:"added"},iu={type:"removed"};class bt extends Bi{constructor(){super();Object.defineProperty(this,"id",{value:ep++}),this.uuid=kn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=bt.DefaultUp.clone();const e=new B,t=new ur,n=new pn,i=new B(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ke},normalMatrix:{value:new tn}}),this.matrix=new Ke,this.matrixWorld=new Ke,this.matrixAutoUpdate=bt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Kc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return hr.setFromAxisAngle(e,t),this.quaternion.multiply(hr),this}rotateOnWorldAxis(e,t){return hr.setFromAxisAngle(e,t),this.quaternion.premultiply(hr),this}rotateX(e){return this.rotateOnAxis(eu,e)}rotateY(e){return this.rotateOnAxis(tu,e)}rotateZ(e){return this.rotateOnAxis(nu,e)}translateOnAxis(e,t){return Qc.copy(e).applyQuaternion(this.quaternion),this.position.add(Qc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eu,e)}translateY(e){return this.translateOnAxis(tu,e)}translateZ(e){return this.translateOnAxis(nu,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4($n.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?$s.copy(e):$s.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),es.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$n.lookAt(es,$s,this.up):$n.lookAt($s,es,this.up),this.quaternion.setFromRotationMatrix($n),i&&($n.extractRotation(i.matrixWorld),hr.setFromRotationMatrix($n),this.quaternion.premultiply(hr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ip)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(iu)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(iu)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),$n.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),$n.multiply(e.parent.matrixWorld)),e.applyMatrix4($n),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(es,e,tp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(es,np,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(l,h){return l[h.uuid]===void 0&&(l[h.uuid]=h.toJSON(e)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const h=l.shapes;if(Array.isArray(h))for(let u=0,p=h.length;u<p;u++){const m=h[u];s(e.shapes,m)}else s(e.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let h=0,u=this.material.length;h<u;h++)l.push(s(e.materials,this.material[h]));i.material=l}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let l=0;l<this.children.length;l++)i.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let l=0;l<this.animations.length;l++){const h=this.animations[l];i.animations.push(s(e.animations,h))}}if(t){const l=a(e.geometries),h=a(e.materials),u=a(e.textures),p=a(e.images),m=a(e.shapes),v=a(e.skeletons),_=a(e.animations);l.length>0&&(n.geometries=l),h.length>0&&(n.materials=h),u.length>0&&(n.textures=u),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),v.length>0&&(n.skeletons=v),_.length>0&&(n.animations=_)}return n.object=i,n;function a(l){const h=[];for(const u in l){const p=l[u];delete p.metadata,h.push(p)}return h}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}bt.DefaultUp=new B(0,1,0);bt.DefaultMatrixAutoUpdate=!0;bt.prototype.isObject3D=!0;const Un=new B,Kn=new B,Ba=new B,Qn=new B,fr=new B,dr=new B,ru=new B,Oa=new B,za=new B,Ua=new B;class Wt{constructor(e=new B,t=new B,n=new B){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Un.subVectors(e,t),i.cross(Un);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Un.subVectors(i,t),Kn.subVectors(n,t),Ba.subVectors(e,t);const a=Un.dot(Un),l=Un.dot(Kn),h=Un.dot(Ba),u=Kn.dot(Kn),p=Kn.dot(Ba),m=a*u-l*l;if(m===0)return s.set(-2,-1,-1);const v=1/m,_=(u*h-l*p)*v,b=(a*p-l*h)*v;return s.set(1-_-b,b,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Qn),Qn.x>=0&&Qn.y>=0&&Qn.x+Qn.y<=1}static getUV(e,t,n,i,s,a,l,h){return this.getBarycoord(e,t,n,i,Qn),h.set(0,0),h.addScaledVector(s,Qn.x),h.addScaledVector(a,Qn.y),h.addScaledVector(l,Qn.z),h}static isFrontFacing(e,t,n,i){return Un.subVectors(n,t),Kn.subVectors(e,t),Un.cross(Kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Un.subVectors(this.c,this.b),Kn.subVectors(this.a,this.b),Un.cross(Kn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Wt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Wt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Wt.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Wt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Wt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,l;fr.subVectors(i,n),dr.subVectors(s,n),Oa.subVectors(e,n);const h=fr.dot(Oa),u=dr.dot(Oa);if(h<=0&&u<=0)return t.copy(n);za.subVectors(e,i);const p=fr.dot(za),m=dr.dot(za);if(p>=0&&m<=p)return t.copy(i);const v=h*m-p*u;if(v<=0&&h>=0&&p<=0)return a=h/(h-p),t.copy(n).addScaledVector(fr,a);Ua.subVectors(e,s);const _=fr.dot(Ua),b=dr.dot(Ua);if(b>=0&&_<=b)return t.copy(s);const S=_*u-h*b;if(S<=0&&u>=0&&b<=0)return l=u/(u-b),t.copy(n).addScaledVector(dr,l);const C=p*b-_*m;if(C<=0&&m-p>=0&&_-b>=0)return ru.subVectors(s,i),l=(m-p)/(m-p+(_-b)),t.copy(i).addScaledVector(ru,l);const x=1/(C+S+v);return a=S*x,l=v*x,t.copy(n).addScaledVector(fr,a).addScaledVector(dr,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let rp=0;class on extends Bi{constructor(){super();Object.defineProperty(this,"id",{value:rp++}),this.uuid=kn(),this.name="",this.type="Material",this.fog=!0,this.blending=Xr,this.side=jr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=vc,this.blendDst=yc,this.blendEquation=Ji,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=la,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=jd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=_a,this.stencilZFail=_a,this.stencilZPass=_a,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.alphaWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===hc;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Xr&&(n.blending=this.blending),this.side!==jr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.alphaWrite=this.alphaWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const a=[];for(const l in s){const h=s[l];delete h.metadata,a.push(h)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.alphaWrite=e.alphaWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}on.prototype.isMaterial=!0;class Ha extends on{constructor(e){super();this.type="MeshBasicMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Ha.prototype.isMeshBasicMaterial=!0;const Pt=new B,Ks=new ye;class Jt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=$r,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new We),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new ye),t[n++]=a.x,t[n++]=a.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new B),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Ct),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ks.fromBufferAttribute(this,t),Ks.applyMatrix3(e),this.setXY(t,Ks.x,Ks.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix3(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Pt.x=this.getX(t),Pt.y=this.getY(t),Pt.z=this.getZ(t),Pt.applyMatrix4(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pt.x=this.getX(t),Pt.y=this.getY(t),Pt.z=this.getZ(t),Pt.applyNormalMatrix(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pt.x=this.getX(t),Pt.y=this.getY(t),Pt.z=this.getZ(t),Pt.transformDirection(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==$r&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}Jt.prototype.isBufferAttribute=!0;class su extends Jt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class ou extends Jt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class sp extends Jt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}sp.prototype.isFloat16BufferAttribute=!0;class $t extends Jt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let op=0;const Rn=new Ke,ka=new bt,pr=new B,En=new On,ts=new On,Kt=new B;class Bt extends Bi{constructor(){super();Object.defineProperty(this,"id",{value:op++}),this.uuid=kn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(jc(e)?ou:su)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new tn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Rn.makeRotationFromQuaternion(e),this.applyMatrix4(Rn),this}rotateX(e){return Rn.makeRotationX(e),this.applyMatrix4(Rn),this}rotateY(e){return Rn.makeRotationY(e),this.applyMatrix4(Rn),this}rotateZ(e){return Rn.makeRotationZ(e),this.applyMatrix4(Rn),this}translate(e,t,n){return Rn.makeTranslation(e,t,n),this.applyMatrix4(Rn),this}scale(e,t,n){return Rn.makeScale(e,t,n),this.applyMatrix4(Rn),this}lookAt(e){return ka.lookAt(e),ka.updateMatrix(),this.applyMatrix4(ka.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(pr).negate(),this.translate(pr.x,pr.y,pr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new $t(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new On);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];En.setFromBufferAttribute(s),this.morphTargetsRelative?(Kt.addVectors(this.boundingBox.min,En.min),this.boundingBox.expandByPoint(Kt),Kt.addVectors(this.boundingBox.max,En.max),this.boundingBox.expandByPoint(Kt)):(this.boundingBox.expandByPoint(En.min),this.boundingBox.expandByPoint(En.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ar);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new B,1/0);return}if(e){const n=this.boundingSphere.center;if(En.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const l=t[s];ts.setFromBufferAttribute(l),this.morphTargetsRelative?(Kt.addVectors(En.min,ts.min),En.expandByPoint(Kt),Kt.addVectors(En.max,ts.max),En.expandByPoint(Kt)):(En.expandByPoint(ts.min),En.expandByPoint(ts.max))}En.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Kt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Kt));if(t)for(let s=0,a=t.length;s<a;s++){const l=t[s],h=this.morphTargetsRelative;for(let u=0,p=l.count;u<p;u++)Kt.fromBufferAttribute(l,u),h&&(pr.fromBufferAttribute(e,u),Kt.add(pr)),i=Math.max(i,n.distanceToSquared(Kt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,a=t.uv.array,l=i.length/3;t.tangent===void 0&&this.setAttribute("tangent",new Jt(new Float32Array(4*l),4));const h=t.tangent.array,u=[],p=[];for(let ge=0;ge<l;ge++)u[ge]=new B,p[ge]=new B;const m=new B,v=new B,_=new B,b=new ye,S=new ye,C=new ye,x=new B,y=new B;function z(ge,A,k){m.fromArray(i,ge*3),v.fromArray(i,A*3),_.fromArray(i,k*3),b.fromArray(a,ge*2),S.fromArray(a,A*2),C.fromArray(a,k*2),v.sub(m),_.sub(m),S.sub(b),C.sub(b);const X=1/(S.x*C.y-C.x*S.y);!isFinite(X)||(x.copy(v).multiplyScalar(C.y).addScaledVector(_,-S.y).multiplyScalar(X),y.copy(_).multiplyScalar(S.x).addScaledVector(v,-C.x).multiplyScalar(X),u[ge].add(x),u[A].add(x),u[k].add(x),p[ge].add(y),p[A].add(y),p[k].add(y))}let L=this.groups;L.length===0&&(L=[{start:0,count:n.length}]);for(let ge=0,A=L.length;ge<A;++ge){const k=L[ge],X=k.start,Z=k.count;for(let K=X,Y=X+Z;K<Y;K+=3)z(n[K+0],n[K+1],n[K+2])}const O=new B,f=new B,W=new B,ae=new B;function Me(ge){W.fromArray(s,ge*3),ae.copy(W);const A=u[ge];O.copy(A),O.sub(W.multiplyScalar(W.dot(A))).normalize(),f.crossVectors(ae,A);const X=f.dot(p[ge])<0?-1:1;h[ge*4]=O.x,h[ge*4+1]=O.y,h[ge*4+2]=O.z,h[ge*4+3]=X}for(let ge=0,A=L.length;ge<A;++ge){const k=L[ge],X=k.start,Z=k.count;for(let K=X,Y=X+Z;K<Y;K+=3)Me(n[K+0]),Me(n[K+1]),Me(n[K+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Jt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let v=0,_=n.count;v<_;v++)n.setXYZ(v,0,0,0);const i=new B,s=new B,a=new B,l=new B,h=new B,u=new B,p=new B,m=new B;if(e)for(let v=0,_=e.count;v<_;v+=3){const b=e.getX(v+0),S=e.getX(v+1),C=e.getX(v+2);i.fromBufferAttribute(t,b),s.fromBufferAttribute(t,S),a.fromBufferAttribute(t,C),p.subVectors(a,s),m.subVectors(i,s),p.cross(m),l.fromBufferAttribute(n,b),h.fromBufferAttribute(n,S),u.fromBufferAttribute(n,C),l.add(p),h.add(p),u.add(p),n.setXYZ(b,l.x,l.y,l.z),n.setXYZ(S,h.x,h.y,h.z),n.setXYZ(C,u.x,u.y,u.z)}else for(let v=0,_=t.count;v<_;v+=3)i.fromBufferAttribute(t,v+0),s.fromBufferAttribute(t,v+1),a.fromBufferAttribute(t,v+2),p.subVectors(a,s),m.subVectors(i,s),p.cross(m),n.setXYZ(v+0,p.x,p.y,p.z),n.setXYZ(v+1,p.x,p.y,p.z),n.setXYZ(v+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const a=n[i].array,l=e.attributes[i],h=l.array,u=l.itemSize*t,p=Math.min(h.length,a.length-u);for(let m=0,v=u;m<p;m++,v++)a[v]=h[m]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Kt.fromBufferAttribute(e,t),Kt.normalize(),e.setXYZ(t,Kt.x,Kt.y,Kt.z)}toNonIndexed(){function e(l,h){const u=l.array,p=l.itemSize,m=l.normalized,v=new u.constructor(h.length*p);let _=0,b=0;for(let S=0,C=h.length;S<C;S++){l.isInterleavedBufferAttribute?_=h[S]*l.data.stride+l.offset:_=h[S]*p;for(let x=0;x<p;x++)v[b++]=u[_++]}return new Jt(v,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Bt,n=this.index.array,i=this.attributes;for(const l in i){const h=i[l],u=e(h,n);t.setAttribute(l,u)}const s=this.morphAttributes;for(const l in s){const h=[],u=s[l];for(let p=0,m=u.length;p<m;p++){const v=u[p],_=e(v,n);h.push(_)}t.morphAttributes[l]=h}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const u in h)h[u]!==void 0&&(e[u]=h[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const h in n){const u=n[h];e.data.attributes[h]=u.toJSON(e.data)}const i={};let s=!1;for(const h in this.morphAttributes){const u=this.morphAttributes[h],p=[];for(let m=0,v=u.length;m<v;m++){const _=u[m];p.push(_.toJSON(e.data))}p.length>0&&(i[h]=p,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const u in i){const p=i[u];this.setAttribute(u,p.clone(t))}const s=e.morphAttributes;for(const u in s){const p=[],m=s[u];for(let v=0,_=m.length;v<_;v++)p.push(m[v].clone(t));this.morphAttributes[u]=p}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,p=a.length;u<p;u++){const m=a[u];this.addGroup(m.start,m.count,m.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Bt.prototype.isBufferGeometry=!0;const au=new Ke,mr=new lr,Va=new ar,gi=new B,vi=new B,yi=new B,Ga=new B,Wa=new B,qa=new B,Qs=new B,eo=new B,to=new B,no=new ye,io=new ye,ro=new ye,ja=new B,so=new B;class mn extends bt{constructor(e=new Bt,t=new Ha){super();this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const l=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Va.copy(n.boundingSphere),Va.applyMatrix4(s),e.ray.intersectsSphere(Va)===!1)||(au.copy(s).invert(),mr.copy(e.ray).applyMatrix4(au),n.boundingBox!==null&&mr.intersectsBox(n.boundingBox)===!1))return;let a;if(n.isBufferGeometry){const l=n.index,h=n.attributes.position,u=n.morphAttributes.position,p=n.morphTargetsRelative,m=n.attributes.uv,v=n.attributes.uv2,_=n.groups,b=n.drawRange;if(l!==null)if(Array.isArray(i))for(let S=0,C=_.length;S<C;S++){const x=_[S],y=i[x.materialIndex],z=Math.max(x.start,b.start),L=Math.min(l.count,Math.min(x.start+x.count,b.start+b.count));for(let O=z,f=L;O<f;O+=3){const W=l.getX(O),ae=l.getX(O+1),Me=l.getX(O+2);a=oo(this,y,e,mr,h,u,p,m,v,W,ae,Me),a&&(a.faceIndex=Math.floor(O/3),a.face.materialIndex=x.materialIndex,t.push(a))}}else{const S=Math.max(0,b.start),C=Math.min(l.count,b.start+b.count);for(let x=S,y=C;x<y;x+=3){const z=l.getX(x),L=l.getX(x+1),O=l.getX(x+2);a=oo(this,i,e,mr,h,u,p,m,v,z,L,O),a&&(a.faceIndex=Math.floor(x/3),t.push(a))}}else if(h!==void 0)if(Array.isArray(i))for(let S=0,C=_.length;S<C;S++){const x=_[S],y=i[x.materialIndex],z=Math.max(x.start,b.start),L=Math.min(h.count,Math.min(x.start+x.count,b.start+b.count));for(let O=z,f=L;O<f;O+=3){const W=O,ae=O+1,Me=O+2;a=oo(this,y,e,mr,h,u,p,m,v,W,ae,Me),a&&(a.faceIndex=Math.floor(O/3),a.face.materialIndex=x.materialIndex,t.push(a))}}else{const S=Math.max(0,b.start),C=Math.min(h.count,b.start+b.count);for(let x=S,y=C;x<y;x+=3){const z=x,L=x+1,O=x+2;a=oo(this,i,e,mr,h,u,p,m,v,z,L,O),a&&(a.faceIndex=Math.floor(x/3),t.push(a))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}mn.prototype.isMesh=!0;function ap(r,e,t,n,i,s,a,l){let h;if(e.side===Xt?h=n.intersectTriangle(a,s,i,!0,l):h=n.intersectTriangle(i,s,a,e.side!==Yi,l),h===null)return null;so.copy(l),so.applyMatrix4(r.matrixWorld);const u=t.ray.origin.distanceTo(so);return u<t.near||u>t.far?null:{distance:u,point:so.clone(),object:r}}function oo(r,e,t,n,i,s,a,l,h,u,p,m){gi.fromBufferAttribute(i,u),vi.fromBufferAttribute(i,p),yi.fromBufferAttribute(i,m);const v=r.morphTargetInfluences;if(s&&v){Qs.set(0,0,0),eo.set(0,0,0),to.set(0,0,0);for(let b=0,S=s.length;b<S;b++){const C=v[b],x=s[b];C!==0&&(Ga.fromBufferAttribute(x,u),Wa.fromBufferAttribute(x,p),qa.fromBufferAttribute(x,m),a?(Qs.addScaledVector(Ga,C),eo.addScaledVector(Wa,C),to.addScaledVector(qa,C)):(Qs.addScaledVector(Ga.sub(gi),C),eo.addScaledVector(Wa.sub(vi),C),to.addScaledVector(qa.sub(yi),C)))}gi.add(Qs),vi.add(eo),yi.add(to)}r.isSkinnedMesh&&(r.boneTransform(u,gi),r.boneTransform(p,vi),r.boneTransform(m,yi));const _=ap(r,e,t,n,gi,vi,yi,ja);if(_){l&&(no.fromBufferAttribute(l,u),io.fromBufferAttribute(l,p),ro.fromBufferAttribute(l,m),_.uv=Wt.getUV(ja,gi,vi,yi,no,io,ro,new ye)),h&&(no.fromBufferAttribute(h,u),io.fromBufferAttribute(h,p),ro.fromBufferAttribute(h,m),_.uv2=Wt.getUV(ja,gi,vi,yi,no,io,ro,new ye));const b={a:u,b:p,c:m,normal:new B,materialIndex:0};Wt.getNormal(gi,vi,yi,b.normal),_.face=b}return _}class ns extends Bt{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const l=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const h=[],u=[],p=[],m=[];let v=0,_=0;b("z","y","x",-1,-1,n,t,e,a,s,0),b("z","y","x",1,-1,n,t,-e,a,s,1),b("x","z","y",1,1,e,n,t,i,a,2),b("x","z","y",1,-1,e,n,-t,i,a,3),b("x","y","z",1,-1,e,t,n,i,s,4),b("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(h),this.setAttribute("position",new $t(u,3)),this.setAttribute("normal",new $t(p,3)),this.setAttribute("uv",new $t(m,2));function b(S,C,x,y,z,L,O,f,W,ae,Me){const ge=L/W,A=O/ae,k=L/2,X=O/2,Z=f/2,K=W+1,Y=ae+1;let ce=0,ve=0;const Ne=new B;for(let oe=0;oe<Y;oe++){const ue=oe*A-X;for(let Le=0;Le<K;Le++){const De=Le*ge-k;Ne[S]=De*y,Ne[C]=ue*z,Ne[x]=Z,u.push(Ne.x,Ne.y,Ne.z),Ne[S]=0,Ne[C]=0,Ne[x]=f>0?1:-1,p.push(Ne.x,Ne.y,Ne.z),m.push(Le/W),m.push(1-oe/ae),ce+=1}}for(let oe=0;oe<ae;oe++)for(let ue=0;ue<W;ue++){const Le=v+ue+K*oe,De=v+ue+K*(oe+1),Ue=v+(ue+1)+K*(oe+1),ne=v+(ue+1)+K*oe;h.push(Le,De,ne),h.push(De,Ue,ne),ve+=6}l.addGroup(_,ve,Me),_+=ve,v+=ce}}static fromJSON(e){return new ns(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function gr(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function an(r){const e={};for(let t=0;t<r.length;t++){const n=gr(r[t]);for(const i in n)e[i]=n[i]}return e}const lp={clone:gr,merge:an};var cp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,up=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ki extends on{constructor(e){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=cp,this.fragmentShader=up,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=gr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}ki.prototype.isShaderMaterial=!0;class Xa extends bt{constructor(){super();this.type="Camera",this.matrixWorldInverse=new Ke,this.projectionMatrix=new Ke,this.projectionMatrixInverse=new Ke}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Xa.prototype.isCamera=!0;class gn extends Xa{constructor(e=50,t=1,n=.1,i=2e3){super();this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ma*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(wa*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ma*2*Math.atan(Math.tan(wa*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(wa*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const h=a.fullWidth,u=a.fullHeight;s+=a.offsetX*i/h,t-=a.offsetY*n/u,i*=a.width/h,n*=a.height/u}const l=this.filmOffset;l!==0&&(s+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}gn.prototype.isPerspectiveCamera=!0;const vr=90,yr=1;class Ya extends bt{constructor(e,t,n){super();if(this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new gn(vr,yr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new B(1,0,0)),this.add(i);const s=new gn(vr,yr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new B(-1,0,0)),this.add(s);const a=new gn(vr,yr,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new B(0,1,0)),this.add(a);const l=new gn(vr,yr,e,t);l.layers=this.layers,l.up.set(0,0,-1),l.lookAt(new B(0,-1,0)),this.add(l);const h=new gn(vr,yr,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new B(0,0,1)),this.add(h);const u=new gn(vr,yr,e,t);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new B(0,0,-1)),this.add(u)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,a,l,h,u]=this.children,p=e.xr.enabled,m=e.getRenderTarget();e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,h),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,u),e.setRenderTarget(m),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class ao extends Zt{constructor(e,t,n,i,s,a,l,h,u,p){e=e!==void 0?e:[],t=t!==void 0?t:Yr;super(e,t,n,i,s,a,l,h,u,p);this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}ao.prototype.isCubeTexture=!0;class lu extends Ln{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n);super(e,e,t);t=t||{},this.texture=new ao(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:sn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=cn,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ns(5,5,5),s=new ki({name:"CubemapFromEquirect",uniforms:gr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Xt,blending:li});s.uniforms.tEquirect.value=t;const a=new mn(i,s),l=t.minFilter;return t.minFilter===zs&&(t.minFilter=sn),new Ya(1,10,this).update(e,a),t.minFilter=l,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}lu.prototype.isWebGLCubeRenderTarget=!0;const Ja=new B,hp=new B,fp=new tn;class ei{constructor(e=new B(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ja.subVectors(n,t).cross(hp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Ja),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||fp.getNormalMatrix(e),i=this.coplanarPoint(Ja).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}ei.prototype.isPlane=!0;const xr=new ar,lo=new B;class co{constructor(e=new ei,t=new ei,n=new ei,i=new ei,s=new ei,a=new ei){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(s),l[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],a=n[2],l=n[3],h=n[4],u=n[5],p=n[6],m=n[7],v=n[8],_=n[9],b=n[10],S=n[11],C=n[12],x=n[13],y=n[14],z=n[15];return t[0].setComponents(l-i,m-h,S-v,z-C).normalize(),t[1].setComponents(l+i,m+h,S+v,z+C).normalize(),t[2].setComponents(l+s,m+u,S+_,z+x).normalize(),t[3].setComponents(l-s,m-u,S-_,z-x).normalize(),t[4].setComponents(l-a,m-p,S-b,z-y).normalize(),t[5].setComponents(l+a,m+p,S+b,z+y).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),xr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSprite(e){return xr.center.set(0,0,0),xr.radius=.7071067811865476,xr.applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(lo.x=i.normal.x>0?e.max.x:e.min.x,lo.y=i.normal.y>0?e.max.y:e.min.y,lo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(lo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function cu(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function dp(r,e){const t=e.isWebGL2,n=new WeakMap;function i(u,p){const m=u.array,v=u.usage,_=r.createBuffer();r.bindBuffer(p,_),r.bufferData(p,m,v),u.onUploadCallback();let b=5126;return m instanceof Float32Array?b=5126:m instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):m instanceof Uint16Array?u.isFloat16BufferAttribute?t?b=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):b=5123:m instanceof Int16Array?b=5122:m instanceof Uint32Array?b=5125:m instanceof Int32Array?b=5124:m instanceof Int8Array?b=5120:(m instanceof Uint8Array||m instanceof Uint8ClampedArray)&&(b=5121),{buffer:_,type:b,bytesPerElement:m.BYTES_PER_ELEMENT,version:u.version}}function s(u,p,m){const v=p.array,_=p.updateRange;r.bindBuffer(m,u),_.count===-1?r.bufferSubData(m,0,v):(t?r.bufferSubData(m,_.offset*v.BYTES_PER_ELEMENT,v,_.offset,_.count):r.bufferSubData(m,_.offset*v.BYTES_PER_ELEMENT,v.subarray(_.offset,_.offset+_.count)),_.count=-1)}function a(u){return u.isInterleavedBufferAttribute&&(u=u.data),n.get(u)}function l(u){u.isInterleavedBufferAttribute&&(u=u.data);const p=n.get(u);p&&(r.deleteBuffer(p.buffer),n.delete(u))}function h(u,p){if(u.isGLBufferAttribute){const v=n.get(u);(!v||v.version<u.version)&&n.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const m=n.get(u);m===void 0?n.set(u,i(u,p)):m.version<u.version&&(s(m.buffer,u,p),m.version=u.version)}return{get:a,remove:l,update:h}}class Za extends Bt{constructor(e=1,t=1,n=1,i=1){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,l=Math.floor(n),h=Math.floor(i),u=l+1,p=h+1,m=e/l,v=t/h,_=[],b=[],S=[],C=[];for(let x=0;x<p;x++){const y=x*v-a;for(let z=0;z<u;z++){const L=z*m-s;b.push(L,-y,0),S.push(0,0,1),C.push(z/l),C.push(1-x/h)}}for(let x=0;x<h;x++)for(let y=0;y<l;y++){const z=y+u*x,L=y+u*(x+1),O=y+1+u*(x+1),f=y+1+u*x;_.push(z,L,f),_.push(L,O,f)}this.setIndex(_),this.setAttribute("position",new $t(b,3)),this.setAttribute("normal",new $t(S,3)),this.setAttribute("uv",new $t(C,2))}static fromJSON(e){return new Za(e.width,e.height,e.widthSegments,e.heightSegments)}}var pp=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,mp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,gp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,vp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,yp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,xp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,_p="vec3 transformed = vec3( position );",bp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,wp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Mp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Sp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Tp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ep=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Ap=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Cp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Lp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Rp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Pp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Dp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Ip=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Np=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Fp=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Bp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Op=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,zp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Up="gl_FragColor = linearToOutputTexel( gl_FragColor );",Hp=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,kp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Vp=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Gp=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Wp=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,qp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,jp=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Xp=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Yp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Jp=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Zp=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,$p=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Kp=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Qp=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,em=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,tm=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,nm=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,im=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,rm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,sm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,om=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,am=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,cm=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,um=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,hm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,fm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,dm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,pm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,mm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,gm=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,vm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ym=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,_m=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,bm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,wm=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Mm=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Sm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Tm=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Em=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Am=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Cm=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Lm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Rm=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Pm=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Dm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Im=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Nm=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Fm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Bm=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Om=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Um=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Hm=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,km=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Vm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Gm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Wm=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,qm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,jm=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Xm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ym=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Jm=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Zm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$m=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Km=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Qm=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,eg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,tg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,ng=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,ig=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,rg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,sg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,og=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,ag=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const lg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,cg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ug=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,hg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,fg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,dg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,pg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,gg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,yg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,_g=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,bg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wg=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mg=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Tg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Eg=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Ag=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,Cg=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lg=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rg=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Pg=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dg=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ig=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ng=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Fg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Bg=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Og=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,zg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ug=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ht={alphamap_fragment:pp,alphamap_pars_fragment:mp,alphatest_fragment:gp,alphatest_pars_fragment:vp,aomap_fragment:yp,aomap_pars_fragment:xp,begin_vertex:_p,beginnormal_vertex:bp,bsdfs:wp,bumpmap_pars_fragment:Mp,clipping_planes_fragment:Sp,clipping_planes_pars_fragment:Tp,clipping_planes_pars_vertex:Ep,clipping_planes_vertex:Ap,color_fragment:Cp,color_pars_fragment:Lp,color_pars_vertex:Rp,color_vertex:Pp,common:Dp,cube_uv_reflection_fragment:Ip,defaultnormal_vertex:Np,displacementmap_pars_vertex:Fp,displacementmap_vertex:Bp,emissivemap_fragment:Op,emissivemap_pars_fragment:zp,encodings_fragment:Up,encodings_pars_fragment:Hp,envmap_fragment:kp,envmap_common_pars_fragment:Vp,envmap_pars_fragment:Gp,envmap_pars_vertex:Wp,envmap_physical_pars_fragment:tm,envmap_vertex:qp,fog_vertex:jp,fog_pars_vertex:Xp,fog_fragment:Yp,fog_pars_fragment:Jp,gradientmap_pars_fragment:Zp,lightmap_fragment:$p,lightmap_pars_fragment:Kp,lights_lambert_vertex:Qp,lights_pars_begin:em,lights_toon_fragment:nm,lights_toon_pars_fragment:im,lights_phong_fragment:rm,lights_phong_pars_fragment:sm,lights_physical_fragment:om,lights_physical_pars_fragment:am,lights_fragment_begin:lm,lights_fragment_maps:cm,lights_fragment_end:um,logdepthbuf_fragment:hm,logdepthbuf_pars_fragment:fm,logdepthbuf_pars_vertex:dm,logdepthbuf_vertex:pm,map_fragment:mm,map_pars_fragment:gm,map_particle_fragment:vm,map_particle_pars_fragment:ym,metalnessmap_fragment:xm,metalnessmap_pars_fragment:_m,morphnormal_vertex:bm,morphtarget_pars_vertex:wm,morphtarget_vertex:Mm,normal_fragment_begin:Sm,normal_fragment_maps:Tm,normal_pars_fragment:Em,normal_pars_vertex:Am,normal_vertex:Cm,normalmap_pars_fragment:Lm,clearcoat_normal_fragment_begin:Rm,clearcoat_normal_fragment_maps:Pm,clearcoat_pars_fragment:Dm,output_fragment:Im,packing:Nm,premultiplied_alpha_fragment:Fm,project_vertex:Bm,dithering_fragment:Om,dithering_pars_fragment:zm,roughnessmap_fragment:Um,roughnessmap_pars_fragment:Hm,shadowmap_pars_fragment:km,shadowmap_pars_vertex:Vm,shadowmap_vertex:Gm,shadowmask_pars_fragment:Wm,skinbase_vertex:qm,skinning_pars_vertex:jm,skinning_vertex:Xm,skinnormal_vertex:Ym,specularmap_fragment:Jm,specularmap_pars_fragment:Zm,tonemapping_fragment:$m,tonemapping_pars_fragment:Km,transmission_fragment:Qm,transmission_pars_fragment:eg,uv_pars_fragment:tg,uv_pars_vertex:ng,uv_vertex:ig,uv2_pars_fragment:rg,uv2_pars_vertex:sg,uv2_vertex:og,worldpos_vertex:ag,background_vert:lg,background_frag:cg,cube_vert:ug,cube_frag:hg,depth_vert:fg,depth_frag:dg,distanceRGBA_vert:pg,distanceRGBA_frag:mg,equirect_vert:gg,equirect_frag:vg,linedashed_vert:yg,linedashed_frag:xg,meshbasic_vert:_g,meshbasic_frag:bg,meshlambert_vert:wg,meshlambert_frag:Mg,meshmatcap_vert:Sg,meshmatcap_frag:Tg,meshnormal_vert:Eg,meshnormal_frag:Ag,meshphong_vert:Cg,meshphong_frag:Lg,meshphysical_vert:Rg,meshphysical_frag:Pg,meshtoon_vert:Dg,meshtoon_frag:Ig,points_vert:Ng,points_frag:Fg,shadow_vert:Bg,shadow_frag:Og,sprite_vert:zg,sprite_frag:Ug},Se={common:{diffuse:{value:new We(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new tn},uv2Transform:{value:new tn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ye(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new We(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new We(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new tn}},sprite:{diffuse:{value:new We(16777215)},opacity:{value:1},center:{value:new ye(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new tn}}},Vn={basic:{uniforms:an([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:an([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.fog,Se.lights,{emissive:{value:new We(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:an([Se.common,Se.specularmap,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,Se.lights,{emissive:{value:new We(0)},specular:{value:new We(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:an([Se.common,Se.envmap,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.roughnessmap,Se.metalnessmap,Se.fog,Se.lights,{emissive:{value:new We(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:an([Se.common,Se.aomap,Se.lightmap,Se.emissivemap,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.gradientmap,Se.fog,Se.lights,{emissive:{value:new We(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:an([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,Se.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:an([Se.points,Se.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:an([Se.common,Se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:an([Se.common,Se.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:an([Se.common,Se.bumpmap,Se.normalmap,Se.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:an([Se.sprite,Se.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new tn},t2D:{value:null}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},cube:{uniforms:an([Se.envmap,{opacity:{value:1}}]),vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:an([Se.common,Se.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:an([Se.lights,Se.fog,{color:{value:new We(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};Vn.physical={uniforms:an([Vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ye(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new We(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ye},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new We(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new We(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};function Hg(r,e,t,n,i,s){const a=new We(0);let l=i===!0?0:1,h,u,p=null,m=0,v=null;function _(S,C){let x=!1,y=C.isScene===!0?C.background:null;y&&y.isTexture&&(y=e.get(y));const z=r.xr,L=z.getSession&&z.getSession();L&&L.environmentBlendMode==="additive"&&(y=null),y===null?b(a,l):y&&y.isColor&&(b(y,1),x=!0),(r.autoClear||x)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),y&&(y.isCubeTexture||y.mapping===Os)?(u===void 0&&(u=new mn(new ns(1,1,1),new ki({name:"BackgroundCubeMaterial",uniforms:gr(Vn.cube.uniforms),vertexShader:Vn.cube.vertexShader,fragmentShader:Vn.cube.fragmentShader,side:Xt,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(O,f,W){this.matrixWorld.copyPosition(W.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,(p!==y||m!==y.version||v!==r.toneMapping)&&(u.material.needsUpdate=!0,p=y,m=y.version,v=r.toneMapping),S.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(h===void 0&&(h=new mn(new Za(2,2),new ki({name:"BackgroundMaterial",uniforms:gr(Vn.background.uniforms),vertexShader:Vn.background.vertexShader,fragmentShader:Vn.background.fragmentShader,side:jr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(h)),h.material.uniforms.t2D.value=y,y.matrixAutoUpdate===!0&&y.updateMatrix(),h.material.uniforms.uvTransform.value.copy(y.matrix),(p!==y||m!==y.version||v!==r.toneMapping)&&(h.material.needsUpdate=!0,p=y,m=y.version,v=r.toneMapping),S.unshift(h,h.geometry,h.material,0,0,null))}function b(S,C){t.buffers.color.setClear(S.r,S.g,S.b,C,s)}return{getClearColor:function(){return a},setClearColor:function(S,C=1){a.set(S),l=C,b(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(S){l=S,b(a,l)},render:_}}function kg(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||s!==null,l={},h=S(null);let u=h;function p(X,Z,K,Y,ce){let ve=!1;if(a){const Ne=b(Y,K,Z);u!==Ne&&(u=Ne,v(u.object)),ve=C(Y,ce),ve&&x(Y,ce)}else{const Ne=Z.wireframe===!0;(u.geometry!==Y.id||u.program!==K.id||u.wireframe!==Ne)&&(u.geometry=Y.id,u.program=K.id,u.wireframe=Ne,ve=!0)}X.isInstancedMesh===!0&&(ve=!0),ce!==null&&t.update(ce,34963),ve&&(W(X,Z,K,Y),ce!==null&&r.bindBuffer(34963,t.get(ce).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function v(X){return n.isWebGL2?r.bindVertexArray(X):s.bindVertexArrayOES(X)}function _(X){return n.isWebGL2?r.deleteVertexArray(X):s.deleteVertexArrayOES(X)}function b(X,Z,K){const Y=K.wireframe===!0;let ce=l[X.id];ce===void 0&&(ce={},l[X.id]=ce);let ve=ce[Z.id];ve===void 0&&(ve={},ce[Z.id]=ve);let Ne=ve[Y];return Ne===void 0&&(Ne=S(m()),ve[Y]=Ne),Ne}function S(X){const Z=[],K=[],Y=[];for(let ce=0;ce<i;ce++)Z[ce]=0,K[ce]=0,Y[ce]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Z,enabledAttributes:K,attributeDivisors:Y,object:X,attributes:{},index:null}}function C(X,Z){const K=u.attributes,Y=X.attributes;let ce=0;for(const ve in Y){const Ne=K[ve],oe=Y[ve];if(Ne===void 0||Ne.attribute!==oe||Ne.data!==oe.data)return!0;ce++}return u.attributesNum!==ce||u.index!==Z}function x(X,Z){const K={},Y=X.attributes;let ce=0;for(const ve in Y){const Ne=Y[ve],oe={};oe.attribute=Ne,Ne.data&&(oe.data=Ne.data),K[ve]=oe,ce++}u.attributes=K,u.attributesNum=ce,u.index=Z}function y(){const X=u.newAttributes;for(let Z=0,K=X.length;Z<K;Z++)X[Z]=0}function z(X){L(X,0)}function L(X,Z){const K=u.newAttributes,Y=u.enabledAttributes,ce=u.attributeDivisors;K[X]=1,Y[X]===0&&(r.enableVertexAttribArray(X),Y[X]=1),ce[X]!==Z&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](X,Z),ce[X]=Z)}function O(){const X=u.newAttributes,Z=u.enabledAttributes;for(let K=0,Y=Z.length;K<Y;K++)Z[K]!==X[K]&&(r.disableVertexAttribArray(K),Z[K]=0)}function f(X,Z,K,Y,ce,ve){n.isWebGL2===!0&&(K===5124||K===5125)?r.vertexAttribIPointer(X,Z,K,ce,ve):r.vertexAttribPointer(X,Z,K,Y,ce,ve)}function W(X,Z,K,Y){if(n.isWebGL2===!1&&(X.isInstancedMesh||Y.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const ce=Y.attributes,ve=K.getAttributes(),Ne=Z.defaultAttributeValues;for(const oe in ve){const ue=ve[oe];if(ue.location>=0){let Le=ce[oe];if(Le===void 0&&(oe==="instanceMatrix"&&X.instanceMatrix&&(Le=X.instanceMatrix),oe==="instanceColor"&&X.instanceColor&&(Le=X.instanceColor)),Le!==void 0){const De=Le.normalized,Ue=Le.itemSize,ne=t.get(Le);if(ne===void 0)continue;const pt=ne.buffer,Oe=ne.type,Xe=ne.bytesPerElement;if(Le.isInterleavedBufferAttribute){const Te=Le.data,at=Te.stride,Qe=Le.offset;if(Te&&Te.isInstancedInterleavedBuffer){for(let de=0;de<ue.locationSize;de++)L(ue.location+de,Te.meshPerAttribute);X.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=Te.meshPerAttribute*Te.count)}else for(let de=0;de<ue.locationSize;de++)z(ue.location+de);r.bindBuffer(34962,pt);for(let de=0;de<ue.locationSize;de++)f(ue.location+de,Ue/ue.locationSize,Oe,De,at*Xe,(Qe+Ue/ue.locationSize*de)*Xe)}else{if(Le.isInstancedBufferAttribute){for(let Te=0;Te<ue.locationSize;Te++)L(ue.location+Te,Le.meshPerAttribute);X.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=Le.meshPerAttribute*Le.count)}else for(let Te=0;Te<ue.locationSize;Te++)z(ue.location+Te);r.bindBuffer(34962,pt);for(let Te=0;Te<ue.locationSize;Te++)f(ue.location+Te,Ue/ue.locationSize,Oe,De,Ue*Xe,Ue/ue.locationSize*Te*Xe)}}else if(Ne!==void 0){const De=Ne[oe];if(De!==void 0)switch(De.length){case 2:r.vertexAttrib2fv(ue.location,De);break;case 3:r.vertexAttrib3fv(ue.location,De);break;case 4:r.vertexAttrib4fv(ue.location,De);break;default:r.vertexAttrib1fv(ue.location,De)}}}}O()}function ae(){A();for(const X in l){const Z=l[X];for(const K in Z){const Y=Z[K];for(const ce in Y)_(Y[ce].object),delete Y[ce];delete Z[K]}delete l[X]}}function Me(X){if(l[X.id]===void 0)return;const Z=l[X.id];for(const K in Z){const Y=Z[K];for(const ce in Y)_(Y[ce].object),delete Y[ce];delete Z[K]}delete l[X.id]}function ge(X){for(const Z in l){const K=l[Z];if(K[X.id]===void 0)continue;const Y=K[X.id];for(const ce in Y)_(Y[ce].object),delete Y[ce];delete K[X.id]}}function A(){k(),u!==h&&(u=h,v(u.object))}function k(){h.geometry=null,h.program=null,h.wireframe=!1}return{setup:p,reset:A,resetDefaultState:k,dispose:ae,releaseStatesOfGeometry:Me,releaseStatesOfProgram:ge,initAttributes:y,enableAttribute:z,disableUnusedAttributes:O}}function Vg(r,e,t,n){const i=n.isWebGL2;let s;function a(u){s=u}function l(u,p){r.drawArrays(s,u,p),t.update(p,s,1)}function h(u,p,m){if(m===0)return;let v,_;if(i)v=r,_="drawArraysInstanced";else if(v=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",v===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[_](s,u,p,m),t.update(p,s,m)}this.setMode=a,this.render=l,this.renderInstances=h}function Gg(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const W=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(W.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(W){if(W==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";W="mediump"}return W==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let l=t.precision!==void 0?t.precision:"highp";const h=s(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=a||e.has("WEBGL_draw_buffers"),p=t.logarithmicDepthBuffer===!0,m=r.getParameter(34930),v=r.getParameter(35660),_=r.getParameter(3379),b=r.getParameter(34076),S=r.getParameter(34921),C=r.getParameter(36347),x=r.getParameter(36348),y=r.getParameter(36349),z=v>0,L=a||e.has("OES_texture_float"),O=z&&L,f=a?r.getParameter(36183):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:i,getMaxPrecision:s,precision:l,logarithmicDepthBuffer:p,maxTextures:m,maxVertexTextures:v,maxTextureSize:_,maxCubemapSize:b,maxAttributes:S,maxVertexUniforms:C,maxVaryings:x,maxFragmentUniforms:y,vertexTextures:z,floatFragmentTextures:L,floatVertexTextures:O,maxSamples:f}}function Wg(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new ei,l=new tn,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,v,_){const b=m.length!==0||v||n!==0||i;return i=v,t=p(m,_,0),n=m.length,b},this.beginShadows=function(){s=!0,p(null)},this.endShadows=function(){s=!1,u()},this.setState=function(m,v,_){const b=m.clippingPlanes,S=m.clipIntersection,C=m.clipShadows,x=r.get(m);if(!i||b===null||b.length===0||s&&!C)s?p(null):u();else{const y=s?0:n,z=y*4;let L=x.clippingState||null;h.value=L,L=p(b,v,z,_);for(let O=0;O!==z;++O)L[O]=t[O];x.clippingState=L,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=y}};function u(){h.value!==t&&(h.value=t,h.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function p(m,v,_,b){const S=m!==null?m.length:0;let C=null;if(S!==0){if(C=h.value,b!==!0||C===null){const x=_+S*4,y=v.matrixWorldInverse;l.getNormalMatrix(y),(C===null||C.length<x)&&(C=new Float32Array(x));for(let z=0,L=_;z!==S;++z,L+=4)a.copy(m[z]).applyMatrix4(y,l),a.normal.toArray(C,L),C[L+3]=a.constant}h.value=C,h.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,C}}function qg(r){let e=new WeakMap;function t(a,l){return l===ca?a.mapping=Yr:l===ua&&(a.mapping=Jr),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const l=a.mapping;if(l===ca||l===ua)if(e.has(a)){const h=e.get(a).texture;return t(h,a.mapping)}else{const h=a.image;if(h&&h.height>0){const u=new lu(h.height/2);return u.fromEquirectangularTexture(r,a),e.set(a,u),a.addEventListener("dispose",i),t(u.texture,a.mapping)}else return null}}return a}function i(a){const l=a.target;l.removeEventListener("dispose",i);const h=e.get(l);h!==void 0&&(e.delete(l),h.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class $a extends Xa{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,l=i+t,h=i-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=u*this.view.offsetX,a=s+u*this.view.width,l-=p*this.view.offsetY,h=l-p*this.view.height}this.projectionMatrix.makeOrthographic(s,a,l,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}$a.prototype.isOrthographicCamera=!0;class uo extends ki{constructor(e){super(e);this.type="RawShaderMaterial"}}uo.prototype.isRawShaderMaterial=!0;const _r=4,xi=8,Gn=Math.pow(2,xi),uu=[.125,.215,.35,.446,.526,.582],hu=xi-_r+1+uu.length,br=20,Ka=new $a,{_lodPlanes:is,_sizeLods:fu,_sigmas:ho}=jg(),du=new We;let Qa=null;const Vi=(1+Math.sqrt(5))/2,wr=1/Vi,pu=[new B(1,1,1),new B(-1,1,1),new B(1,1,-1),new B(-1,1,-1),new B(0,Vi,wr),new B(0,Vi,-wr),new B(wr,0,Vi),new B(-wr,0,Vi),new B(Vi,wr,0),new B(-Vi,wr,0)];class mu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=Xg(br),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Qa=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=yu(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=vu(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<is.length;e++)is[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Qa),e.scissorTest=!1,fo(e,0,0,e.width,e.height)}_fromTexture(e,t){Qa=this._renderer.getRenderTarget();const n=t||this._allocateTargets(e);return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(e){const t={magFilter:sn,minFilter:sn,generateMipmaps:!1,type:Zi,format:cn,encoding:hi,depthBuffer:!1},n=gu(t);return n.depthBuffer=!e,this._pingPongRenderTarget===null&&(this._pingPongRenderTarget=gu(t)),n}_compileMaterial(e){const t=new mn(is[0],e);this._renderer.compile(t,Ka)}_sceneToCubeUV(e,t,n,i){const s=90,a=1,l=new gn(s,a,t,n),h=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,v=p.toneMapping;p.getClearColor(du),p.toneMapping=ci,p.autoClear=!1;const _=new Ha({name:"PMREM.Background",side:Xt,depthWrite:!1,depthTest:!1}),b=new mn(new ns,_);let S=!1;const C=e.background;C?C.isColor&&(_.color.copy(C),e.background=null,S=!0):(_.color.copy(du),S=!0);for(let x=0;x<6;x++){const y=x%3;y===0?(l.up.set(0,h[x],0),l.lookAt(u[x],0,0)):y===1?(l.up.set(0,0,h[x]),l.lookAt(0,u[x],0)):(l.up.set(0,h[x],0),l.lookAt(0,0,u[x])),fo(i,y*Gn,x>2?Gn:0,Gn,Gn),p.setRenderTarget(i),S&&p.render(b,l),p.render(e,l)}b.geometry.dispose(),b.material.dispose(),p.toneMapping=v,p.autoClear=m,e.background=C}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Yr||e.mapping===Jr;i?(this._cubemapShader===null&&(this._cubemapShader=yu()),this._cubemapShader.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectShader===null&&(this._equirectShader=vu());const s=i?this._cubemapShader:this._equirectShader,a=new mn(is[0],s),l=s.uniforms;l.envMap.value=e,i||l.texelSize.value.set(1/e.image.width,1/e.image.height),fo(t,0,0,3*Gn,2*Gn),n.setRenderTarget(t),n.render(a,Ka)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<hu;i++){const s=Math.sqrt(ho[i]*ho[i]-ho[i-1]*ho[i-1]),a=pu[(i-1)%pu.length];this._blur(e,i-1,i,s,a)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,l){const h=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new mn(is[i],u),v=u.uniforms,_=fu[n]-1,b=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*br-1),S=s/b,C=isFinite(s)?1+Math.floor(p*S):br;C>br&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${C} samples when the maximum is set to ${br}`);const x=[];let y=0;for(let f=0;f<br;++f){const W=f/S,ae=Math.exp(-W*W/2);x.push(ae),f===0?y+=ae:f<C&&(y+=2*ae)}for(let f=0;f<x.length;f++)x[f]=x[f]/y;v.envMap.value=e.texture,v.samples.value=C,v.weights.value=x,v.latitudinal.value=a==="latitudinal",l&&(v.poleAxis.value=l),v.dTheta.value=b,v.mipInt.value=xi-n;const z=fu[i],L=3*Math.max(0,Gn-2*z),O=(i===0?0:2*Gn)+2*z*(i>xi-_r?i-xi+_r:0);fo(t,L,O,3*z,2*z),h.setRenderTarget(t),h.render(m,Ka)}}function jg(){const r=[],e=[],t=[];let n=xi;for(let i=0;i<hu;i++){const s=Math.pow(2,n);e.push(s);let a=1/s;i>xi-_r?a=uu[i-xi+_r-1]:i===0&&(a=0),t.push(a);const l=1/(s-1),h=-l/2,u=1+l/2,p=[h,h,u,h,u,u,h,h,u,u,h,u],m=6,v=6,_=3,b=2,S=1,C=new Float32Array(_*v*m),x=new Float32Array(b*v*m),y=new Float32Array(S*v*m);for(let L=0;L<m;L++){const O=L%3*2/3-1,f=L>2?0:-1,W=[O,f,0,O+2/3,f,0,O+2/3,f+1,0,O,f,0,O+2/3,f+1,0,O,f+1,0];C.set(W,_*v*L),x.set(p,b*v*L);const ae=[L,L,L,L,L,L];y.set(ae,S*v*L)}const z=new Bt;z.setAttribute("position",new Jt(C,_)),z.setAttribute("uv",new Jt(x,b)),z.setAttribute("faceIndex",new Jt(y,S)),r.push(z),n>_r&&n--}return{_lodPlanes:r,_sizeLods:e,_sigmas:t}}function gu(r){const e=new Ln(3*Gn,3*Gn,r);return e.texture.mapping=Os,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function fo(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Xg(r){const e=new Float32Array(r),t=new B(0,1,0);return new uo({name:"SphericalGaussianBlur",defines:{n:r},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t}},vertexShader:el(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function vu(){const r=new ye(1,1);return new uo({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:r}},vertexShader:el(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = texture2D ( envMap, uv ).rgb;
				uv.x += texelSize.x;
				vec3 tr = texture2D ( envMap, uv ).rgb;
				uv.y += texelSize.y;
				vec3 br = texture2D ( envMap, uv ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = texture2D ( envMap, uv ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function yu(){return new uo({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:el(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:li,depthTest:!1,depthWrite:!1})}function el(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Yg(r){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const h=l.mapping,u=h===ca||h===ua,p=h===Yr||h===Jr;if(u||p)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let m=e.get(l);return t===null&&(t=new mu(r)),m=u?t.fromEquirectangular(l,m):t.fromCubemap(l,m),e.set(l,m),m.texture}else{if(e.has(l))return e.get(l).texture;{const m=l.image;if(u&&m&&m.height>0||p&&m&&i(m)){t===null&&(t=new mu(r));const v=u?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,v),l.addEventListener("dispose",s),v.texture}else return null}}}return l}function i(l){let h=0;const u=6;for(let p=0;p<u;p++)l[p]!==void 0&&h++;return h===u}function s(l){const h=l.target;h.removeEventListener("dispose",s);const u=e.get(h);u!==void 0&&(e.delete(h),u.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function Jg(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Zg(r,e,t,n){const i={},s=new WeakMap;function a(m){const v=m.target;v.index!==null&&e.remove(v.index);for(const b in v.attributes)e.remove(v.attributes[b]);v.removeEventListener("dispose",a),delete i[v.id];const _=s.get(v);_&&(e.remove(_),s.delete(v)),n.releaseStatesOfGeometry(v),v.isInstancedBufferGeometry===!0&&delete v._maxInstanceCount,t.memory.geometries--}function l(m,v){return i[v.id]===!0||(v.addEventListener("dispose",a),i[v.id]=!0,t.memory.geometries++),v}function h(m){const v=m.attributes;for(const b in v)e.update(v[b],34962);const _=m.morphAttributes;for(const b in _){const S=_[b];for(let C=0,x=S.length;C<x;C++)e.update(S[C],34962)}}function u(m){const v=[],_=m.index,b=m.attributes.position;let S=0;if(_!==null){const y=_.array;S=_.version;for(let z=0,L=y.length;z<L;z+=3){const O=y[z+0],f=y[z+1],W=y[z+2];v.push(O,f,f,W,W,O)}}else{const y=b.array;S=b.version;for(let z=0,L=y.length/3-1;z<L;z+=3){const O=z+0,f=z+1,W=z+2;v.push(O,f,f,W,W,O)}}const C=new(jc(v)?ou:su)(v,1);C.version=S;const x=s.get(m);x&&e.remove(x),s.set(m,C)}function p(m){const v=s.get(m);if(v){const _=m.index;_!==null&&v.version<_.version&&u(m)}else u(m);return s.get(m)}return{get:l,update:h,getWireframeAttribute:p}}function $g(r,e,t,n){const i=n.isWebGL2;let s;function a(v){s=v}let l,h;function u(v){l=v.type,h=v.bytesPerElement}function p(v,_){r.drawElements(s,_,l,v*h),t.update(_,s,1)}function m(v,_,b){if(b===0)return;let S,C;if(i)S=r,C="drawElementsInstanced";else if(S=e.get("ANGLE_instanced_arrays"),C="drawElementsInstancedANGLE",S===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}S[C](s,_,l,v*h,b),t.update(_,s,b)}this.setMode=a,this.setIndex=u,this.render=p,this.renderInstances=m}function Kg(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,l){switch(t.calls++,a){case 4:t.triangles+=l*(s/3);break;case 1:t.lines+=l*(s/2);break;case 3:t.lines+=l*(s-1);break;case 2:t.lines+=l*s;break;case 0:t.points+=l*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}class tl extends Zt{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i},this.magFilter=Yt,this.minFilter=Yt,this.wrapR=Mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}tl.prototype.isDataTexture2DArray=!0;function Qg(r,e){return r[0]-e[0]}function ev(r,e){return Math.abs(e[1])-Math.abs(r[1])}function xu(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function tv(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,a=new B,l=[];for(let u=0;u<8;u++)l[u]=[u,0];function h(u,p,m,v){const _=u.morphTargetInfluences;if(e.isWebGL2===!0){const b=p.morphAttributes.position.length;let S=s.get(p);if(S===void 0||S.count!==b){let k=function(){ge.dispose(),s.delete(p),p.removeEventListener("dispose",k)};S!==void 0&&S.texture.dispose();const y=p.morphAttributes.normal!==void 0,z=p.morphAttributes.position,L=p.morphAttributes.normal||[],O=p.attributes.position.count,f=y===!0?2:1;let W=O*f,ae=1;W>e.maxTextureSize&&(ae=Math.ceil(W/e.maxTextureSize),W=e.maxTextureSize);const Me=new Float32Array(W*ae*4*b),ge=new tl(Me,W,ae,b);ge.format=cn,ge.type=Ni,ge.needsUpdate=!0;const A=f*4;for(let X=0;X<b;X++){const Z=z[X],K=L[X],Y=W*ae*4*X;for(let ce=0;ce<Z.count;ce++){a.fromBufferAttribute(Z,ce),Z.normalized===!0&&xu(a,Z);const ve=ce*A;Me[Y+ve+0]=a.x,Me[Y+ve+1]=a.y,Me[Y+ve+2]=a.z,Me[Y+ve+3]=0,y===!0&&(a.fromBufferAttribute(K,ce),K.normalized===!0&&xu(a,K),Me[Y+ve+4]=a.x,Me[Y+ve+5]=a.y,Me[Y+ve+6]=a.z,Me[Y+ve+7]=0)}}S={count:b,texture:ge,size:new ye(W,ae)},s.set(p,S),p.addEventListener("dispose",k)}let C=0;for(let y=0;y<_.length;y++)C+=_[y];const x=p.morphTargetsRelative?1:1-C;v.getUniforms().setValue(r,"morphTargetBaseInfluence",x),v.getUniforms().setValue(r,"morphTargetInfluences",_),v.getUniforms().setValue(r,"morphTargetsTexture",S.texture,t),v.getUniforms().setValue(r,"morphTargetsTextureSize",S.size)}else{const b=_===void 0?0:_.length;let S=n[p.id];if(S===void 0||S.length!==b){S=[];for(let L=0;L<b;L++)S[L]=[L,0];n[p.id]=S}for(let L=0;L<b;L++){const O=S[L];O[0]=L,O[1]=_[L]}S.sort(ev);for(let L=0;L<8;L++)L<b&&S[L][1]?(l[L][0]=S[L][0],l[L][1]=S[L][1]):(l[L][0]=Number.MAX_SAFE_INTEGER,l[L][1]=0);l.sort(Qg);const C=p.morphAttributes.position,x=p.morphAttributes.normal;let y=0;for(let L=0;L<8;L++){const O=l[L],f=O[0],W=O[1];f!==Number.MAX_SAFE_INTEGER&&W?(C&&p.getAttribute("morphTarget"+L)!==C[f]&&p.setAttribute("morphTarget"+L,C[f]),x&&p.getAttribute("morphNormal"+L)!==x[f]&&p.setAttribute("morphNormal"+L,x[f]),i[L]=W,y+=W):(C&&p.hasAttribute("morphTarget"+L)===!0&&p.deleteAttribute("morphTarget"+L),x&&p.hasAttribute("morphNormal"+L)===!0&&p.deleteAttribute("morphNormal"+L),i[L]=0)}const z=p.morphTargetsRelative?1:1-y;v.getUniforms().setValue(r,"morphTargetBaseInfluence",z),v.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:h}}function nv(r,e,t,n){let i=new WeakMap;function s(h){const u=n.render.frame,p=h.geometry,m=e.get(h,p);return i.get(m)!==u&&(e.update(m),i.set(m,u)),h.isInstancedMesh&&(h.hasEventListener("dispose",l)===!1&&h.addEventListener("dispose",l),t.update(h.instanceMatrix,34962),h.instanceColor!==null&&t.update(h.instanceColor,34962)),m}function a(){i=new WeakMap}function l(h){const u=h.target;u.removeEventListener("dispose",l),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:s,dispose:a}}class _u extends Zt{constructor(e=null,t=1,n=1,i=1){super(null);this.image={data:e,width:t,height:n,depth:i},this.magFilter=Yt,this.minFilter=Yt,this.wrapR=Mn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}_u.prototype.isDataTexture3D=!0;const bu=new Zt,wu=new tl,Mu=new _u,Su=new ao,Tu=[],Eu=[],Au=new Float32Array(16),Cu=new Float32Array(9),Lu=new Float32Array(4);function Mr(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Tu[i];if(s===void 0&&(s=new Float32Array(i),Tu[i]=s),e!==0){n.toArray(s,0);for(let a=1,l=0;a!==e;++a)l+=t,r[a].toArray(s,l)}return s}function un(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function ln(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function po(r,e){let t=Eu[e];t===void 0&&(t=new Int32Array(e),Eu[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function iv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function rv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(un(t,e))return;r.uniform2fv(this.addr,e),ln(t,e)}}function sv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(un(t,e))return;r.uniform3fv(this.addr,e),ln(t,e)}}function ov(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(un(t,e))return;r.uniform4fv(this.addr,e),ln(t,e)}}function av(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),ln(t,e)}else{if(un(t,n))return;Lu.set(n),r.uniformMatrix2fv(this.addr,!1,Lu),ln(t,n)}}function lv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),ln(t,e)}else{if(un(t,n))return;Cu.set(n),r.uniformMatrix3fv(this.addr,!1,Cu),ln(t,n)}}function cv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(un(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),ln(t,e)}else{if(un(t,n))return;Au.set(n),r.uniformMatrix4fv(this.addr,!1,Au),ln(t,n)}}function uv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function hv(r,e){const t=this.cache;un(t,e)||(r.uniform2iv(this.addr,e),ln(t,e))}function fv(r,e){const t=this.cache;un(t,e)||(r.uniform3iv(this.addr,e),ln(t,e))}function dv(r,e){const t=this.cache;un(t,e)||(r.uniform4iv(this.addr,e),ln(t,e))}function pv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function mv(r,e){const t=this.cache;un(t,e)||(r.uniform2uiv(this.addr,e),ln(t,e))}function gv(r,e){const t=this.cache;un(t,e)||(r.uniform3uiv(this.addr,e),ln(t,e))}function vv(r,e){const t=this.cache;un(t,e)||(r.uniform4uiv(this.addr,e),ln(t,e))}function yv(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTexture2D(e||bu,i)}function xv(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Mu,i)}function _v(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTextureCube(e||Su,i)}function bv(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||wu,i)}function wv(r){switch(r){case 5126:return iv;case 35664:return rv;case 35665:return sv;case 35666:return ov;case 35674:return av;case 35675:return lv;case 35676:return cv;case 5124:case 35670:return uv;case 35667:case 35671:return hv;case 35668:case 35672:return fv;case 35669:case 35673:return dv;case 5125:return pv;case 36294:return mv;case 36295:return gv;case 36296:return vv;case 35678:case 36198:case 36298:case 36306:case 35682:return yv;case 35679:case 36299:case 36307:return xv;case 35680:case 36300:case 36308:case 36293:return _v;case 36289:case 36303:case 36311:case 36292:return bv}}function Mv(r,e){r.uniform1fv(this.addr,e)}function Sv(r,e){const t=Mr(e,this.size,2);r.uniform2fv(this.addr,t)}function Tv(r,e){const t=Mr(e,this.size,3);r.uniform3fv(this.addr,t)}function Ev(r,e){const t=Mr(e,this.size,4);r.uniform4fv(this.addr,t)}function Av(r,e){const t=Mr(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function Cv(r,e){const t=Mr(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function Lv(r,e){const t=Mr(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Rv(r,e){r.uniform1iv(this.addr,e)}function Pv(r,e){r.uniform2iv(this.addr,e)}function Dv(r,e){r.uniform3iv(this.addr,e)}function Iv(r,e){r.uniform4iv(this.addr,e)}function Nv(r,e){r.uniform1uiv(this.addr,e)}function Fv(r,e){r.uniform2uiv(this.addr,e)}function Bv(r,e){r.uniform3uiv(this.addr,e)}function Ov(r,e){r.uniform4uiv(this.addr,e)}function zv(r,e,t){const n=e.length,i=po(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTexture2D(e[s]||bu,i[s])}function Uv(r,e,t){const n=e.length,i=po(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Mu,i[s])}function Hv(r,e,t){const n=e.length,i=po(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTextureCube(e[s]||Su,i[s])}function kv(r,e,t){const n=e.length,i=po(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||wu,i[s])}function Vv(r){switch(r){case 5126:return Mv;case 35664:return Sv;case 35665:return Tv;case 35666:return Ev;case 35674:return Av;case 35675:return Cv;case 35676:return Lv;case 5124:case 35670:return Rv;case 35667:case 35671:return Pv;case 35668:case 35672:return Dv;case 35669:case 35673:return Iv;case 5125:return Nv;case 36294:return Fv;case 36295:return Bv;case 36296:return Ov;case 35678:case 36198:case 36298:case 36306:case 35682:return zv;case 35679:case 36299:case 36307:return Uv;case 35680:case 36300:case 36308:case 36293:return Hv;case 36289:case 36303:case 36311:case 36292:return kv}}function Gv(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=wv(e.type)}function Ru(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=Vv(e.type)}Ru.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),ln(e,r)};function Pu(r){this.id=r,this.seq=[],this.map={}}Pu.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const a=n[i];a.setValue(r,e[a.id],t)}};const nl=/(\w+)(\])?(\[|\.)?/g;function Du(r,e){r.seq.push(e),r.map[e.id]=e}function Wv(r,e,t){const n=r.name,i=n.length;for(nl.lastIndex=0;;){const s=nl.exec(n),a=nl.lastIndex;let l=s[1];const h=s[2]==="]",u=s[3];if(h&&(l=l|0),u===void 0||u==="["&&a+2===i){Du(t,u===void 0?new Gv(l,r,e):new Ru(l,r,e));break}else{let m=t.map[l];m===void 0&&(m=new Pu(l),Du(t,m)),t=m}}}function _i(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);Wv(i,s,this)}}_i.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};_i.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};_i.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const a=e[i],l=t[a.id];l.needsUpdate!==!1&&a.setValue(r,l.value,n)}};_i.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function Iu(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let qv=0;function jv(r){const e=r.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function Xv(r){switch(r){case hi:return["Linear","( value )"];case Ft:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Nu(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();return n&&i===""?"":t.toUpperCase()+`

`+i+`

`+jv(r.getShaderSource(e))}function Yv(r,e){const t=Xv(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function Jv(r,e){let t;switch(e){case xd:t="Linear";break;case _d:t="Reinhard";break;case bd:t="OptimizedCineon";break;case wd:t="ACESFilmic";break;case Md:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Zv(r){return[r.extensionDerivatives||r.envMapCubeUV||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(rs).join(`
`)}function $v(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Kv(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let l=1;s.type===35674&&(l=2),s.type===35675&&(l=3),s.type===35676&&(l=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:l}}return t}function rs(r){return r!==""}function Fu(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Bu(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Qv=/^[ \t]*#include +<([\w\d./]+)>/gm;function il(r){return r.replace(Qv,ey)}function ey(r,e){const t=ht[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return il(t)}const ty=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,ny=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ou(r){return r.replace(ny,zu).replace(ty,iy)}function iy(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),zu(r,e,t,n)}function zu(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Uu(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function ry(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===uc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===$f?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===qr&&(e="SHADOWMAP_TYPE_VSM"),e}function sy(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Yr:case Jr:e="ENVMAP_TYPE_CUBE";break;case Os:case ha:e="ENVMAP_TYPE_CUBE_UV";break}return e}function oy(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Jr:case ha:e="ENVMAP_MODE_REFRACTION";break}return e}function ay(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Bs:e="ENVMAP_BLENDING_MULTIPLY";break;case vd:e="ENVMAP_BLENDING_MIX";break;case yd:e="ENVMAP_BLENDING_ADD";break}return e}function ly(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,l=t.fragmentShader;const h=ry(t),u=sy(t),p=oy(t),m=ay(t),v=t.isWebGL2?"":Zv(t),_=$v(s),b=i.createProgram();let S,C,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(S=[_].filter(rs).join(`
`),S.length>0&&(S+=`
`),C=[v,_].filter(rs).join(`
`),C.length>0&&(C+=`
`)):(S=[Uu(t),"#define SHADER_NAME "+t.shaderName,_,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(rs).join(`
`),C=[v,Uu(t),"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+p:"",t.envMap?"#define "+m:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+h:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ci?"#define TONE_MAPPING":"",t.toneMapping!==ci?ht.tonemapping_pars_fragment:"",t.toneMapping!==ci?Jv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.alphaWrite?"":"#define OPAQUE",ht.encodings_pars_fragment,Yv("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(rs).join(`
`)),a=il(a),a=Fu(a,t),a=Bu(a,t),l=il(l),l=Fu(l,t),l=Bu(l,t),a=Ou(a),l=Ou(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,S=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,C=["#define varying in",t.glslVersion===Wc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Wc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+C);const y=x+S+a,z=x+C+l,L=Iu(i,35633,y),O=Iu(i,35632,z);if(i.attachShader(b,L),i.attachShader(b,O),t.index0AttributeName!==void 0?i.bindAttribLocation(b,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b),r.debug.checkShaderErrors){const ae=i.getProgramInfoLog(b).trim(),Me=i.getShaderInfoLog(L).trim(),ge=i.getShaderInfoLog(O).trim();let A=!0,k=!0;if(i.getProgramParameter(b,35714)===!1){A=!1;const X=Nu(i,L,"vertex"),Z=Nu(i,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,35715)+`

Program Info Log: `+ae+`
`+X+`
`+Z)}else ae!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ae):(Me===""||ge==="")&&(k=!1);k&&(this.diagnostics={runnable:A,programLog:ae,vertexShader:{log:Me,prefix:S},fragmentShader:{log:ge,prefix:C}})}i.deleteShader(L),i.deleteShader(O);let f;this.getUniforms=function(){return f===void 0&&(f=new _i(i,b)),f};let W;return this.getAttributes=function(){return W===void 0&&(W=Kv(i,b)),W},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.name=t.shaderName,this.id=qv++,this.cacheKey=e,this.usedTimes=1,this.program=b,this.vertexShader=L,this.fragmentShader=O,this}let cy=0;class uy{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new hy;t.set(e,n)}return t.get(e)}}class hy{constructor(){this.id=cy++,this.usedTimes=0}}function fy(r,e,t,n,i,s,a){const l=new Kc,h=new uy,u=[],p=i.isWebGL2,m=i.logarithmicDepthBuffer,v=i.floatVertexTextures,_=i.maxVertexUniforms,b=i.vertexTextures;let S=i.precision;const C={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(A){const X=A.skeleton.bones;if(v)return 1024;{const K=Math.floor((_-20)/4),Y=Math.min(K,X.length);return Y<X.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+X.length+" bones. This GPU supports "+Y+"."),0):Y}}function y(A,k,X,Z,K){const Y=Z.fog,ce=A.isMeshStandardMaterial?Z.environment:null,ve=(A.isMeshStandardMaterial?t:e).get(A.envMap||ce),Ne=C[A.type],oe=K.isSkinnedMesh?x(K):0;A.precision!==null&&(S=i.getMaxPrecision(A.precision),S!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",S,"instead."));let ue,Le,De,Ue;if(Ne){const Te=Vn[Ne];ue=Te.vertexShader,Le=Te.fragmentShader}else ue=A.vertexShader,Le=A.fragmentShader,h.update(A),De=h.getVertexShaderID(A),Ue=h.getFragmentShaderID(A);const ne=r.getRenderTarget(),pt=A.alphaTest>0,Oe=A.clearcoat>0;return{isWebGL2:p,shaderID:Ne,shaderName:A.type,vertexShader:ue,fragmentShader:Le,defines:A.defines,customVertexShaderID:De,customFragmentShaderID:Ue,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:S,instancing:K.isInstancedMesh===!0,instancingColor:K.isInstancedMesh===!0&&K.instanceColor!==null,supportsVertexTextures:b,outputEncoding:ne===null?r.outputEncoding:ne.isXRRenderTarget===!0?ne.texture.encoding:hi,map:!!A.map,matcap:!!A.matcap,envMap:!!ve,envMapMode:ve&&ve.mapping,envMapCubeUV:!!ve&&(ve.mapping===Os||ve.mapping===ha),lightMap:!!A.lightMap,aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:A.normalMapType===qd,tangentSpaceNormalMap:A.normalMapType===tr,decodeVideoTexture:!!A.map&&A.map.isVideoTexture===!0&&A.map.encoding===Ft,clearcoat:Oe,clearcoatMap:Oe&&!!A.clearcoatMap,clearcoatRoughnessMap:Oe&&!!A.clearcoatRoughnessMap,clearcoatNormalMap:Oe&&!!A.clearcoatNormalMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,specularIntensityMap:!!A.specularIntensityMap,specularColorMap:!!A.specularColorMap,alphaMap:!!A.alphaMap,alphaTest:pt,alphaWrite:A.alphaWrite||A.transparent,gradientMap:!!A.gradientMap,sheen:A.sheen>0,sheenColorMap:!!A.sheenColorMap,sheenRoughnessMap:!!A.sheenRoughnessMap,transmission:A.transmission>0,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:!!A.normalMap&&!!K.geometry&&!!K.geometry.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!K.geometry&&!!K.geometry.attributes.color&&K.geometry.attributes.color.itemSize===4,vertexUvs:!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatMap||!!A.clearcoatRoughnessMap||!!A.clearcoatNormalMap||!!A.displacementMap||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||!!A.sheenColorMap||!!A.sheenRoughnessMap,uvsVertexOnly:!(!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatNormalMap||A.transmission>0||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||A.sheen>0||!!A.sheenColorMap||!!A.sheenRoughnessMap)&&!!A.displacementMap,fog:!!Y,useFog:A.fog,fogExp2:Y&&Y.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:m,skinning:K.isSkinnedMesh===!0&&oe>0,maxBones:oe,useVertexTexture:v,morphTargets:!!K.geometry&&!!K.geometry.morphAttributes.position,morphNormals:!!K.geometry&&!!K.geometry.morphAttributes.normal,morphTargetsCount:!!K.geometry&&!!K.geometry.morphAttributes.position?K.geometry.morphAttributes.position.length:0,numDirLights:k.directional.length,numPointLights:k.point.length,numSpotLights:k.spot.length,numRectAreaLights:k.rectArea.length,numHemiLights:k.hemi.length,numDirLightShadows:k.directionalShadowMap.length,numPointLightShadows:k.pointShadowMap.length,numSpotLightShadows:k.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:r.shadowMap.enabled&&X.length>0,shadowMapType:r.shadowMap.type,toneMapping:A.toneMapped?r.toneMapping:ci,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Yi,flipSided:A.side===Xt,depthPacking:A.depthPacking!==void 0?A.depthPacking:!1,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:p||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function z(A){const k=[];if(A.shaderID?k.push(A.shaderID):(k.push(A.customVertexShaderID),k.push(A.customFragmentShaderID)),A.defines!==void 0)for(const X in A.defines)k.push(X),k.push(A.defines[X]);return A.isRawShaderMaterial===!1&&(L(k,A),O(k,A),k.push(r.outputEncoding)),k.push(A.customProgramCacheKey),k.join()}function L(A,k){A.push(k.precision),A.push(k.outputEncoding),A.push(k.envMapMode),A.push(k.combine),A.push(k.vertexUvs),A.push(k.fogExp2),A.push(k.sizeAttenuation),A.push(k.maxBones),A.push(k.morphTargetsCount),A.push(k.numDirLights),A.push(k.numPointLights),A.push(k.numSpotLights),A.push(k.numHemiLights),A.push(k.numRectAreaLights),A.push(k.numDirLightShadows),A.push(k.numPointLightShadows),A.push(k.numSpotLightShadows),A.push(k.shadowMapType),A.push(k.toneMapping),A.push(k.numClippingPlanes),A.push(k.numClipIntersection),A.push(k.alphaWrite)}function O(A,k){l.disableAll(),k.isWebGL2&&l.enable(0),k.supportsVertexTextures&&l.enable(1),k.instancing&&l.enable(2),k.instancingColor&&l.enable(3),k.map&&l.enable(4),k.matcap&&l.enable(5),k.envMap&&l.enable(6),k.envMapCubeUV&&l.enable(7),k.lightMap&&l.enable(8),k.aoMap&&l.enable(9),k.emissiveMap&&l.enable(10),k.bumpMap&&l.enable(11),k.normalMap&&l.enable(12),k.objectSpaceNormalMap&&l.enable(13),k.tangentSpaceNormalMap&&l.enable(14),k.clearcoat&&l.enable(15),k.clearcoatMap&&l.enable(16),k.clearcoatRoughnessMap&&l.enable(17),k.clearcoatNormalMap&&l.enable(18),k.displacementMap&&l.enable(19),k.specularMap&&l.enable(20),k.roughnessMap&&l.enable(21),k.metalnessMap&&l.enable(22),k.gradientMap&&l.enable(23),k.alphaMap&&l.enable(24),k.alphaTest&&l.enable(25),k.vertexColors&&l.enable(26),k.vertexAlphas&&l.enable(27),k.vertexUvs&&l.enable(28),k.vertexTangents&&l.enable(29),k.uvsVertexOnly&&l.enable(30),k.fog&&l.enable(31),A.push(l.mask),l.disableAll(),k.useFog&&l.enable(0),k.flatShading&&l.enable(1),k.logarithmicDepthBuffer&&l.enable(2),k.skinning&&l.enable(3),k.useVertexTexture&&l.enable(4),k.morphTargets&&l.enable(5),k.morphNormals&&l.enable(6),k.premultipliedAlpha&&l.enable(7),k.shadowMapEnabled&&l.enable(8),k.physicallyCorrectLights&&l.enable(9),k.doubleSided&&l.enable(10),k.flipSided&&l.enable(11),k.depthPacking&&l.enable(12),k.dithering&&l.enable(13),k.specularIntensityMap&&l.enable(14),k.specularColorMap&&l.enable(15),k.transmission&&l.enable(16),k.transmissionMap&&l.enable(17),k.thicknessMap&&l.enable(18),k.sheen&&l.enable(19),k.sheenColorMap&&l.enable(20),k.sheenRoughnessMap&&l.enable(21),k.decodeVideoTexture&&l.enable(22),A.push(l.mask)}function f(A){const k=C[A.type];let X;if(k){const Z=Vn[k];X=lp.clone(Z.uniforms)}else X=A.uniforms;return X}function W(A,k){let X;for(let Z=0,K=u.length;Z<K;Z++){const Y=u[Z];if(Y.cacheKey===k){X=Y,++X.usedTimes;break}}return X===void 0&&(X=new ly(r,k,A,s),u.push(X)),X}function ae(A){if(--A.usedTimes==0){const k=u.indexOf(A);u[k]=u[u.length-1],u.pop(),A.destroy()}}function Me(A){h.remove(A)}function ge(){h.dispose()}return{getParameters:y,getProgramCacheKey:z,getUniforms:f,acquireProgram:W,releaseProgram:ae,releaseShaderCache:Me,programs:u,dispose:ge}}function dy(){let r=new WeakMap;function e(s){let a=r.get(s);return a===void 0&&(a={},r.set(s,a)),a}function t(s){r.delete(s)}function n(s,a,l){r.get(s)[a]=l}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function py(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Hu(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function ku(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(m,v,_,b,S,C){let x=r[e];return x===void 0?(x={id:m.id,object:m,geometry:v,material:_,groupOrder:b,renderOrder:m.renderOrder,z:S,group:C},r[e]=x):(x.id=m.id,x.object=m,x.geometry=v,x.material=_,x.groupOrder=b,x.renderOrder=m.renderOrder,x.z=S,x.group=C),e++,x}function l(m,v,_,b,S,C){const x=a(m,v,_,b,S,C);_.transmission>0?n.push(x):_.transparent===!0?i.push(x):t.push(x)}function h(m,v,_,b,S,C){const x=a(m,v,_,b,S,C);_.transmission>0?n.unshift(x):_.transparent===!0?i.unshift(x):t.unshift(x)}function u(m,v){t.length>1&&t.sort(m||py),n.length>1&&n.sort(v||Hu),i.length>1&&i.sort(v||Hu)}function p(){for(let m=e,v=r.length;m<v;m++){const _=r[m];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:l,unshift:h,finish:p,sort:u}}function my(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new ku,r.set(n,[s])):i>=r.get(n).length?(s=new ku,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function gy(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new We};break;case"SpotLight":t={position:new B,direction:new B,color:new We,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new We,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new We,groundColor:new We};break;case"RectAreaLight":t={color:new We,position:new B,halfWidth:new B,halfHeight:new B};break}return r[e.id]=t,t}}}function vy(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ye};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ye};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ye,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let yy=0;function xy(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function _y(r,e){const t=new gy,n=vy(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let p=0;p<9;p++)i.probe.push(new B);const s=new B,a=new Ke,l=new Ke;function h(p,m){let v=0,_=0,b=0;for(let Me=0;Me<9;Me++)i.probe[Me].set(0,0,0);let S=0,C=0,x=0,y=0,z=0,L=0,O=0,f=0;p.sort(xy);const W=m!==!0?Math.PI:1;for(let Me=0,ge=p.length;Me<ge;Me++){const A=p[Me],k=A.color,X=A.intensity,Z=A.distance,K=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)v+=k.r*X*W,_+=k.g*X*W,b+=k.b*X*W;else if(A.isLightProbe)for(let Y=0;Y<9;Y++)i.probe[Y].addScaledVector(A.sh.coefficients[Y],X);else if(A.isDirectionalLight){const Y=t.get(A);if(Y.color.copy(A.color).multiplyScalar(A.intensity*W),A.castShadow){const ce=A.shadow,ve=n.get(A);ve.shadowBias=ce.bias,ve.shadowNormalBias=ce.normalBias,ve.shadowRadius=ce.radius,ve.shadowMapSize=ce.mapSize,i.directionalShadow[S]=ve,i.directionalShadowMap[S]=K,i.directionalShadowMatrix[S]=A.shadow.matrix,L++}i.directional[S]=Y,S++}else if(A.isSpotLight){const Y=t.get(A);if(Y.position.setFromMatrixPosition(A.matrixWorld),Y.color.copy(k).multiplyScalar(X*W),Y.distance=Z,Y.coneCos=Math.cos(A.angle),Y.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),Y.decay=A.decay,A.castShadow){const ce=A.shadow,ve=n.get(A);ve.shadowBias=ce.bias,ve.shadowNormalBias=ce.normalBias,ve.shadowRadius=ce.radius,ve.shadowMapSize=ce.mapSize,i.spotShadow[x]=ve,i.spotShadowMap[x]=K,i.spotShadowMatrix[x]=A.shadow.matrix,f++}i.spot[x]=Y,x++}else if(A.isRectAreaLight){const Y=t.get(A);Y.color.copy(k).multiplyScalar(X),Y.halfWidth.set(A.width*.5,0,0),Y.halfHeight.set(0,A.height*.5,0),i.rectArea[y]=Y,y++}else if(A.isPointLight){const Y=t.get(A);if(Y.color.copy(A.color).multiplyScalar(A.intensity*W),Y.distance=A.distance,Y.decay=A.decay,A.castShadow){const ce=A.shadow,ve=n.get(A);ve.shadowBias=ce.bias,ve.shadowNormalBias=ce.normalBias,ve.shadowRadius=ce.radius,ve.shadowMapSize=ce.mapSize,ve.shadowCameraNear=ce.camera.near,ve.shadowCameraFar=ce.camera.far,i.pointShadow[C]=ve,i.pointShadowMap[C]=K,i.pointShadowMatrix[C]=A.shadow.matrix,O++}i.point[C]=Y,C++}else if(A.isHemisphereLight){const Y=t.get(A);Y.skyColor.copy(A.color).multiplyScalar(X*W),Y.groundColor.copy(A.groundColor).multiplyScalar(X*W),i.hemi[z]=Y,z++}}y>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_FLOAT_1,i.rectAreaLTC2=Se.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Se.LTC_HALF_1,i.rectAreaLTC2=Se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=v,i.ambient[1]=_,i.ambient[2]=b;const ae=i.hash;(ae.directionalLength!==S||ae.pointLength!==C||ae.spotLength!==x||ae.rectAreaLength!==y||ae.hemiLength!==z||ae.numDirectionalShadows!==L||ae.numPointShadows!==O||ae.numSpotShadows!==f)&&(i.directional.length=S,i.spot.length=x,i.rectArea.length=y,i.point.length=C,i.hemi.length=z,i.directionalShadow.length=L,i.directionalShadowMap.length=L,i.pointShadow.length=O,i.pointShadowMap.length=O,i.spotShadow.length=f,i.spotShadowMap.length=f,i.directionalShadowMatrix.length=L,i.pointShadowMatrix.length=O,i.spotShadowMatrix.length=f,ae.directionalLength=S,ae.pointLength=C,ae.spotLength=x,ae.rectAreaLength=y,ae.hemiLength=z,ae.numDirectionalShadows=L,ae.numPointShadows=O,ae.numSpotShadows=f,i.version=yy++)}function u(p,m){let v=0,_=0,b=0,S=0,C=0;const x=m.matrixWorldInverse;for(let y=0,z=p.length;y<z;y++){const L=p[y];if(L.isDirectionalLight){const O=i.directional[v];O.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),O.direction.sub(s),O.direction.transformDirection(x),v++}else if(L.isSpotLight){const O=i.spot[b];O.position.setFromMatrixPosition(L.matrixWorld),O.position.applyMatrix4(x),O.direction.setFromMatrixPosition(L.matrixWorld),s.setFromMatrixPosition(L.target.matrixWorld),O.direction.sub(s),O.direction.transformDirection(x),b++}else if(L.isRectAreaLight){const O=i.rectArea[S];O.position.setFromMatrixPosition(L.matrixWorld),O.position.applyMatrix4(x),l.identity(),a.copy(L.matrixWorld),a.premultiply(x),l.extractRotation(a),O.halfWidth.set(L.width*.5,0,0),O.halfHeight.set(0,L.height*.5,0),O.halfWidth.applyMatrix4(l),O.halfHeight.applyMatrix4(l),S++}else if(L.isPointLight){const O=i.point[_];O.position.setFromMatrixPosition(L.matrixWorld),O.position.applyMatrix4(x),_++}else if(L.isHemisphereLight){const O=i.hemi[C];O.direction.setFromMatrixPosition(L.matrixWorld),O.direction.transformDirection(x),O.direction.normalize(),C++}}}return{setup:h,setupView:u,state:i}}function Vu(r,e){const t=new _y(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function a(m){n.push(m)}function l(m){i.push(m)}function h(m){t.setup(n,m)}function u(m){t.setupView(n,m)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:h,setupLightsView:u,pushLight:a,pushShadow:l}}function by(r,e){let t=new WeakMap;function n(s,a=0){let l;return t.has(s)===!1?(l=new Vu(r,e),t.set(s,[l])):a>=t.get(s).length?(l=new Vu(r,e),t.get(s).push(l)):l=t.get(s)[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class Gu extends on{constructor(e){super();this.type="MeshDepthMaterial",this.depthPacking=Gd,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Gu.prototype.isMeshDepthMaterial=!0;class Wu extends on{constructor(e){super();this.type="MeshDistanceMaterial",this.referencePosition=new B,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Wu.prototype.isMeshDistanceMaterial=!0;const wy=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,My=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function qu(r,e,t){let n=new co;const i=new ye,s=new ye,a=new Ct,l=new Gu({depthPacking:Wd}),h=new Wu,u={},p=t.maxTextureSize,m={0:Xt,1:jr,2:Yi},v=new ki({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ye},radius:{value:4}},vertexShader:wy,fragmentShader:My}),_=v.clone();_.defines.HORIZONTAL_PASS=1;const b=new Bt;b.setAttribute("position",new Jt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new mn(b,v),C=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=uc,this.render=function(L,O,f){if(C.enabled===!1||C.autoUpdate===!1&&C.needsUpdate===!1||L.length===0)return;const W=r.getRenderTarget(),ae=r.getActiveCubeFace(),Me=r.getActiveMipmapLevel(),ge=r.state;ge.setBlending(li),ge.buffers.color.setClear(1,1,1,1),ge.buffers.depth.setTest(!0),ge.setScissorTest(!1);for(let A=0,k=L.length;A<k;A++){const X=L[A],Z=X.shadow;if(Z===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(Z.autoUpdate===!1&&Z.needsUpdate===!1)continue;i.copy(Z.mapSize);const K=Z.getFrameExtents();if(i.multiply(K),s.copy(Z.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(s.x=Math.floor(p/K.x),i.x=s.x*K.x,Z.mapSize.x=s.x),i.y>p&&(s.y=Math.floor(p/K.y),i.y=s.y*K.y,Z.mapSize.y=s.y)),Z.map===null&&!Z.isPointLightShadow&&this.type===qr){const ce={minFilter:sn,magFilter:sn,format:cn};Z.map=new Ln(i.x,i.y,ce),Z.map.texture.name=X.name+".shadowMap",Z.mapPass=new Ln(i.x,i.y,ce),Z.camera.updateProjectionMatrix()}if(Z.map===null){const ce={minFilter:Yt,magFilter:Yt,format:cn};Z.map=new Ln(i.x,i.y,ce),Z.map.texture.name=X.name+".shadowMap",Z.camera.updateProjectionMatrix()}r.setRenderTarget(Z.map),r.clear();const Y=Z.getViewportCount();for(let ce=0;ce<Y;ce++){const ve=Z.getViewport(ce);a.set(s.x*ve.x,s.y*ve.y,s.x*ve.z,s.y*ve.w),ge.viewport(a),Z.updateMatrices(X,ce),n=Z.getFrustum(),z(O,f,Z.camera,X,this.type)}!Z.isPointLightShadow&&this.type===qr&&x(Z,f),Z.needsUpdate=!1}C.needsUpdate=!1,r.setRenderTarget(W,ae,Me)};function x(L,O){const f=e.update(S);v.defines.VSM_SAMPLES!==L.blurSamples&&(v.defines.VSM_SAMPLES=L.blurSamples,_.defines.VSM_SAMPLES=L.blurSamples,v.needsUpdate=!0,_.needsUpdate=!0),v.uniforms.shadow_pass.value=L.map.texture,v.uniforms.resolution.value=L.mapSize,v.uniforms.radius.value=L.radius,r.setRenderTarget(L.mapPass),r.clear(),r.renderBufferDirect(O,null,f,v,S,null),_.uniforms.shadow_pass.value=L.mapPass.texture,_.uniforms.resolution.value=L.mapSize,_.uniforms.radius.value=L.radius,r.setRenderTarget(L.map),r.clear(),r.renderBufferDirect(O,null,f,_,S,null)}function y(L,O,f,W,ae,Me,ge){let A=null;const k=W.isPointLight===!0?L.customDistanceMaterial:L.customDepthMaterial;if(k!==void 0?A=k:A=W.isPointLight===!0?h:l,r.localClippingEnabled&&f.clipShadows===!0&&f.clippingPlanes.length!==0||f.displacementMap&&f.displacementScale!==0||f.alphaMap&&f.alphaTest>0){const X=A.uuid,Z=f.uuid;let K=u[X];K===void 0&&(K={},u[X]=K);let Y=K[Z];Y===void 0&&(Y=A.clone(),K[Z]=Y),A=Y}return A.visible=f.visible,A.wireframe=f.wireframe,ge===qr?A.side=f.shadowSide!==null?f.shadowSide:f.side:A.side=f.shadowSide!==null?f.shadowSide:m[f.side],A.alphaMap=f.alphaMap,A.alphaTest=f.alphaTest,A.clipShadows=f.clipShadows,A.clippingPlanes=f.clippingPlanes,A.clipIntersection=f.clipIntersection,A.displacementMap=f.displacementMap,A.displacementScale=f.displacementScale,A.displacementBias=f.displacementBias,A.wireframeLinewidth=f.wireframeLinewidth,A.linewidth=f.linewidth,W.isPointLight===!0&&A.isMeshDistanceMaterial===!0&&(A.referencePosition.setFromMatrixPosition(W.matrixWorld),A.nearDistance=ae,A.farDistance=Me),A}function z(L,O,f,W,ae){if(L.visible===!1)return;if(L.layers.test(O.layers)&&(L.isMesh||L.isLine||L.isPoints)&&(L.castShadow||L.receiveShadow&&ae===qr)&&(!L.frustumCulled||n.intersectsObject(L))){L.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,L.matrixWorld);const A=e.update(L),k=L.material;if(Array.isArray(k)){const X=A.groups;for(let Z=0,K=X.length;Z<K;Z++){const Y=X[Z],ce=k[Y.materialIndex];if(ce&&ce.visible){const ve=y(L,A,ce,W,f.near,f.far,ae);r.renderBufferDirect(f,null,A,ve,L,Y)}}}else if(k.visible){const X=y(L,A,k,W,f.near,f.far,ae);r.renderBufferDirect(f,null,A,X,L,null)}}const ge=L.children;for(let A=0,k=ge.length;A<k;A++)z(ge[A],O,f,W,ae)}}function Sy(r,e,t){const n=t.isWebGL2;function i(){let H=!1;const Be=new Ct;let Pe=null;const ze=new Ct(0,0,0,0);return{setMask:function(te){Pe!==te&&!H&&(r.colorMask(te,te,te,te),Pe=te)},setLocked:function(te){H=te},setClear:function(te,qe,ut,Lt,nn){nn===!0&&(te*=Lt,qe*=Lt,ut*=Lt),Be.set(te,qe,ut,Lt),ze.equals(Be)===!1&&(r.clearColor(te,qe,ut,Lt),ze.copy(Be))},reset:function(){H=!1,Pe=null,ze.set(-1,0,0,0)}}}function s(){let H=!1,Be=null,Pe=null,ze=null;return{setTest:function(te){te?ne(2929):pt(2929)},setMask:function(te){Be!==te&&!H&&(r.depthMask(te),Be=te)},setFunc:function(te){if(Pe!==te){if(te)switch(te){case ud:r.depthFunc(512);break;case hd:r.depthFunc(519);break;case fd:r.depthFunc(513);break;case la:r.depthFunc(515);break;case dd:r.depthFunc(514);break;case pd:r.depthFunc(518);break;case md:r.depthFunc(516);break;case gd:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);Pe=te}},setLocked:function(te){H=te},setClear:function(te){ze!==te&&(r.clearDepth(te),ze=te)},reset:function(){H=!1,Be=null,Pe=null,ze=null}}}function a(){let H=!1,Be=null,Pe=null,ze=null,te=null,qe=null,ut=null,Lt=null,nn=null;return{setTest:function(_t){H||(_t?ne(2960):pt(2960))},setMask:function(_t){Be!==_t&&!H&&(r.stencilMask(_t),Be=_t)},setFunc:function(_t,Qt,Dn){(Pe!==_t||ze!==Qt||te!==Dn)&&(r.stencilFunc(_t,Qt,Dn),Pe=_t,ze=Qt,te=Dn)},setOp:function(_t,Qt,Dn){(qe!==_t||ut!==Qt||Lt!==Dn)&&(r.stencilOp(_t,Qt,Dn),qe=_t,ut=Qt,Lt=Dn)},setLocked:function(_t){H=_t},setClear:function(_t){nn!==_t&&(r.clearStencil(_t),nn=_t)},reset:function(){H=!1,Be=null,Pe=null,ze=null,te=null,qe=null,ut=null,Lt=null,nn=null}}}const l=new i,h=new s,u=new a;let p={},m={},v=new WeakMap,_=[],b=null,S=!1,C=null,x=null,y=null,z=null,L=null,O=null,f=null,W=!1,ae=null,Me=null,ge=null,A=null,k=null;const X=r.getParameter(35661);let Z=!1,K=0;const Y=r.getParameter(7938);Y.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(Y)[1]),Z=K>=1):Y.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),Z=K>=2);let ce=null,ve={};const Ne=r.getParameter(3088),oe=r.getParameter(2978),ue=new Ct().fromArray(Ne),Le=new Ct().fromArray(oe);function De(H,Be,Pe){const ze=new Uint8Array(4),te=r.createTexture();r.bindTexture(H,te),r.texParameteri(H,10241,9728),r.texParameteri(H,10240,9728);for(let qe=0;qe<Pe;qe++)r.texImage2D(Be+qe,0,6408,1,1,0,6408,5121,ze);return te}const Ue={};Ue[3553]=De(3553,3553,1),Ue[34067]=De(34067,34069,6),l.setClear(0,0,0,1),h.setClear(1),u.setClear(0),ne(2929),h.setFunc(la),_e(!1),Re(cc),ne(2884),de(li);function ne(H){p[H]!==!0&&(r.enable(H),p[H]=!0)}function pt(H){p[H]!==!1&&(r.disable(H),p[H]=!1)}function Oe(H,Be){return m[H]!==Be?(r.bindFramebuffer(H,Be),m[H]=Be,n&&(H===36009&&(m[36160]=Be),H===36160&&(m[36009]=Be)),!0):!1}function Xe(H,Be){let Pe=_,ze=!1;if(H)if(Pe=v.get(Be),Pe===void 0&&(Pe=[],v.set(Be,Pe)),H.isWebGLMultipleRenderTargets){const te=H.texture;if(Pe.length!==te.length||Pe[0]!==36064){for(let qe=0,ut=te.length;qe<ut;qe++)Pe[qe]=36064+qe;Pe.length=te.length,ze=!0}}else Pe[0]!==36064&&(Pe[0]=36064,ze=!0);else Pe[0]!==1029&&(Pe[0]=1029,ze=!0);ze&&(t.isWebGL2?r.drawBuffers(Pe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Pe))}function Te(H){return b!==H?(r.useProgram(H),b=H,!0):!1}const at={[Ji]:32774,[Qf]:32778,[ed]:32779};if(n)at[mc]=32775,at[gc]=32776;else{const H=e.get("EXT_blend_minmax");H!==null&&(at[mc]=H.MIN_EXT,at[gc]=H.MAX_EXT)}const Qe={[td]:0,[nd]:1,[id]:768,[vc]:770,[cd]:776,[ad]:774,[sd]:772,[rd]:769,[yc]:771,[ld]:775,[od]:773};function de(H,Be,Pe,ze,te,qe,ut,Lt){if(H===li){S===!0&&(pt(3042),S=!1);return}if(S===!1&&(ne(3042),S=!0),H!==Kf){if(H!==C||Lt!==W){if((x!==Ji||L!==Ji)&&(r.blendEquation(32774),x=Ji,L=Ji),Lt)switch(H){case Xr:r.blendFuncSeparate(1,771,1,771);break;case fc:r.blendFunc(1,1);break;case dc:r.blendFuncSeparate(0,769,0,1);break;case pc:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case Xr:r.blendFuncSeparate(770,771,1,771);break;case fc:r.blendFunc(770,1);break;case dc:r.blendFuncSeparate(0,769,0,1);break;case pc:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}y=null,z=null,O=null,f=null,C=H,W=Lt}return}te=te||Be,qe=qe||Pe,ut=ut||ze,(Be!==x||te!==L)&&(r.blendEquationSeparate(at[Be],at[te]),x=Be,L=te),(Pe!==y||ze!==z||qe!==O||ut!==f)&&(r.blendFuncSeparate(Qe[Pe],Qe[ze],Qe[qe],Qe[ut]),y=Pe,z=ze,O=qe,f=ut),C=H,W=null}function xe(H,Be){H.side===Yi?pt(2884):ne(2884);let Pe=H.side===Xt;Be&&(Pe=!Pe),_e(Pe),H.blending===Xr&&H.transparent===!1?de(li):de(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),h.setFunc(H.depthFunc),h.setTest(H.depthTest),h.setMask(H.depthWrite),l.setMask(H.colorWrite);const ze=H.stencilWrite;u.setTest(ze),ze&&(u.setMask(H.stencilWriteMask),u.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),u.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),Fe(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?ne(32926):pt(32926)}function _e(H){ae!==H&&(H?r.frontFace(2304):r.frontFace(2305),ae=H)}function Re(H){H!==Jf?(ne(2884),H!==Me&&(H===cc?r.cullFace(1029):H===Zf?r.cullFace(1028):r.cullFace(1032))):pt(2884),Me=H}function se(H){H!==ge&&(Z&&r.lineWidth(H),ge=H)}function Fe(H,Be,Pe){H?(ne(32823),(A!==Be||k!==Pe)&&(r.polygonOffset(Be,Pe),A=Be,k=Pe)):pt(32823)}function et(H){H?ne(3089):pt(3089)}function ft(H){H===void 0&&(H=33984+X-1),ce!==H&&(r.activeTexture(H),ce=H)}function Mt(H,Be){ce===null&&ft();let Pe=ve[ce];Pe===void 0&&(Pe={type:void 0,texture:void 0},ve[ce]=Pe),(Pe.type!==H||Pe.texture!==Be)&&(r.bindTexture(H,Be||Ue[H]),Pe.type=H,Pe.texture=Be)}function vt(){const H=ve[ce];H!==void 0&&H.type!==void 0&&(r.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function D(){try{r.compressedTexImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function R(){try{r.texSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ie(){try{r.texSubImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function be(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ie(){try{r.texStorage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function le(){try{r.texStorage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ke(){try{r.texImage2D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function He(){try{r.texImage3D.apply(r,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ae(H){ue.equals(H)===!1&&(r.scissor(H.x,H.y,H.z,H.w),ue.copy(H))}function Ce(H){Le.equals(H)===!1&&(r.viewport(H.x,H.y,H.z,H.w),Le.copy(H))}function Ze(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),p={},ce=null,ve={},m={},v=new WeakMap,_=[],b=null,S=!1,C=null,x=null,y=null,z=null,L=null,O=null,f=null,W=!1,ae=null,Me=null,ge=null,A=null,k=null,ue.set(0,0,r.canvas.width,r.canvas.height),Le.set(0,0,r.canvas.width,r.canvas.height),l.reset(),h.reset(),u.reset()}return{buffers:{color:l,depth:h,stencil:u},enable:ne,disable:pt,bindFramebuffer:Oe,drawBuffers:Xe,useProgram:Te,setBlending:de,setMaterial:xe,setFlipSided:_e,setCullFace:Re,setLineWidth:se,setPolygonOffset:Fe,setScissorTest:et,activeTexture:ft,bindTexture:Mt,unbindTexture:vt,compressedTexImage2D:D,texImage2D:ke,texImage3D:He,texStorage2D:Ie,texStorage3D:le,texSubImage2D:R,texSubImage3D:ie,compressedTexSubImage2D:be,scissor:Ae,viewport:Ce,reset:Ze}}function Ty(r,e,t,n,i,s,a){const l=i.isWebGL2,h=i.maxTextures,u=i.maxCubemapSize,p=i.maxTextureSize,m=i.maxSamples,_=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,b=new WeakMap;let S,C=!1;try{C=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(D,R){return C?new OffscreenCanvas(D,R):Kr("canvas")}function y(D,R,ie,be){let Ie=1;if((D.width>be||D.height>be)&&(Ie=be/Math.max(D.width,D.height)),Ie<1||R===!0)if(typeof HTMLImageElement!="undefined"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&D instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&D instanceof ImageBitmap){const le=R?Yd:Math.floor,ke=le(Ie*D.width),He=le(Ie*D.height);S===void 0&&(S=x(ke,He));const Ae=ie?x(ke,He):S;return Ae.width=ke,Ae.height=He,Ae.getContext("2d").drawImage(D,0,0,ke,He),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+ke+"x"+He+")."),Ae}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function z(D){return qc(D.width)&&qc(D.height)}function L(D){return l?!1:D.wrapS!==Mn||D.wrapT!==Mn||D.minFilter!==Yt&&D.minFilter!==sn}function O(D,R){return D.generateMipmaps&&R&&D.minFilter!==Yt&&D.minFilter!==sn}function f(D){r.generateMipmap(D)}function W(D,R,ie,be,Ie=!1){if(l===!1)return R;if(D!==null){if(r[D]!==void 0)return r[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let le=R;return R===6403&&(ie===5126&&(le=33326),ie===5131&&(le=33325),ie===5121&&(le=33321)),R===33319&&(ie===5126&&(le=33328),ie===5131&&(le=33327),ie===5121&&(le=33323)),R===6408&&(ie===5126&&(le=34836),ie===5131&&(le=34842),ie===5121&&(le=be===Ft&&Ie===!1?35907:32856),ie===32819&&(le=32854),ie===32820&&(le=32855)),(le===33325||le===33326||le===33327||le===33328||le===34842||le===34836)&&e.get("EXT_color_buffer_float"),le}function ae(D,R,ie){return O(D,ie)===!0||D.isFramebufferTexture&&D.minFilter!==Yt&&D.minFilter!==sn?Math.log2(Math.max(R.width,R.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?R.mipmaps.length:1}function Me(D){return D===Yt||D===_c||D===bc?9728:9729}function ge(D){const R=D.target;R.removeEventListener("dispose",ge),k(R),R.isVideoTexture&&b.delete(R),a.memory.textures--}function A(D){const R=D.target;R.removeEventListener("dispose",A),X(R)}function k(D){const R=n.get(D);R.__webglInit!==void 0&&(r.deleteTexture(R.__webglTexture),n.remove(D))}function X(D){const R=D.texture,ie=n.get(D),be=n.get(R);if(!!D){if(be.__webglTexture!==void 0&&(r.deleteTexture(be.__webglTexture),a.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let Ie=0;Ie<6;Ie++)r.deleteFramebuffer(ie.__webglFramebuffer[Ie]),ie.__webglDepthbuffer&&r.deleteRenderbuffer(ie.__webglDepthbuffer[Ie]);else r.deleteFramebuffer(ie.__webglFramebuffer),ie.__webglDepthbuffer&&r.deleteRenderbuffer(ie.__webglDepthbuffer),ie.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ie.__webglMultisampledFramebuffer),ie.__webglColorRenderbuffer&&r.deleteRenderbuffer(ie.__webglColorRenderbuffer),ie.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ie.__webglDepthRenderbuffer);if(D.isWebGLMultipleRenderTargets)for(let Ie=0,le=R.length;Ie<le;Ie++){const ke=n.get(R[Ie]);ke.__webglTexture&&(r.deleteTexture(ke.__webglTexture),a.memory.textures--),n.remove(R[Ie])}n.remove(R),n.remove(D)}}let Z=0;function K(){Z=0}function Y(){const D=Z;return D>=h&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+h),Z+=1,D}function ce(D,R){const ie=n.get(D);if(D.isVideoTexture&&se(D),D.version>0&&ie.__version!==D.version){const be=D.image;if(be===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(be.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ne(ie,D,R);return}}t.activeTexture(33984+R),t.bindTexture(3553,ie.__webglTexture)}function ve(D,R){const ie=n.get(D);if(D.version>0&&ie.__version!==D.version){ne(ie,D,R);return}t.activeTexture(33984+R),t.bindTexture(35866,ie.__webglTexture)}function Ne(D,R){const ie=n.get(D);if(D.version>0&&ie.__version!==D.version){ne(ie,D,R);return}t.activeTexture(33984+R),t.bindTexture(32879,ie.__webglTexture)}function oe(D,R){const ie=n.get(D);if(D.version>0&&ie.__version!==D.version){pt(ie,D,R);return}t.activeTexture(33984+R),t.bindTexture(34067,ie.__webglTexture)}const ue={[fa]:10497,[Mn]:33071,[da]:33648},Le={[Yt]:9728,[_c]:9984,[bc]:9986,[sn]:9729,[Sd]:9985,[zs]:9987};function De(D,R,ie){if(ie?(r.texParameteri(D,10242,ue[R.wrapS]),r.texParameteri(D,10243,ue[R.wrapT]),(D===32879||D===35866)&&r.texParameteri(D,32882,ue[R.wrapR]),r.texParameteri(D,10240,Le[R.magFilter]),r.texParameteri(D,10241,Le[R.minFilter])):(r.texParameteri(D,10242,33071),r.texParameteri(D,10243,33071),(D===32879||D===35866)&&r.texParameteri(D,32882,33071),(R.wrapS!==Mn||R.wrapT!==Mn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(D,10240,Me(R.magFilter)),r.texParameteri(D,10241,Me(R.minFilter)),R.minFilter!==Yt&&R.minFilter!==sn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const be=e.get("EXT_texture_filter_anisotropic");if(R.type===Ni&&e.has("OES_texture_float_linear")===!1||l===!1&&R.type===Zi&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(r.texParameterf(D,be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function Ue(D,R){D.__webglInit===void 0&&(D.__webglInit=!0,R.addEventListener("dispose",ge),D.__webglTexture=r.createTexture(),a.memory.textures++)}function ne(D,R,ie){let be=3553;R.isDataTexture2DArray&&(be=35866),R.isDataTexture3D&&(be=32879),Ue(D,R),t.activeTexture(33984+ie),t.bindTexture(be,D.__webglTexture),r.pixelStorei(37440,R.flipY),r.pixelStorei(37441,R.premultiplyAlpha),r.pixelStorei(3317,R.unpackAlignment),r.pixelStorei(37443,0);const Ie=L(R)&&z(R.image)===!1;let le=y(R.image,Ie,!1,p);le=Fe(R,le);const ke=z(le)||l,He=s.convert(R.format,R.encoding);let Ae=s.convert(R.type),Ce=W(R.internalFormat,He,Ae,R.encoding,R.isVideoTexture);De(be,R,ke);let Ze;const H=R.mipmaps,Be=l&&R.isVideoTexture!==!0,Pe=D.__version===void 0,ze=ae(R,le,ke);if(R.isDepthTexture)Ce=6402,l?R.type===Ni?Ce=36012:R.type===Us?Ce=33190:R.type===$i?Ce=35056:Ce=33189:R.type===Ni&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===Fi&&Ce===6402&&R.type!==Zr&&R.type!==Us&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=Zr,Ae=s.convert(R.type)),R.format===Ki&&Ce===6402&&(Ce=34041,R.type!==$i&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=$i,Ae=s.convert(R.type))),Be&&Pe?t.texStorage2D(3553,1,Ce,le.width,le.height):t.texImage2D(3553,0,Ce,le.width,le.height,0,He,Ae,null);else if(R.isDataTexture)if(H.length>0&&ke){Be&&Pe&&t.texStorage2D(3553,ze,Ce,H[0].width,H[0].height);for(let te=0,qe=H.length;te<qe;te++)Ze=H[te],Be?t.texSubImage2D(3553,0,0,0,Ze.width,Ze.height,He,Ae,Ze.data):t.texImage2D(3553,te,Ce,Ze.width,Ze.height,0,He,Ae,Ze.data);R.generateMipmaps=!1}else Be?(Pe&&t.texStorage2D(3553,ze,Ce,le.width,le.height),t.texSubImage2D(3553,0,0,0,le.width,le.height,He,Ae,le.data)):t.texImage2D(3553,0,Ce,le.width,le.height,0,He,Ae,le.data);else if(R.isCompressedTexture){Be&&Pe&&t.texStorage2D(3553,ze,Ce,H[0].width,H[0].height);for(let te=0,qe=H.length;te<qe;te++)Ze=H[te],R.format!==cn?He!==null?Be?t.compressedTexSubImage2D(3553,te,0,0,Ze.width,Ze.height,He,Ze.data):t.compressedTexImage2D(3553,te,Ce,Ze.width,Ze.height,0,Ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Be?t.texSubImage2D(3553,te,0,0,Ze.width,Ze.height,He,Ae,Ze.data):t.texImage2D(3553,te,Ce,Ze.width,Ze.height,0,He,Ae,Ze.data)}else if(R.isDataTexture2DArray)Be?(Pe&&t.texStorage3D(35866,ze,Ce,le.width,le.height,le.depth),t.texSubImage3D(35866,0,0,0,0,le.width,le.height,le.depth,He,Ae,le.data)):t.texImage3D(35866,0,Ce,le.width,le.height,le.depth,0,He,Ae,le.data);else if(R.isDataTexture3D)Be?(Pe&&t.texStorage3D(32879,ze,Ce,le.width,le.height,le.depth),t.texSubImage3D(32879,0,0,0,0,le.width,le.height,le.depth,He,Ae,le.data)):t.texImage3D(32879,0,Ce,le.width,le.height,le.depth,0,He,Ae,le.data);else if(R.isFramebufferTexture)Be&&Pe?t.texStorage2D(3553,ze,Ce,le.width,le.height):t.texImage2D(3553,0,Ce,le.width,le.height,0,He,Ae,null);else if(H.length>0&&ke){Be&&Pe&&t.texStorage2D(3553,ze,Ce,H[0].width,H[0].height);for(let te=0,qe=H.length;te<qe;te++)Ze=H[te],Be?t.texSubImage2D(3553,te,0,0,He,Ae,Ze):t.texImage2D(3553,te,Ce,He,Ae,Ze);R.generateMipmaps=!1}else Be?(Pe&&t.texStorage2D(3553,ze,Ce,le.width,le.height),t.texSubImage2D(3553,0,0,0,He,Ae,le)):t.texImage2D(3553,0,Ce,He,Ae,le);O(R,ke)&&f(be),D.__version=R.version,R.onUpdate&&R.onUpdate(R)}function pt(D,R,ie){if(R.image.length!==6)return;Ue(D,R),t.activeTexture(33984+ie),t.bindTexture(34067,D.__webglTexture),r.pixelStorei(37440,R.flipY),r.pixelStorei(37441,R.premultiplyAlpha),r.pixelStorei(3317,R.unpackAlignment),r.pixelStorei(37443,0);const be=R&&(R.isCompressedTexture||R.image[0].isCompressedTexture),Ie=R.image[0]&&R.image[0].isDataTexture,le=[];for(let te=0;te<6;te++)!be&&!Ie?le[te]=y(R.image[te],!1,!0,u):le[te]=Ie?R.image[te].image:R.image[te],le[te]=Fe(R,le[te]);const ke=le[0],He=z(ke)||l,Ae=s.convert(R.format,R.encoding),Ce=s.convert(R.type),Ze=W(R.internalFormat,Ae,Ce,R.encoding),H=l&&R.isVideoTexture!==!0,Be=D.__version===void 0;let Pe=ae(R,ke,He);De(34067,R,He);let ze;if(be){H&&Be&&t.texStorage2D(34067,Pe,Ze,ke.width,ke.height);for(let te=0;te<6;te++){ze=le[te].mipmaps;for(let qe=0;qe<ze.length;qe++){const ut=ze[qe];R.format!==cn?Ae!==null?H?t.compressedTexSubImage2D(34069+te,qe,0,0,ut.width,ut.height,Ae,ut.data):t.compressedTexImage2D(34069+te,qe,Ze,ut.width,ut.height,0,ut.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):H?t.texSubImage2D(34069+te,qe,0,0,ut.width,ut.height,Ae,Ce,ut.data):t.texImage2D(34069+te,qe,Ze,ut.width,ut.height,0,Ae,Ce,ut.data)}}}else{ze=R.mipmaps,H&&Be&&(ze.length>0&&Pe++,t.texStorage2D(34067,Pe,Ze,le[0].width,le[0].height));for(let te=0;te<6;te++)if(Ie){H?t.texSubImage2D(34069+te,0,0,0,le[te].width,le[te].height,Ae,Ce,le[te].data):t.texImage2D(34069+te,0,Ze,le[te].width,le[te].height,0,Ae,Ce,le[te].data);for(let qe=0;qe<ze.length;qe++){const Lt=ze[qe].image[te].image;H?t.texSubImage2D(34069+te,qe+1,0,0,Lt.width,Lt.height,Ae,Ce,Lt.data):t.texImage2D(34069+te,qe+1,Ze,Lt.width,Lt.height,0,Ae,Ce,Lt.data)}}else{H?t.texSubImage2D(34069+te,0,0,0,Ae,Ce,le[te]):t.texImage2D(34069+te,0,Ze,Ae,Ce,le[te]);for(let qe=0;qe<ze.length;qe++){const ut=ze[qe];H?t.texSubImage2D(34069+te,qe+1,0,0,Ae,Ce,ut.image[te]):t.texImage2D(34069+te,qe+1,Ze,Ae,Ce,ut.image[te])}}}O(R,He)&&f(34067),D.__version=R.version,R.onUpdate&&R.onUpdate(R)}function Oe(D,R,ie,be,Ie){const le=s.convert(ie.format,ie.encoding),ke=s.convert(ie.type),He=W(ie.internalFormat,le,ke,ie.encoding);n.get(R).__hasExternalTextures||(Ie===32879||Ie===35866?t.texImage3D(Ie,0,He,R.width,R.height,R.depth,0,le,ke,null):t.texImage2D(Ie,0,He,R.width,R.height,0,le,ke,null)),t.bindFramebuffer(36160,D),R.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,be,Ie,n.get(ie).__webglTexture,0,Re(R)):r.framebufferTexture2D(36160,be,Ie,n.get(ie).__webglTexture,0),t.bindFramebuffer(36160,null)}function Xe(D,R,ie){if(r.bindRenderbuffer(36161,D),R.depthBuffer&&!R.stencilBuffer){let be=33189;if(ie||R.useRenderToTexture){const Ie=R.depthTexture;Ie&&Ie.isDepthTexture&&(Ie.type===Ni?be=36012:Ie.type===Us&&(be=33190));const le=Re(R);R.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,le,be,R.width,R.height):r.renderbufferStorageMultisample(36161,le,be,R.width,R.height)}else r.renderbufferStorage(36161,be,R.width,R.height);r.framebufferRenderbuffer(36160,36096,36161,D)}else if(R.depthBuffer&&R.stencilBuffer){const be=Re(R);ie&&R.useRenderbuffer?r.renderbufferStorageMultisample(36161,be,35056,R.width,R.height):R.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,be,35056,R.width,R.height):r.renderbufferStorage(36161,34041,R.width,R.height),r.framebufferRenderbuffer(36160,33306,36161,D)}else{const be=R.isWebGLMultipleRenderTargets===!0?R.texture[0]:R.texture,Ie=s.convert(be.format,be.encoding),le=s.convert(be.type),ke=W(be.internalFormat,Ie,le,be.encoding),He=Re(R);ie&&R.useRenderbuffer?r.renderbufferStorageMultisample(36161,He,ke,R.width,R.height):R.useRenderToTexture?_.renderbufferStorageMultisampleEXT(36161,He,ke,R.width,R.height):r.renderbufferStorage(36161,ke,R.width,R.height)}r.bindRenderbuffer(36161,null)}function Te(D,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,D),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),ce(R.depthTexture,0);const be=n.get(R.depthTexture).__webglTexture,Ie=Re(R);if(R.depthTexture.format===Fi)R.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,36096,3553,be,0,Ie):r.framebufferTexture2D(36160,36096,3553,be,0);else if(R.depthTexture.format===Ki)R.useRenderToTexture?_.framebufferTexture2DMultisampleEXT(36160,33306,3553,be,0,Ie):r.framebufferTexture2D(36160,33306,3553,be,0);else throw new Error("Unknown depthTexture format")}function at(D){const R=n.get(D),ie=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!R.__autoAllocateDepthBuffer){if(ie)throw new Error("target.depthTexture not supported in Cube render targets");Te(R.__webglFramebuffer,D)}else if(ie){R.__webglDepthbuffer=[];for(let be=0;be<6;be++)t.bindFramebuffer(36160,R.__webglFramebuffer[be]),R.__webglDepthbuffer[be]=r.createRenderbuffer(),Xe(R.__webglDepthbuffer[be],D,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=r.createRenderbuffer(),Xe(R.__webglDepthbuffer,D,!1);t.bindFramebuffer(36160,null)}function Qe(D,R,ie){const be=n.get(D);R!==void 0&&Oe(be.__webglFramebuffer,D,D.texture,36064,3553),ie!==void 0&&at(D)}function de(D){const R=D.texture,ie=n.get(D),be=n.get(R);D.addEventListener("dispose",A),D.isWebGLMultipleRenderTargets!==!0&&(be.__webglTexture===void 0&&(be.__webglTexture=r.createTexture()),be.__version=R.version,a.memory.textures++);const Ie=D.isWebGLCubeRenderTarget===!0,le=D.isWebGLMultipleRenderTargets===!0,ke=R.isDataTexture3D||R.isDataTexture2DArray,He=z(D)||l;if(Ie){ie.__webglFramebuffer=[];for(let Ae=0;Ae<6;Ae++)ie.__webglFramebuffer[Ae]=r.createFramebuffer()}else if(ie.__webglFramebuffer=r.createFramebuffer(),le)if(i.drawBuffers){const Ae=D.texture;for(let Ce=0,Ze=Ae.length;Ce<Ze;Ce++){const H=n.get(Ae[Ce]);H.__webglTexture===void 0&&(H.__webglTexture=r.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(D.useRenderbuffer)if(l){ie.__webglMultisampledFramebuffer=r.createFramebuffer(),ie.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,ie.__webglColorRenderbuffer);const Ae=s.convert(R.format,R.encoding),Ce=s.convert(R.type),Ze=W(R.internalFormat,Ae,Ce,R.encoding),H=Re(D);r.renderbufferStorageMultisample(36161,H,Ze,D.width,D.height),t.bindFramebuffer(36160,ie.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,ie.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),D.depthBuffer&&(ie.__webglDepthRenderbuffer=r.createRenderbuffer(),Xe(ie.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(Ie){t.bindTexture(34067,be.__webglTexture),De(34067,R,He);for(let Ae=0;Ae<6;Ae++)Oe(ie.__webglFramebuffer[Ae],D,R,36064,34069+Ae);O(R,He)&&f(34067),t.unbindTexture()}else if(le){const Ae=D.texture;for(let Ce=0,Ze=Ae.length;Ce<Ze;Ce++){const H=Ae[Ce],Be=n.get(H);t.bindTexture(3553,Be.__webglTexture),De(3553,H,He),Oe(ie.__webglFramebuffer,D,H,36064+Ce,3553),O(H,He)&&f(3553)}t.unbindTexture()}else{let Ae=3553;ke&&(l?Ae=R.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(Ae,be.__webglTexture),De(Ae,R,He),Oe(ie.__webglFramebuffer,D,R,36064,Ae),O(R,He)&&f(Ae),t.unbindTexture()}D.depthBuffer&&at(D)}function xe(D){const R=z(D)||l,ie=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let be=0,Ie=ie.length;be<Ie;be++){const le=ie[be];if(O(le,R)){const ke=D.isWebGLCubeRenderTarget?34067:3553,He=n.get(le).__webglTexture;t.bindTexture(ke,He),f(ke),t.unbindTexture()}}}function _e(D){if(D.useRenderbuffer)if(l){const R=D.width,ie=D.height;let be=16384;const Ie=[36064],le=D.stencilBuffer?33306:36096;D.depthBuffer&&Ie.push(le),D.ignoreDepthForMultisampleCopy||(D.depthBuffer&&(be|=256),D.stencilBuffer&&(be|=1024));const ke=n.get(D);t.bindFramebuffer(36008,ke.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,ke.__webglFramebuffer),D.ignoreDepthForMultisampleCopy&&(r.invalidateFramebuffer(36008,[le]),r.invalidateFramebuffer(36009,[le])),r.blitFramebuffer(0,0,R,ie,0,0,R,ie,be,9728),r.invalidateFramebuffer(36008,Ie),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,ke.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Re(D){return l&&(D.useRenderbuffer||D.useRenderToTexture)?Math.min(m,D.samples):0}function se(D){const R=a.render.frame;b.get(D)!==R&&(b.set(D,R),D.update())}function Fe(D,R){const ie=D.encoding,be=D.format,Ie=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===ba||ie!==hi&&(ie===Ft?l===!1?e.has("EXT_sRGB")===!0&&be===cn?(D.format=ba,D.minFilter=sn,D.generateMipmaps=!1):R=Oi.sRGBToLinear(R):(be!==cn||Ie!==ui)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ie)),R}let et=!1,ft=!1;function Mt(D,R){D&&D.isWebGLRenderTarget&&(et===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),et=!0),D=D.texture),ce(D,R)}function vt(D,R){D&&D.isWebGLCubeRenderTarget&&(ft===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ft=!0),D=D.texture),oe(D,R)}this.allocateTextureUnit=Y,this.resetTextureUnits=K,this.setTexture2D=ce,this.setTexture2DArray=ve,this.setTexture3D=Ne,this.setTextureCube=oe,this.rebindTextures=Qe,this.setupRenderTarget=de,this.updateRenderTargetMipmap=xe,this.updateMultisampleRenderTarget=_e,this.setupDepthRenderbuffer=at,this.setupFrameBufferTexture=Oe,this.safeSetTexture2D=Mt,this.safeSetTextureCube=vt}function Ey(r,e,t){const n=t.isWebGL2;function i(s,a=null){let l;if(s===ui)return 5121;if(s===Cd)return 32819;if(s===Ld)return 32820;if(s===Td)return 5120;if(s===Ed)return 5122;if(s===Zr)return 5123;if(s===Ad)return 5124;if(s===Us)return 5125;if(s===Ni)return 5126;if(s===Zi)return n?5131:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(s===Rd)return 6406;if(s===cn)return 6408;if(s===Pd)return 6409;if(s===Dd)return 6410;if(s===Fi)return 6402;if(s===Ki)return 34041;if(s===Id)return 6403;if(s===ba)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(s===Nd)return 36244;if(s===Fd)return 33319;if(s===Bd)return 33320;if(s===Od)return 36249;if(s===pa||s===ma||s===ga||s===va)if(a===Ft)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(s===pa)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===ma)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===ga)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===va)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(s===pa)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===ma)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ga)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===va)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===wc||s===Mc||s===Sc||s===Tc)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(s===wc)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Mc)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Sc)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Tc)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===zd)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Ec||s===Ac)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(s===Ec)return a===Ft?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(s===Ac)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Cc||s===Lc||s===Rc||s===Pc||s===Dc||s===Ic||s===Nc||s===Fc||s===Bc||s===Oc||s===zc||s===Uc||s===Hc||s===kc)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(s===Cc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Lc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Rc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Pc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Dc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Ic)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Nc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Fc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Bc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Oc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===zc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Uc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Hc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===kc)return a===Ft?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Vc)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(s===Vc)return a===Ft?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===$i)return n?34042:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class ju extends gn{constructor(e=[]){super();this.cameras=e}}ju.prototype.isArrayCamera=!0;class ss extends bt{constructor(){super();this.type="Group"}}ss.prototype.isGroup=!0;const Ay={type:"move"};class rl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ss,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ss,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ss,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const l=this._targetRay,h=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(l!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(Ay))),u&&e.hand){a=!0;for(const S of e.hand.values()){const C=t.getJointPose(S,n);if(u.joints[S.jointName]===void 0){const y=new ss;y.matrixAutoUpdate=!1,y.visible=!1,u.joints[S.jointName]=y,u.add(y)}const x=u.joints[S.jointName];C!==null&&(x.matrix.fromArray(C.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.jointRadius=C.radius),x.visible=C!==null}const p=u.joints["index-finger-tip"],m=u.joints["thumb-tip"],v=p.position.distanceTo(m.position),_=.02,b=.005;u.inputState.pinching&&v>_+b?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&v<=_-b&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else h!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(h.matrix.fromArray(s.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),s.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(s.linearVelocity)):h.hasLinearVelocity=!1,s.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(s.angularVelocity)):h.hasAngularVelocity=!1));return l!==null&&(l.visible=i!==null),h!==null&&(h.visible=s!==null),u!==null&&(u.visible=a!==null),this}}class sl extends Zt{constructor(e,t,n,i,s,a,l,h,u,p){if(p=p!==void 0?p:Fi,p!==Fi&&p!==Ki)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===Fi&&(n=Zr),n===void 0&&p===Ki&&(n=$i);super(null,i,s,a,l,h,p,n,u);this.image={width:e,height:t},this.magFilter=l!==void 0?l:Yt,this.minFilter=h!==void 0?h:Yt,this.flipY=!1,this.generateMipmaps=!1}}sl.prototype.isDepthTexture=!0;class Cy extends Bi{constructor(e,t){super();const n=this;let i=null,s=1,a=null,l="local-floor";const h=e.extensions.has("WEBGL_multisampled_render_to_texture");let u=null,p=null,m=null,v=null,_=!1,b=null;const S=t.getContextAttributes();let C=null,x=null;const y=[],z=new Map,L=new gn;L.layers.enable(1),L.viewport=new Ct;const O=new gn;O.layers.enable(2),O.viewport=new Ct;const f=[L,O],W=new ju;W.layers.enable(1),W.layers.enable(2);let ae=null,Me=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(oe){let ue=y[oe];return ue===void 0&&(ue=new rl,y[oe]=ue),ue.getTargetRaySpace()},this.getControllerGrip=function(oe){let ue=y[oe];return ue===void 0&&(ue=new rl,y[oe]=ue),ue.getGripSpace()},this.getHand=function(oe){let ue=y[oe];return ue===void 0&&(ue=new rl,y[oe]=ue),ue.getHandSpace()};function ge(oe){const ue=z.get(oe.inputSource);ue&&ue.dispatchEvent({type:oe.type,data:oe.inputSource})}function A(){z.forEach(function(oe,ue){oe.disconnect(ue)}),z.clear(),ae=null,Me=null,e.setRenderTarget(C),v=null,m=null,p=null,i=null,x=null,Ne.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(oe){s=oe,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(oe){l=oe,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return b},this.getSession=function(){return i},this.setSession=async function(oe){if(i=oe,i!==null){if(C=e.getRenderTarget(),i.addEventListener("select",ge),i.addEventListener("selectstart",ge),i.addEventListener("selectend",ge),i.addEventListener("squeeze",ge),i.addEventListener("squeezestart",ge),i.addEventListener("squeezeend",ge),i.addEventListener("end",A),i.addEventListener("inputsourceschange",k),S.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ue={antialias:i.renderState.layers===void 0?S.antialias:!0,alpha:S.alpha,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(i,t,ue),i.updateRenderState({baseLayer:v}),x=new Ln(v.framebufferWidth,v.framebufferHeight,{format:cn,type:ui,encoding:e.outputEncoding})}else{_=S.antialias;let ue=null,Le=null,De=null;S.depth&&(De=S.stencil?35056:33190,ue=S.stencil?Ki:Fi,Le=S.stencil?$i:Zr);const Ue={colorFormat:e.outputEncoding===Ft?35907:32856,depthFormat:De,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ue),i.updateRenderState({layers:[m]}),_?x=new Ca(m.textureWidth,m.textureHeight,{format:cn,type:ui,depthTexture:new sl(m.textureWidth,m.textureHeight,Le,void 0,void 0,void 0,void 0,void 0,void 0,ue),stencilBuffer:S.stencil,ignoreDepth:m.ignoreDepthValues,useRenderToTexture:h,encoding:e.outputEncoding}):x=new Ln(m.textureWidth,m.textureHeight,{format:cn,type:ui,depthTexture:new sl(m.textureWidth,m.textureHeight,Le,void 0,void 0,void 0,void 0,void 0,void 0,ue),stencilBuffer:S.stencil,ignoreDepth:m.ignoreDepthValues,encoding:e.outputEncoding})}x.isXRRenderTarget=!0,this.setFoveation(1),a=await i.requestReferenceSpace(l),Ne.setContext(i),Ne.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function k(oe){const ue=i.inputSources;for(let Le=0;Le<y.length;Le++)z.set(ue[Le],y[Le]);for(let Le=0;Le<oe.removed.length;Le++){const De=oe.removed[Le],Ue=z.get(De);Ue&&(Ue.dispatchEvent({type:"disconnected",data:De}),z.delete(De))}for(let Le=0;Le<oe.added.length;Le++){const De=oe.added[Le],Ue=z.get(De);Ue&&Ue.dispatchEvent({type:"connected",data:De})}}const X=new B,Z=new B;function K(oe,ue,Le){X.setFromMatrixPosition(ue.matrixWorld),Z.setFromMatrixPosition(Le.matrixWorld);const De=X.distanceTo(Z),Ue=ue.projectionMatrix.elements,ne=Le.projectionMatrix.elements,pt=Ue[14]/(Ue[10]-1),Oe=Ue[14]/(Ue[10]+1),Xe=(Ue[9]+1)/Ue[5],Te=(Ue[9]-1)/Ue[5],at=(Ue[8]-1)/Ue[0],Qe=(ne[8]+1)/ne[0],de=pt*at,xe=pt*Qe,_e=De/(-at+Qe),Re=_e*-at;ue.matrixWorld.decompose(oe.position,oe.quaternion,oe.scale),oe.translateX(Re),oe.translateZ(_e),oe.matrixWorld.compose(oe.position,oe.quaternion,oe.scale),oe.matrixWorldInverse.copy(oe.matrixWorld).invert();const se=pt+_e,Fe=Oe+_e,et=de-Re,ft=xe+(De-Re),Mt=Xe*Oe/Fe*se,vt=Te*Oe/Fe*se;oe.projectionMatrix.makePerspective(et,ft,Mt,vt,se,Fe)}function Y(oe,ue){ue===null?oe.matrixWorld.copy(oe.matrix):oe.matrixWorld.multiplyMatrices(ue.matrixWorld,oe.matrix),oe.matrixWorldInverse.copy(oe.matrixWorld).invert()}this.updateCamera=function(oe){if(i===null)return;W.near=O.near=L.near=oe.near,W.far=O.far=L.far=oe.far,(ae!==W.near||Me!==W.far)&&(i.updateRenderState({depthNear:W.near,depthFar:W.far}),ae=W.near,Me=W.far);const ue=oe.parent,Le=W.cameras;Y(W,ue);for(let Ue=0;Ue<Le.length;Ue++)Y(Le[Ue],ue);W.matrixWorld.decompose(W.position,W.quaternion,W.scale),oe.position.copy(W.position),oe.quaternion.copy(W.quaternion),oe.scale.copy(W.scale),oe.matrix.copy(W.matrix),oe.matrixWorld.copy(W.matrixWorld);const De=oe.children;for(let Ue=0,ne=De.length;Ue<ne;Ue++)De[Ue].updateMatrixWorld(!0);Le.length===2?K(W,L,O):W.projectionMatrix.copy(L.projectionMatrix)},this.getCamera=function(){return W},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(v!==null)return v.fixedFoveation},this.setFoveation=function(oe){m!==null&&(m.fixedFoveation=oe),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=oe)};let ce=null;function ve(oe,ue){if(u=ue.getViewerPose(a),b=ue,u!==null){const De=u.views;v!==null&&(e.setRenderTargetFramebuffer(x,v.framebuffer),e.setRenderTarget(x));let Ue=!1;De.length!==W.cameras.length&&(W.cameras.length=0,Ue=!0);for(let ne=0;ne<De.length;ne++){const pt=De[ne];let Oe=null;if(v!==null)Oe=v.getViewport(pt);else{const Te=p.getViewSubImage(m,pt);Oe=Te.viewport,ne===0&&(e.setRenderTargetTextures(x,Te.colorTexture,m.ignoreDepthValues?void 0:Te.depthStencilTexture),e.setRenderTarget(x))}const Xe=f[ne];Xe.matrix.fromArray(pt.transform.matrix),Xe.projectionMatrix.fromArray(pt.projectionMatrix),Xe.viewport.set(Oe.x,Oe.y,Oe.width,Oe.height),ne===0&&W.matrix.copy(Xe.matrix),Ue===!0&&W.cameras.push(Xe)}}const Le=i.inputSources;for(let De=0;De<y.length;De++){const Ue=y[De],ne=Le[De];Ue.update(ne,ue,a)}ce&&ce(oe,ue),b=null}const Ne=new cu;Ne.setAnimationLoop(ve),this.setAnimationLoop=function(oe){ce=oe},this.dispose=function(){}}}function Ly(r){function e(x,y){x.fogColor.value.copy(y.color),y.isFog?(x.fogNear.value=y.near,x.fogFar.value=y.far):y.isFogExp2&&(x.fogDensity.value=y.density)}function t(x,y,z,L,O){y.isMeshBasicMaterial?n(x,y):y.isMeshLambertMaterial?(n(x,y),h(x,y)):y.isMeshToonMaterial?(n(x,y),p(x,y)):y.isMeshPhongMaterial?(n(x,y),u(x,y)):y.isMeshStandardMaterial?(n(x,y),y.isMeshPhysicalMaterial?v(x,y,O):m(x,y)):y.isMeshMatcapMaterial?(n(x,y),_(x,y)):y.isMeshDepthMaterial?(n(x,y),b(x,y)):y.isMeshDistanceMaterial?(n(x,y),S(x,y)):y.isMeshNormalMaterial?(n(x,y),C(x,y)):y.isLineBasicMaterial?(i(x,y),y.isLineDashedMaterial&&s(x,y)):y.isPointsMaterial?a(x,y,z,L):y.isSpriteMaterial?l(x,y):y.isShadowMaterial?(x.color.value.copy(y.color),x.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function n(x,y){x.opacity.value=y.opacity,y.color&&x.diffuse.value.copy(y.color),y.emissive&&x.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.specularMap&&(x.specularMap.value=y.specularMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest);const z=r.get(y).envMap;z&&(x.envMap.value=z,x.flipEnvMap.value=z.isCubeTexture&&z.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=y.reflectivity,x.ior.value=y.ior,x.refractionRatio.value=y.refractionRatio),y.lightMap&&(x.lightMap.value=y.lightMap,x.lightMapIntensity.value=y.lightMapIntensity),y.aoMap&&(x.aoMap.value=y.aoMap,x.aoMapIntensity.value=y.aoMapIntensity);let L;y.map?L=y.map:y.specularMap?L=y.specularMap:y.displacementMap?L=y.displacementMap:y.normalMap?L=y.normalMap:y.bumpMap?L=y.bumpMap:y.roughnessMap?L=y.roughnessMap:y.metalnessMap?L=y.metalnessMap:y.alphaMap?L=y.alphaMap:y.emissiveMap?L=y.emissiveMap:y.clearcoatMap?L=y.clearcoatMap:y.clearcoatNormalMap?L=y.clearcoatNormalMap:y.clearcoatRoughnessMap?L=y.clearcoatRoughnessMap:y.specularIntensityMap?L=y.specularIntensityMap:y.specularColorMap?L=y.specularColorMap:y.transmissionMap?L=y.transmissionMap:y.thicknessMap?L=y.thicknessMap:y.sheenColorMap?L=y.sheenColorMap:y.sheenRoughnessMap&&(L=y.sheenRoughnessMap),L!==void 0&&(L.isWebGLRenderTarget&&(L=L.texture),L.matrixAutoUpdate===!0&&L.updateMatrix(),x.uvTransform.value.copy(L.matrix));let O;y.aoMap?O=y.aoMap:y.lightMap&&(O=y.lightMap),O!==void 0&&(O.isWebGLRenderTarget&&(O=O.texture),O.matrixAutoUpdate===!0&&O.updateMatrix(),x.uv2Transform.value.copy(O.matrix))}function i(x,y){x.diffuse.value.copy(y.color),x.opacity.value=y.opacity}function s(x,y){x.dashSize.value=y.dashSize,x.totalSize.value=y.dashSize+y.gapSize,x.scale.value=y.scale}function a(x,y,z,L){x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.size.value=y.size*z,x.scale.value=L*.5,y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest);let O;y.map?O=y.map:y.alphaMap&&(O=y.alphaMap),O!==void 0&&(O.matrixAutoUpdate===!0&&O.updateMatrix(),x.uvTransform.value.copy(O.matrix))}function l(x,y){x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.rotation.value=y.rotation,y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest);let z;y.map?z=y.map:y.alphaMap&&(z=y.alphaMap),z!==void 0&&(z.matrixAutoUpdate===!0&&z.updateMatrix(),x.uvTransform.value.copy(z.matrix))}function h(x,y){y.emissiveMap&&(x.emissiveMap.value=y.emissiveMap)}function u(x,y){x.specular.value.copy(y.specular),x.shininess.value=Math.max(y.shininess,1e-4),y.emissiveMap&&(x.emissiveMap.value=y.emissiveMap),y.bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===Xt&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===Xt&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)}function p(x,y){y.gradientMap&&(x.gradientMap.value=y.gradientMap),y.emissiveMap&&(x.emissiveMap.value=y.emissiveMap),y.bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===Xt&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===Xt&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)}function m(x,y){x.roughness.value=y.roughness,x.metalness.value=y.metalness,y.roughnessMap&&(x.roughnessMap.value=y.roughnessMap),y.metalnessMap&&(x.metalnessMap.value=y.metalnessMap),y.emissiveMap&&(x.emissiveMap.value=y.emissiveMap),y.bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===Xt&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===Xt&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias),r.get(y).envMap&&(x.envMapIntensity.value=y.envMapIntensity)}function v(x,y,z){m(x,y),x.ior.value=y.ior,y.sheen>0&&(x.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),x.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(x.sheenColorMap.value=y.sheenColorMap),y.sheenRoughnessMap&&(x.sheenRoughnessMap.value=y.sheenRoughnessMap)),y.clearcoat>0&&(x.clearcoat.value=y.clearcoat,x.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(x.clearcoatMap.value=y.clearcoatMap),y.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap),y.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),x.clearcoatNormalMap.value=y.clearcoatNormalMap,y.side===Xt&&x.clearcoatNormalScale.value.negate())),y.transmission>0&&(x.transmission.value=y.transmission,x.transmissionSamplerMap.value=z.texture,x.transmissionSamplerSize.value.set(z.width,z.height),y.transmissionMap&&(x.transmissionMap.value=y.transmissionMap),x.thickness.value=y.thickness,y.thicknessMap&&(x.thicknessMap.value=y.thicknessMap),x.attenuationDistance.value=y.attenuationDistance,x.attenuationColor.value.copy(y.attenuationColor)),x.specularIntensity.value=y.specularIntensity,x.specularColor.value.copy(y.specularColor),y.specularIntensityMap&&(x.specularIntensityMap.value=y.specularIntensityMap),y.specularColorMap&&(x.specularColorMap.value=y.specularColorMap)}function _(x,y){y.matcap&&(x.matcap.value=y.matcap),y.bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===Xt&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===Xt&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)}function b(x,y){y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)}function S(x,y){y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias),x.referencePosition.value.copy(y.referencePosition),x.nearDistance.value=y.nearDistance,x.farDistance.value=y.farDistance}function C(x,y){y.bumpMap&&(x.bumpMap.value=y.bumpMap,x.bumpScale.value=y.bumpScale,y.side===Xt&&(x.bumpScale.value*=-1)),y.normalMap&&(x.normalMap.value=y.normalMap,x.normalScale.value.copy(y.normalScale),y.side===Xt&&x.normalScale.value.negate()),y.displacementMap&&(x.displacementMap.value=y.displacementMap,x.displacementScale.value=y.displacementScale,x.displacementBias.value=y.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function Ry(){const r=Kr("canvas");return r.style.display="block",r}function Tt(r={}){const e=r.canvas!==void 0?r.canvas:Ry(),t=r.context!==void 0?r.context:null,n=r.alpha!==void 0?r.alpha:!1,i=r.depth!==void 0?r.depth:!0,s=r.stencil!==void 0?r.stencil:!0,a=r.antialias!==void 0?r.antialias:!1,l=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,h=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,u=r.powerPreference!==void 0?r.powerPreference:"default",p=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let m=null,v=null;const _=[],b=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=hi,this.physicallyCorrectLights=!1,this.toneMapping=ci,this.toneMappingExposure=1;const S=this;let C=!1,x=0,y=0,z=null,L=-1,O=null;const f=new Ct,W=new Ct;let ae=null,Me=e.width,ge=e.height,A=1,k=null,X=null;const Z=new Ct(0,0,Me,ge),K=new Ct(0,0,Me,ge);let Y=!1;const ce=new co;let ve=!1,Ne=!1,oe=null;const ue=new Ke,Le=new B,De={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ue(){return z===null?A:1}let ne=t;function pt(P,j){for(let Q=0;Q<P.length;Q++){const $=P[Q],he=e.getContext($,j);if(he!==null)return he}return null}try{const P={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:h,powerPreference:u,failIfMajorPerformanceCaveat:p};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${aa}`),e.addEventListener("webglcontextlost",Ze,!1),e.addEventListener("webglcontextrestored",H,!1),ne===null){const j=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&j.shift(),ne=pt(j,P),ne===null)throw pt(j)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ne.getShaderPrecisionFormat===void 0&&(ne.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let Oe,Xe,Te,at,Qe,de,xe,_e,Re,se,Fe,et,ft,Mt,vt,D,R,ie,be,Ie,le,ke,He;function Ae(){Oe=new Jg(ne),Xe=new Gg(ne,Oe,r),Oe.init(Xe),ke=new Ey(ne,Oe,Xe),Te=new Sy(ne,Oe,Xe),at=new Kg(ne),Qe=new dy,de=new Ty(ne,Oe,Te,Qe,Xe,ke,at),xe=new qg(S),_e=new Yg(S),Re=new dp(ne,Xe),He=new kg(ne,Oe,Re,Xe),se=new Zg(ne,Re,at,He),Fe=new nv(ne,se,Re,at),be=new tv(ne,Xe,de),D=new Wg(Qe),et=new fy(S,xe,_e,Oe,Xe,He,D),ft=new Ly(Qe),Mt=new my,vt=new by(Oe,Xe),ie=new Hg(S,xe,Te,Fe,n,l),R=new qu(S,Fe,Xe),Ie=new Vg(ne,Oe,at,Xe),le=new $g(ne,Oe,at,Xe),at.programs=et.programs,S.capabilities=Xe,S.extensions=Oe,S.properties=Qe,S.renderLists=Mt,S.shadowMap=R,S.state=Te,S.info=at}Ae();const Ce=new Cy(S,ne);this.xr=Ce,this.getContext=function(){return ne},this.getContextAttributes=function(){return ne.getContextAttributes()},this.forceContextLoss=function(){const P=Oe.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=Oe.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(P){P!==void 0&&(A=P,this.setSize(Me,ge,!1))},this.getSize=function(P){return P.set(Me,ge)},this.setSize=function(P,j,Q){if(Ce.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Me=P,ge=j,e.width=Math.floor(P*A),e.height=Math.floor(j*A),Q!==!1&&(e.style.width=P+"px",e.style.height=j+"px"),this.setViewport(0,0,P,j)},this.getDrawingBufferSize=function(P){return P.set(Me*A,ge*A).floor()},this.setDrawingBufferSize=function(P,j,Q){Me=P,ge=j,A=Q,e.width=Math.floor(P*Q),e.height=Math.floor(j*Q),this.setViewport(0,0,P,j)},this.getCurrentViewport=function(P){return P.copy(f)},this.getViewport=function(P){return P.copy(Z)},this.setViewport=function(P,j,Q,$){P.isVector4?Z.set(P.x,P.y,P.z,P.w):Z.set(P,j,Q,$),Te.viewport(f.copy(Z).multiplyScalar(A).floor())},this.getScissor=function(P){return P.copy(K)},this.setScissor=function(P,j,Q,$){P.isVector4?K.set(P.x,P.y,P.z,P.w):K.set(P,j,Q,$),Te.scissor(W.copy(K).multiplyScalar(A).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(P){Te.setScissorTest(Y=P)},this.setOpaqueSort=function(P){k=P},this.setTransparentSort=function(P){X=P},this.getClearColor=function(P){return P.copy(ie.getClearColor())},this.setClearColor=function(){ie.setClearColor.apply(ie,arguments)},this.getClearAlpha=function(){return ie.getClearAlpha()},this.setClearAlpha=function(){ie.setClearAlpha.apply(ie,arguments)},this.clear=function(P,j,Q){let $=0;(P===void 0||P)&&($|=16384),(j===void 0||j)&&($|=256),(Q===void 0||Q)&&($|=1024),ne.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ze,!1),e.removeEventListener("webglcontextrestored",H,!1),Mt.dispose(),vt.dispose(),Qe.dispose(),xe.dispose(),_e.dispose(),Fe.dispose(),He.dispose(),et.dispose(),Ce.dispose(),Ce.removeEventListener("sessionstart",ut),Ce.removeEventListener("sessionend",Lt),oe&&(oe.dispose(),oe=null),nn.stop()};function Ze(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function H(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const P=at.autoReset,j=R.enabled,Q=R.autoUpdate,$=R.needsUpdate,he=R.type;Ae(),at.autoReset=P,R.enabled=j,R.autoUpdate=Q,R.needsUpdate=$,R.type=he}function Be(P){const j=P.target;j.removeEventListener("dispose",Be),Pe(j)}function Pe(P){ze(P),Qe.remove(P)}function ze(P){const j=Qe.get(P).programs;j!==void 0&&(j.forEach(function(Q){et.releaseProgram(Q)}),P.isShaderMaterial&&et.releaseShaderCache(P))}this.renderBufferDirect=function(P,j,Q,$,he,tt){j===null&&(j=De);const nt=he.isMesh&&he.matrixWorld.determinant()<0,st=Do(P,j,Q,$,he);Te.setMaterial($,nt);let ot=Q.index;const yt=Q.attributes.position;if(ot===null){if(yt===void 0||yt.count===0)return}else if(ot.count===0)return;let lt=1;$.wireframe===!0&&(ot=se.getWireframeAttribute(Q),lt=2),He.setup(he,$,st,Q,ot);let dt,Dt=Ie;ot!==null&&(dt=Re.get(ot),Dt=le,Dt.setIndex(dt));const Hn=ot!==null?ot.count:yt.count,jn=Q.drawRange.start*lt,mt=Q.drawRange.count*lt,hn=tt!==null?tt.start*lt:0,Ht=tt!==null?tt.count*lt:1/0,vn=Math.max(jn,hn),Wi=Math.min(Hn,jn+mt,hn+Ht)-1,yn=Math.max(0,Wi-vn+1);if(yn!==0){if(he.isMesh)$.wireframe===!0?(Te.setLineWidth($.wireframeLinewidth*Ue()),Dt.setMode(1)):Dt.setMode(4);else if(he.isLine){let An=$.linewidth;An===void 0&&(An=1),Te.setLineWidth(An*Ue()),he.isLineSegments?Dt.setMode(1):he.isLineLoop?Dt.setMode(2):Dt.setMode(3)}else he.isPoints?Dt.setMode(0):he.isSprite&&Dt.setMode(4);if(he.isInstancedMesh)Dt.renderInstances(vn,yn,he.count);else if(Q.isInstancedBufferGeometry){const An=Math.min(Q.instanceCount,Q._maxInstanceCount);Dt.renderInstances(vn,yn,An)}else Dt.render(vn,yn)}},this.compile=function(P,j){v=vt.get(P),v.init(),b.push(v),P.traverseVisible(function(Q){Q.isLight&&Q.layers.test(j.layers)&&(v.pushLight(Q),Q.castShadow&&v.pushShadow(Q))}),v.setupLights(S.physicallyCorrectLights),P.traverse(function(Q){const $=Q.material;if($)if(Array.isArray($))for(let he=0;he<$.length;he++){const tt=$[he];ni(tt,P,Q)}else ni($,P,Q)}),b.pop(),v=null};let te=null;function qe(P){te&&te(P)}function ut(){nn.stop()}function Lt(){nn.start()}const nn=new cu;nn.setAnimationLoop(qe),typeof window!="undefined"&&nn.setContext(window),this.setAnimationLoop=function(P){te=P,Ce.setAnimationLoop(P),P===null?nn.stop():nn.start()},Ce.addEventListener("sessionstart",ut),Ce.addEventListener("sessionend",Lt),this.render=function(P,j){if(j!==void 0&&j.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;P.autoUpdate===!0&&P.updateMatrixWorld(),j.parent===null&&j.updateMatrixWorld(),Ce.enabled===!0&&Ce.isPresenting===!0&&(Ce.cameraAutoUpdate===!0&&Ce.updateCamera(j),j=Ce.getCamera()),P.isScene===!0&&P.onBeforeRender(S,P,j,z),v=vt.get(P,b.length),v.init(),b.push(v),ue.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),ce.setFromProjectionMatrix(ue),Ne=this.localClippingEnabled,ve=D.init(this.clippingPlanes,Ne,j),m=Mt.get(P,_.length),m.init(),_.push(m),_t(P,j,0,S.sortObjects),m.finish(),S.sortObjects===!0&&m.sort(k,X),ve===!0&&D.beginShadows();const Q=v.state.shadowsArray;if(R.render(Q,P,j),ve===!0&&D.endShadows(),this.info.autoReset===!0&&this.info.reset(),ie.render(m,P),v.setupLights(S.physicallyCorrectLights),j.isArrayCamera){const $=j.cameras;for(let he=0,tt=$.length;he<tt;he++){const nt=$[he];Qt(m,P,nt,nt.viewport)}}else Qt(m,P,j);z!==null&&(de.updateMultisampleRenderTarget(z),de.updateRenderTargetMipmap(z)),P.isScene===!0&&P.onAfterRender(S,P,j),Te.buffers.depth.setTest(!0),Te.buffers.depth.setMask(!0),Te.buffers.color.setMask(!0),Te.setPolygonOffset(!1),He.resetDefaultState(),L=-1,O=null,b.pop(),b.length>0?v=b[b.length-1]:v=null,_.pop(),_.length>0?m=_[_.length-1]:m=null};function _t(P,j,Q,$){if(P.visible===!1)return;if(P.layers.test(j.layers)){if(P.isGroup)Q=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update(j);else if(P.isLight)v.pushLight(P),P.castShadow&&v.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||ce.intersectsSprite(P)){$&&Le.setFromMatrixPosition(P.matrixWorld).applyMatrix4(ue);const nt=Fe.update(P),st=P.material;st.visible&&m.push(P,nt,st,Q,Le.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(P.isSkinnedMesh&&P.skeleton.frame!==at.render.frame&&(P.skeleton.update(),P.skeleton.frame=at.render.frame),!P.frustumCulled||ce.intersectsObject(P))){$&&Le.setFromMatrixPosition(P.matrixWorld).applyMatrix4(ue);const nt=Fe.update(P),st=P.material;if(Array.isArray(st)){const ot=nt.groups;for(let yt=0,lt=ot.length;yt<lt;yt++){const dt=ot[yt],Dt=st[dt.materialIndex];Dt&&Dt.visible&&m.push(P,nt,Dt,Q,Le.z,dt)}}else st.visible&&m.push(P,nt,st,Q,Le.z,null)}}const tt=P.children;for(let nt=0,st=tt.length;nt<st;nt++)_t(tt[nt],j,Q,$)}function Qt(P,j,Q,$){const he=P.opaque,tt=P.transmissive,nt=P.transparent;v.setupLightsView(Q),tt.length>0&&Dn(he,j,Q),$&&Te.viewport(f.copy($)),he.length>0&&Gi(he,j,Q),tt.length>0&&Gi(tt,j,Q),nt.length>0&&Gi(nt,j,Q)}function Dn(P,j,Q){if(oe===null){const nt=a===!0&&Xe.isWebGL2===!0?Ca:Ln;oe=new nt(1024,1024,{generateMipmaps:!0,type:ke.convert(Zi)!==null?Zi:ui,minFilter:zs,magFilter:Yt,wrapS:Mn,wrapT:Mn,useRenderToTexture:Oe.has("WEBGL_multisampled_render_to_texture")})}const $=S.getRenderTarget();S.setRenderTarget(oe),S.clear();const he=S.toneMapping;S.toneMapping=ci,Gi(P,j,Q),S.toneMapping=he,de.updateMultisampleRenderTarget(oe),de.updateRenderTargetMipmap(oe),S.setRenderTarget($)}function Gi(P,j,Q){const $=j.isScene===!0?j.overrideMaterial:null;for(let he=0,tt=P.length;he<tt;he++){const nt=P[he],st=nt.object,ot=nt.geometry,yt=$===null?nt.material:$,lt=nt.group;st.layers.test(Q.layers)&&Ir(st,j,Q,ot,yt,lt)}}function Ir(P,j,Q,$,he,tt){P.onBeforeRender(S,j,Q,$,he,tt),P.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),he.onBeforeRender(S,j,Q,$,P,tt),he.transparent===!0&&he.side===Yi?(he.side=Xt,he.needsUpdate=!0,S.renderBufferDirect(Q,j,$,he,P,tt),he.side=jr,he.needsUpdate=!0,S.renderBufferDirect(Q,j,$,he,P,tt),he.side=Yi):S.renderBufferDirect(Q,j,$,he,P,tt),P.onAfterRender(S,j,Q,$,he,tt)}function ni(P,j,Q){j.isScene!==!0&&(j=De);const $=Qe.get(P),he=v.state.lights,tt=v.state.shadowsArray,nt=he.state.version,st=et.getParameters(P,he.state,tt,j,Q),ot=et.getProgramCacheKey(st);let yt=$.programs;$.environment=P.isMeshStandardMaterial?j.environment:null,$.fog=j.fog,$.envMap=(P.isMeshStandardMaterial?_e:xe).get(P.envMap||$.environment),yt===void 0&&(P.addEventListener("dispose",Be),yt=new Map,$.programs=yt);let lt=yt.get(ot);if(lt!==void 0){if($.currentProgram===lt&&$.lightsStateVersion===nt)return bs(P,st),lt}else st.uniforms=et.getUniforms(P),P.onBuild(Q,st,S),P.onBeforeCompile(st,S),lt=et.acquireProgram(st,ot),yt.set(ot,lt),$.uniforms=st.uniforms;const dt=$.uniforms;(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(dt.clippingPlanes=D.uniform),bs(P,st),$.needsLights=ws(P),$.lightsStateVersion=nt,$.needsLights&&(dt.ambientLightColor.value=he.state.ambient,dt.lightProbe.value=he.state.probe,dt.directionalLights.value=he.state.directional,dt.directionalLightShadows.value=he.state.directionalShadow,dt.spotLights.value=he.state.spot,dt.spotLightShadows.value=he.state.spotShadow,dt.rectAreaLights.value=he.state.rectArea,dt.ltc_1.value=he.state.rectAreaLTC1,dt.ltc_2.value=he.state.rectAreaLTC2,dt.pointLights.value=he.state.point,dt.pointLightShadows.value=he.state.pointShadow,dt.hemisphereLights.value=he.state.hemi,dt.directionalShadowMap.value=he.state.directionalShadowMap,dt.directionalShadowMatrix.value=he.state.directionalShadowMatrix,dt.spotShadowMap.value=he.state.spotShadowMap,dt.spotShadowMatrix.value=he.state.spotShadowMatrix,dt.pointShadowMap.value=he.state.pointShadowMap,dt.pointShadowMatrix.value=he.state.pointShadowMatrix);const Dt=lt.getUniforms(),Hn=_i.seqWithValue(Dt.seq,dt);return $.currentProgram=lt,$.uniformsList=Hn,lt}function bs(P,j){const Q=Qe.get(P);Q.outputEncoding=j.outputEncoding,Q.instancing=j.instancing,Q.skinning=j.skinning,Q.morphTargets=j.morphTargets,Q.morphNormals=j.morphNormals,Q.morphTargetsCount=j.morphTargetsCount,Q.numClippingPlanes=j.numClippingPlanes,Q.numIntersection=j.numClipIntersection,Q.vertexAlphas=j.vertexAlphas,Q.vertexTangents=j.vertexTangents,Q.toneMapping=j.toneMapping}function Do(P,j,Q,$,he){j.isScene!==!0&&(j=De),de.resetTextureUnits();const tt=j.fog,nt=$.isMeshStandardMaterial?j.environment:null,st=z===null?S.outputEncoding:z.isXRRenderTarget===!0?z.texture.encoding:hi,ot=($.isMeshStandardMaterial?_e:xe).get($.envMap||nt),yt=$.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,lt=!!$.normalMap&&!!Q.attributes.tangent,dt=!!Q.morphAttributes.position,Dt=!!Q.morphAttributes.normal,Hn=Q.morphAttributes.position?Q.morphAttributes.position.length:0,jn=$.toneMapped?S.toneMapping:ci,mt=Qe.get($),hn=v.state.lights;if(ve===!0&&(Ne===!0||P!==O)){const Rt=P===O&&$.id===L;D.setState($,P,Rt)}let Ht=!1;$.version===mt.__version?(mt.needsLights&&mt.lightsStateVersion!==hn.state.version||mt.outputEncoding!==st||he.isInstancedMesh&&mt.instancing===!1||!he.isInstancedMesh&&mt.instancing===!0||he.isSkinnedMesh&&mt.skinning===!1||!he.isSkinnedMesh&&mt.skinning===!0||mt.envMap!==ot||$.fog&&mt.fog!==tt||mt.numClippingPlanes!==void 0&&(mt.numClippingPlanes!==D.numPlanes||mt.numIntersection!==D.numIntersection)||mt.vertexAlphas!==yt||mt.vertexTangents!==lt||mt.morphTargets!==dt||mt.morphNormals!==Dt||mt.toneMapping!==jn||Xe.isWebGL2===!0&&mt.morphTargetsCount!==Hn)&&(Ht=!0):(Ht=!0,mt.__version=$.version);let vn=mt.currentProgram;Ht===!0&&(vn=ni($,j,he));let Wi=!1,yn=!1,An=!1;const Vt=vn.getUniforms(),ii=mt.uniforms;if(Te.useProgram(vn.program)&&(Wi=!0,yn=!0,An=!0),$.id!==L&&(L=$.id,yn=!0),Wi||O!==P){if(Vt.setValue(ne,"projectionMatrix",P.projectionMatrix),Xe.logarithmicDepthBuffer&&Vt.setValue(ne,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),O!==P&&(O=P,yn=!0,An=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const Rt=Vt.map.cameraPosition;Rt!==void 0&&Rt.setValue(ne,Le.setFromMatrixPosition(P.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Vt.setValue(ne,"isOrthographic",P.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||he.isSkinnedMesh)&&Vt.setValue(ne,"viewMatrix",P.matrixWorldInverse)}if(he.isSkinnedMesh){Vt.setOptional(ne,he,"bindMatrix"),Vt.setOptional(ne,he,"bindMatrixInverse");const Rt=he.skeleton;Rt&&(Xe.floatVertexTextures?(Rt.boneTexture===null&&Rt.computeBoneTexture(),Vt.setValue(ne,"boneTexture",Rt.boneTexture,de),Vt.setValue(ne,"boneTextureSize",Rt.boneTextureSize)):Vt.setOptional(ne,Rt,"boneMatrices"))}return!!Q&&(Q.morphAttributes.position!==void 0||Q.morphAttributes.normal!==void 0)&&be.update(he,Q,$,vn),(yn||mt.receiveShadow!==he.receiveShadow)&&(mt.receiveShadow=he.receiveShadow,Vt.setValue(ne,"receiveShadow",he.receiveShadow)),yn&&(Vt.setValue(ne,"toneMappingExposure",S.toneMappingExposure),mt.needsLights&&Io(ii,An),tt&&$.fog&&ft.refreshFogUniforms(ii,tt),ft.refreshMaterialUniforms(ii,$,A,ge,oe),_i.upload(ne,mt.uniformsList,ii,de)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(_i.upload(ne,mt.uniformsList,ii,de),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Vt.setValue(ne,"center",he.center),Vt.setValue(ne,"modelViewMatrix",he.modelViewMatrix),Vt.setValue(ne,"normalMatrix",he.normalMatrix),Vt.setValue(ne,"modelMatrix",he.matrixWorld),vn}function Io(P,j){P.ambientLightColor.needsUpdate=j,P.lightProbe.needsUpdate=j,P.directionalLights.needsUpdate=j,P.directionalLightShadows.needsUpdate=j,P.pointLights.needsUpdate=j,P.pointLightShadows.needsUpdate=j,P.spotLights.needsUpdate=j,P.spotLightShadows.needsUpdate=j,P.rectAreaLights.needsUpdate=j,P.hemisphereLights.needsUpdate=j}function ws(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(P,j,Q){Qe.get(P.texture).__webglTexture=j,Qe.get(P.depthTexture).__webglTexture=Q;const $=Qe.get(P);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=Q===void 0,$.__autoAllocateDepthBuffer||P.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),P.useRenderToTexture=!1,P.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(P,j){const Q=Qe.get(P);Q.__webglFramebuffer=j,Q.__useDefaultFramebuffer=j===void 0},this.setRenderTarget=function(P,j=0,Q=0){z=P,x=j,y=Q;let $=!0;if(P){const ot=Qe.get(P);ot.__useDefaultFramebuffer!==void 0?(Te.bindFramebuffer(36160,null),$=!1):ot.__webglFramebuffer===void 0?de.setupRenderTarget(P):ot.__hasExternalTextures&&de.rebindTextures(P,Qe.get(P.texture).__webglTexture,Qe.get(P.depthTexture).__webglTexture)}let he=null,tt=!1,nt=!1;if(P){const ot=P.texture;(ot.isDataTexture3D||ot.isDataTexture2DArray)&&(nt=!0);const yt=Qe.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(he=yt[j],tt=!0):P.useRenderbuffer?he=Qe.get(P).__webglMultisampledFramebuffer:he=yt,f.copy(P.viewport),W.copy(P.scissor),ae=P.scissorTest}else f.copy(Z).multiplyScalar(A).floor(),W.copy(K).multiplyScalar(A).floor(),ae=Y;if(Te.bindFramebuffer(36160,he)&&Xe.drawBuffers&&$&&Te.drawBuffers(P,he),Te.viewport(f),Te.scissor(W),Te.setScissorTest(ae),tt){const ot=Qe.get(P.texture);ne.framebufferTexture2D(36160,36064,34069+j,ot.__webglTexture,Q)}else if(nt){const ot=Qe.get(P.texture),yt=j||0;ne.framebufferTextureLayer(36160,36064,ot.__webglTexture,Q||0,yt)}L=-1},this.readRenderTargetPixels=function(P,j,Q,$,he,tt,nt){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let st=Qe.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&nt!==void 0&&(st=st[nt]),st){Te.bindFramebuffer(36160,st);try{const ot=P.texture,yt=ot.format,lt=ot.type;if(yt!==cn&&ke.convert(yt)!==ne.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const dt=lt===Zi&&(Oe.has("EXT_color_buffer_half_float")||Xe.isWebGL2&&Oe.has("EXT_color_buffer_float"));if(lt!==ui&&ke.convert(lt)!==ne.getParameter(35738)&&!(lt===Ni&&(Xe.isWebGL2||Oe.has("OES_texture_float")||Oe.has("WEBGL_color_buffer_float")))&&!dt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne.checkFramebufferStatus(36160)===36053?j>=0&&j<=P.width-$&&Q>=0&&Q<=P.height-he&&ne.readPixels(j,Q,$,he,ke.convert(yt),ke.convert(lt),tt):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const ot=z!==null?Qe.get(z).__webglFramebuffer:null;Te.bindFramebuffer(36160,ot)}}},this.copyFramebufferToTexture=function(P,j,Q=0){if(j.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const $=Math.pow(2,-Q),he=Math.floor(j.image.width*$),tt=Math.floor(j.image.height*$);de.setTexture2D(j,0),ne.copyTexSubImage2D(3553,Q,0,0,P.x,P.y,he,tt),Te.unbindTexture()},this.copyTextureToTexture=function(P,j,Q,$=0){const he=j.image.width,tt=j.image.height,nt=ke.convert(Q.format),st=ke.convert(Q.type);de.setTexture2D(Q,0),ne.pixelStorei(37440,Q.flipY),ne.pixelStorei(37441,Q.premultiplyAlpha),ne.pixelStorei(3317,Q.unpackAlignment),j.isDataTexture?ne.texSubImage2D(3553,$,P.x,P.y,he,tt,nt,st,j.image.data):j.isCompressedTexture?ne.compressedTexSubImage2D(3553,$,P.x,P.y,j.mipmaps[0].width,j.mipmaps[0].height,nt,j.mipmaps[0].data):ne.texSubImage2D(3553,$,P.x,P.y,nt,st,j.image),$===0&&Q.generateMipmaps&&ne.generateMipmap(3553),Te.unbindTexture()},this.copyTextureToTexture3D=function(P,j,Q,$,he=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const tt=P.max.x-P.min.x+1,nt=P.max.y-P.min.y+1,st=P.max.z-P.min.z+1,ot=ke.convert($.format),yt=ke.convert($.type);let lt;if($.isDataTexture3D)de.setTexture3D($,0),lt=32879;else if($.isDataTexture2DArray)de.setTexture2DArray($,0),lt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ne.pixelStorei(37440,$.flipY),ne.pixelStorei(37441,$.premultiplyAlpha),ne.pixelStorei(3317,$.unpackAlignment);const dt=ne.getParameter(3314),Dt=ne.getParameter(32878),Hn=ne.getParameter(3316),jn=ne.getParameter(3315),mt=ne.getParameter(32877),hn=Q.isCompressedTexture?Q.mipmaps[0]:Q.image;ne.pixelStorei(3314,hn.width),ne.pixelStorei(32878,hn.height),ne.pixelStorei(3316,P.min.x),ne.pixelStorei(3315,P.min.y),ne.pixelStorei(32877,P.min.z),Q.isDataTexture||Q.isDataTexture3D?ne.texSubImage3D(lt,he,j.x,j.y,j.z,tt,nt,st,ot,yt,hn.data):Q.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ne.compressedTexSubImage3D(lt,he,j.x,j.y,j.z,tt,nt,st,ot,hn.data)):ne.texSubImage3D(lt,he,j.x,j.y,j.z,tt,nt,st,ot,yt,hn),ne.pixelStorei(3314,dt),ne.pixelStorei(32878,Dt),ne.pixelStorei(3316,Hn),ne.pixelStorei(3315,jn),ne.pixelStorei(32877,mt),he===0&&$.generateMipmaps&&ne.generateMipmap(lt),Te.unbindTexture()},this.initTexture=function(P){de.setTexture2D(P,0),Te.unbindTexture()},this.resetState=function(){x=0,y=0,z=null,Te.reset(),He.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Tt.prototype.isWebGLRenderer=!0;class Py extends Tt{}Py.prototype.isWebGL1Renderer=!0;class Xu extends bt{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}Xu.prototype.isScene=!0;class os{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=$r,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=kn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=kn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=kn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}os.prototype.isInterleavedBuffer=!0;const kt=new B;class as{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.applyMatrix4(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.applyNormalMatrix(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)kt.x=this.getX(t),kt.y=this.getY(t),kt.z=this.getZ(t),kt.transformDirection(e),this.setXYZ(t,kt.x,kt.y,kt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Jt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new as(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}as.prototype.isInterleavedBufferAttribute=!0;class Yu extends on{constructor(e){super();this.type="SpriteMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}Yu.prototype.isSpriteMaterial=!0;let Sr;const ls=new B,Tr=new B,Er=new B,Ar=new ye,cs=new ye,Ju=new Ke,mo=new B,us=new B,go=new B,Zu=new ye,ol=new ye,$u=new ye;class Dy extends bt{constructor(e){super();if(this.type="Sprite",Sr===void 0){Sr=new Bt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new os(t,5);Sr.setIndex([0,1,2,0,2,3]),Sr.setAttribute("position",new as(n,3,0,!1)),Sr.setAttribute("uv",new as(n,2,3,!1))}this.geometry=Sr,this.material=e!==void 0?e:new Yu,this.center=new ye(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Tr.setFromMatrixScale(this.matrixWorld),Ju.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Er.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Tr.multiplyScalar(-Er.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;vo(mo.set(-.5,-.5,0),Er,a,Tr,i,s),vo(us.set(.5,-.5,0),Er,a,Tr,i,s),vo(go.set(.5,.5,0),Er,a,Tr,i,s),Zu.set(0,0),ol.set(1,0),$u.set(1,1);let l=e.ray.intersectTriangle(mo,us,go,!1,ls);if(l===null&&(vo(us.set(-.5,.5,0),Er,a,Tr,i,s),ol.set(0,1),l=e.ray.intersectTriangle(mo,go,us,!1,ls),l===null))return;const h=e.ray.origin.distanceTo(ls);h<e.near||h>e.far||t.push({distance:h,point:ls.clone(),uv:Wt.getUV(ls,mo,us,go,Zu,ol,$u,new ye),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}Dy.prototype.isSprite=!0;function vo(r,e,t,n,i,s){Ar.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(cs.x=s*Ar.x-i*Ar.y,cs.y=i*Ar.x+s*Ar.y):cs.copy(Ar),r.copy(e),r.x+=cs.x,r.y+=cs.y,r.applyMatrix4(Ju)}const Ku=new B,Qu=new Ct,eh=new Ct,Iy=new B,th=new Ke;class nh extends mn{constructor(e,t){super(e,t);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ke,this.bindMatrixInverse=new Ke}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ct,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Qu.fromBufferAttribute(i.attributes.skinIndex,e),eh.fromBufferAttribute(i.attributes.skinWeight,e),Ku.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=eh.getComponent(s);if(a!==0){const l=Qu.getComponent(s);th.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(Iy.copy(Ku).applyMatrix4(th),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}nh.prototype.isSkinnedMesh=!0;class Ny extends bt{constructor(){super();this.type="Bone"}}Ny.prototype.isBone=!0;class Fy extends Zt{constructor(e=null,t=1,n=1,i,s,a,l,h,u=Yt,p=Yt,m,v){super(null,a,l,h,u,p,i,s,m,v);this.image={data:e,width:t,height:n},this.magFilter=u,this.minFilter=p,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Fy.prototype.isDataTexture=!0;class al extends Jt{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(e,t,n);this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}al.prototype.isInstancedBufferAttribute=!0;const ih=new Ke,rh=new Ke,yo=[],hs=new mn;class By extends mn{constructor(e,t,n){super(e,t);this.instanceMatrix=new al(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(hs.geometry=this.geometry,hs.material=this.material,hs.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,ih),rh.multiplyMatrices(n,ih),hs.matrixWorld=rh,hs.raycast(e,yo);for(let a=0,l=yo.length;a<l;a++){const h=yo[a];h.instanceId=s,h.object=this,t.push(h)}yo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new al(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}By.prototype.isInstancedMesh=!0;class fs extends on{constructor(e){super();this.type="LineBasicMaterial",this.color=new We(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}fs.prototype.isLineBasicMaterial=!0;const sh=new B,oh=new B,ah=new Ke,ll=new lr,xo=new ar;class cl extends bt{constructor(e=new Bt,t=new fs){super();this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)sh.fromBufferAttribute(t,i-1),oh.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=sh.distanceTo(oh);e.setAttribute("lineDistance",new $t(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xo.copy(n.boundingSphere),xo.applyMatrix4(i),xo.radius+=s,e.ray.intersectsSphere(xo)===!1)return;ah.copy(i).invert(),ll.copy(e.ray).applyMatrix4(ah);const l=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l,u=new B,p=new B,m=new B,v=new B,_=this.isLineSegments?2:1;if(n.isBufferGeometry){const b=n.index,C=n.attributes.position;if(b!==null){const x=Math.max(0,a.start),y=Math.min(b.count,a.start+a.count);for(let z=x,L=y-1;z<L;z+=_){const O=b.getX(z),f=b.getX(z+1);if(u.fromBufferAttribute(C,O),p.fromBufferAttribute(C,f),ll.distanceSqToSegment(u,p,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const ae=e.ray.origin.distanceTo(v);ae<e.near||ae>e.far||t.push({distance:ae,point:m.clone().applyMatrix4(this.matrixWorld),index:z,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,a.start),y=Math.min(C.count,a.start+a.count);for(let z=x,L=y-1;z<L;z+=_){if(u.fromBufferAttribute(C,z),p.fromBufferAttribute(C,z+1),ll.distanceSqToSegment(u,p,v,m)>h)continue;v.applyMatrix4(this.matrixWorld);const f=e.ray.origin.distanceTo(v);f<e.near||f>e.far||t.push({distance:f,point:m.clone().applyMatrix4(this.matrixWorld),index:z,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const l=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}cl.prototype.isLine=!0;const lh=new B,ch=new B;class ul extends cl{constructor(e,t){super(e,t);this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)lh.fromBufferAttribute(t,i),ch.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+lh.distanceTo(ch);e.setAttribute("lineDistance",new $t(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}ul.prototype.isLineSegments=!0;class Oy extends cl{constructor(e,t){super(e,t);this.type="LineLoop"}}Oy.prototype.isLineLoop=!0;class uh extends on{constructor(e){super();this.type="PointsMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}uh.prototype.isPointsMaterial=!0;const hh=new Ke,hl=new lr,_o=new ar,bo=new B;class zy extends bt{constructor(e=new Bt,t=new uh){super();this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_o.copy(n.boundingSphere),_o.applyMatrix4(i),_o.radius+=s,e.ray.intersectsSphere(_o)===!1)return;hh.copy(i).invert(),hl.copy(e.ray).applyMatrix4(hh);const l=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l;if(n.isBufferGeometry){const u=n.index,m=n.attributes.position;if(u!==null){const v=Math.max(0,a.start),_=Math.min(u.count,a.start+a.count);for(let b=v,S=_;b<S;b++){const C=u.getX(b);bo.fromBufferAttribute(m,C),fh(bo,C,h,i,e,t,this)}}else{const v=Math.max(0,a.start),_=Math.min(m.count,a.start+a.count);for(let b=v,S=_;b<S;b++)bo.fromBufferAttribute(m,b),fh(bo,b,h,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const l=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}zy.prototype.isPoints=!0;function fh(r,e,t,n,i,s,a){const l=hl.distanceSqToPoint(r);if(l<t){const h=new B;hl.closestPointToPoint(r,h),h.applyMatrix4(n);const u=i.ray.origin.distanceTo(h);if(u<i.near||u>i.far)return;s.push({distance:u,distanceToRay:Math.sqrt(l),point:h,index:e,face:null,object:a})}}class Uy extends Zt{constructor(e,t,n,i,s,a,l,h,u){super(e,t,n,i,s,a,l,h,u);this.minFilter=a!==void 0?a:sn,this.magFilter=s!==void 0?s:sn,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Uy.prototype.isVideoTexture=!0;class Hy extends Zt{constructor(e,t,n){super({width:e,height:t});this.format=n,this.magFilter=Yt,this.minFilter=Yt,this.generateMipmaps=!1,this.needsUpdate=!0}}Hy.prototype.isFramebufferTexture=!0;class ky extends Zt{constructor(e,t,n,i,s,a,l,h,u,p,m,v){super(null,a,l,h,u,p,i,s,m,v);this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ky.prototype.isCompressedTexture=!0;class Vy extends Zt{constructor(e,t,n,i,s,a,l,h,u){super(e,t,n,i,s,a,l,h,u);this.needsUpdate=!0}}Vy.prototype.isCanvasTexture=!0;new B;new B;new B;new Wt;class Pn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let l=0,h=s-1,u;for(;l<=h;)if(i=Math.floor(l+(h-l)/2),u=n[i]-a,u<0)l=i+1;else if(u>0)h=i-1;else{h=i;break}if(i=h,n[i]===a)return i/(s-1);const p=n[i],v=n[i+1]-p,_=(a-p)/v;return(i+_)/(s-1)}getTangent(e,t){const n=1e-4;let i=e-n,s=e+n;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),l=this.getPoint(s),h=t||(a.isVector2?new ye:new B);return h.copy(l).sub(a).normalize(),h}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new B,i=[],s=[],a=[],l=new B,h=new Ke;for(let _=0;_<=e;_++){const b=_/e;i[_]=this.getTangentAt(b,new B)}s[0]=new B,a[0]=new B;let u=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),v=Math.abs(i[0].z);p<=u&&(u=p,n.set(1,0,0)),m<=u&&(u=m,n.set(0,1,0)),v<=u&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],l),a[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),a[_]=a[_-1].clone(),l.crossVectors(i[_-1],i[_]),l.length()>Number.EPSILON){l.normalize();const b=Math.acos(Sn(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(h.makeRotationAxis(l,b))}a[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Sn(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(l.crossVectors(s[0],s[e]))>0&&(_=-_);for(let b=1;b<=e;b++)s[b].applyMatrix4(h.makeRotationAxis(i[b],_*b)),a[b].crossVectors(i[b],s[b])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class wo extends Pn{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,l=!1,h=0){super();this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=l,this.aRotation=h}getPoint(e,t){const n=t||new ye,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const l=this.aStartAngle+e*s;let h=this.aX+this.xRadius*Math.cos(l),u=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),v=h-this.aX,_=u-this.aY;h=v*p-_*m+this.aX,u=v*m+_*p+this.aY}return n.set(h,u)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}wo.prototype.isEllipseCurve=!0;class dh extends wo{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a);this.type="ArcCurve"}}dh.prototype.isArcCurve=!0;function fl(){let r=0,e=0,t=0,n=0;function i(s,a,l,h){r=s,e=l,t=-3*s+3*a-2*l-h,n=2*s-2*a+l+h}return{initCatmullRom:function(s,a,l,h,u){i(a,l,u*(l-s),u*(h-a))},initNonuniformCatmullRom:function(s,a,l,h,u,p,m){let v=(a-s)/u-(l-s)/(u+p)+(l-a)/p,_=(l-a)/p-(h-a)/(p+m)+(h-l)/m;v*=p,_*=p,i(a,l,v,_)},calc:function(s){const a=s*s,l=a*s;return r+e*s+t*a+n*l}}}const Mo=new B,dl=new fl,pl=new fl,ml=new fl;class ph extends Pn{constructor(e=[],t=!1,n="centripetal",i=.5){super();this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new B){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let l=Math.floor(a),h=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s)+1)*s:h===0&&l===s-1&&(l=s-2,h=1);let u,p;this.closed||l>0?u=i[(l-1)%s]:(Mo.subVectors(i[0],i[1]).add(i[0]),u=Mo);const m=i[l%s],v=i[(l+1)%s];if(this.closed||l+2<s?p=i[(l+2)%s]:(Mo.subVectors(i[s-1],i[s-2]).add(i[s-1]),p=Mo),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let b=Math.pow(u.distanceToSquared(m),_),S=Math.pow(m.distanceToSquared(v),_),C=Math.pow(v.distanceToSquared(p),_);S<1e-4&&(S=1),b<1e-4&&(b=S),C<1e-4&&(C=S),dl.initNonuniformCatmullRom(u.x,m.x,v.x,p.x,b,S,C),pl.initNonuniformCatmullRom(u.y,m.y,v.y,p.y,b,S,C),ml.initNonuniformCatmullRom(u.z,m.z,v.z,p.z,b,S,C)}else this.curveType==="catmullrom"&&(dl.initCatmullRom(u.x,m.x,v.x,p.x,this.tension),pl.initCatmullRom(u.y,m.y,v.y,p.y,this.tension),ml.initCatmullRom(u.z,m.z,v.z,p.z,this.tension));return n.set(dl.calc(h),pl.calc(h),ml.calc(h)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new B().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}ph.prototype.isCatmullRomCurve3=!0;function mh(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,l=r*r,h=r*l;return(2*t-2*n+s+a)*h+(-3*t+3*n-2*s-a)*l+s*r+t}function Gy(r,e){const t=1-r;return t*t*e}function Wy(r,e){return 2*(1-r)*r*e}function qy(r,e){return r*r*e}function ds(r,e,t,n){return Gy(r,e)+Wy(r,t)+qy(r,n)}function jy(r,e){const t=1-r;return t*t*t*e}function Xy(r,e){const t=1-r;return 3*t*t*r*e}function Yy(r,e){return 3*(1-r)*r*r*e}function Jy(r,e){return r*r*r*e}function ps(r,e,t,n,i){return jy(r,e)+Xy(r,t)+Yy(r,n)+Jy(r,i)}class gl extends Pn{constructor(e=new ye,t=new ye,n=new ye,i=new ye){super();this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ye){const n=t,i=this.v0,s=this.v1,a=this.v2,l=this.v3;return n.set(ps(e,i.x,s.x,a.x,l.x),ps(e,i.y,s.y,a.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}gl.prototype.isCubicBezierCurve=!0;class gh extends Pn{constructor(e=new B,t=new B,n=new B,i=new B){super();this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new B){const n=t,i=this.v0,s=this.v1,a=this.v2,l=this.v3;return n.set(ps(e,i.x,s.x,a.x,l.x),ps(e,i.y,s.y,a.y,l.y),ps(e,i.z,s.z,a.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}gh.prototype.isCubicBezierCurve3=!0;class So extends Pn{constructor(e=new ye,t=new ye){super();this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ye){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ye;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}So.prototype.isLineCurve=!0;class Zy extends Pn{constructor(e=new B,t=new B){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new B){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vl extends Pn{constructor(e=new ye,t=new ye,n=new ye){super();this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ye){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(ds(e,i.x,s.x,a.x),ds(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}vl.prototype.isQuadraticBezierCurve=!0;class vh extends Pn{constructor(e=new B,t=new B,n=new B){super();this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new B){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(ds(e,i.x,s.x,a.x),ds(e,i.y,s.y,a.y),ds(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}vh.prototype.isQuadraticBezierCurve3=!0;class yl extends Pn{constructor(e=[]){super();this.type="SplineCurve",this.points=e}getPoint(e,t=new ye){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),l=s-a,h=i[a===0?a:a-1],u=i[a],p=i[a>i.length-2?i.length-1:a+1],m=i[a>i.length-3?i.length-1:a+2];return n.set(mh(l,h.x,u.x,p.x,m.x),mh(l,h.y,u.y,p.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ye().fromArray(i))}return this}}yl.prototype.isSplineCurve=!0;var yh=Object.freeze({__proto__:null,ArcCurve:dh,CatmullRomCurve3:ph,CubicBezierCurve:gl,CubicBezierCurve3:gh,EllipseCurve:wo,LineCurve:So,LineCurve3:Zy,QuadraticBezierCurve:vl,QuadraticBezierCurve3:vh,SplineCurve:yl});class $y extends Pn{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new So(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,l=this.curves[s],h=l.getLength(),u=h===0?0:1-a/h;return l.getPointAt(u,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],l=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,h=a.getPoints(l);for(let u=0;u<h.length;u++){const p=h[u];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new yh[i.type]().fromJSON(i))}return this}}class xl extends $y{constructor(e){super();this.type="Path",this.currentPoint=new ye,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new So(this.currentPoint.clone(),new ye(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new vl(this.currentPoint.clone(),new ye(e,t),new ye(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const l=new gl(this.currentPoint.clone(),new ye(e,t),new ye(n,i),new ye(s,a));return this.curves.push(l),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new yl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const l=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(e+l,t+h,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,l,h){const u=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+u,t+p,n,i,s,a,l,h),this}absellipse(e,t,n,i,s,a,l,h){const u=new wo(e,t,n,i,s,a,l,h);if(this.curves.length>0){const m=u.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(u);const p=u.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ms extends xl{constructor(e){super(e);this.uuid=kn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new xl().fromJSON(i))}return this}}const Ky={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=xh(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let l,h,u,p,m,v,_;if(n&&(s=ix(r,e,s,t)),r.length>80*t){l=u=r[0],h=p=r[1];for(let b=t;b<i;b+=t)m=r[b],v=r[b+1],m<l&&(l=m),v<h&&(h=v),m>u&&(u=m),v>p&&(p=v);_=Math.max(u-l,p-h),_=_!==0?1/_:0}return gs(s,a,t,l,h,_),a}};function xh(r,e,t,n,i){let s,a;if(i===px(r,e,t,n)>0)for(s=e;s<t;s+=n)a=wh(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=wh(s,r[s],r[s+1],a);return a&&To(a,a.next)&&(ys(a),a=a.next),a}function bi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(To(t,t.next)||Ut(t.prev,t,t.next)===0)){if(ys(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function gs(r,e,t,n,i,s,a){if(!r)return;!a&&s&&lx(r,n,i,s);let l=r,h,u;for(;r.prev!==r.next;){if(h=r.prev,u=r.next,s?ex(r,n,i,s):Qy(r)){e.push(h.i/t),e.push(r.i/t),e.push(u.i/t),ys(r),r=u.next,l=u.next;continue}if(r=u,r===l){a?a===1?(r=tx(bi(r),e,t),gs(r,e,t,n,i,s,2)):a===2&&nx(r,e,t,n,i,s):gs(bi(r),e,t,n,i,s,1);break}}}function Qy(r){const e=r.prev,t=r,n=r.next;if(Ut(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(Cr(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&Ut(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function ex(r,e,t,n){const i=r.prev,s=r,a=r.next;if(Ut(i,s,a)>=0)return!1;const l=i.x<s.x?i.x<a.x?i.x:a.x:s.x<a.x?s.x:a.x,h=i.y<s.y?i.y<a.y?i.y:a.y:s.y<a.y?s.y:a.y,u=i.x>s.x?i.x>a.x?i.x:a.x:s.x>a.x?s.x:a.x,p=i.y>s.y?i.y>a.y?i.y:a.y:s.y>a.y?s.y:a.y,m=_l(l,h,e,t,n),v=_l(u,p,e,t,n);let _=r.prevZ,b=r.nextZ;for(;_&&_.z>=m&&b&&b.z<=v;){if(_!==r.prev&&_!==r.next&&Cr(i.x,i.y,s.x,s.y,a.x,a.y,_.x,_.y)&&Ut(_.prev,_,_.next)>=0||(_=_.prevZ,b!==r.prev&&b!==r.next&&Cr(i.x,i.y,s.x,s.y,a.x,a.y,b.x,b.y)&&Ut(b.prev,b,b.next)>=0))return!1;b=b.nextZ}for(;_&&_.z>=m;){if(_!==r.prev&&_!==r.next&&Cr(i.x,i.y,s.x,s.y,a.x,a.y,_.x,_.y)&&Ut(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;b&&b.z<=v;){if(b!==r.prev&&b!==r.next&&Cr(i.x,i.y,s.x,s.y,a.x,a.y,b.x,b.y)&&Ut(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function tx(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!To(i,s)&&_h(i,n,n.next,s)&&vs(i,s)&&vs(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),ys(n),ys(n.next),n=r=s),n=n.next}while(n!==r);return bi(n)}function nx(r,e,t,n,i,s){let a=r;do{let l=a.next.next;for(;l!==a.prev;){if(a.i!==l.i&&hx(a,l)){let h=bh(a,l);a=bi(a,a.next),h=bi(h,h.next),gs(a,e,t,n,i,s),gs(h,e,t,n,i,s);return}l=l.next}a=a.next}while(a!==r)}function ix(r,e,t,n){const i=[];let s,a,l,h,u;for(s=0,a=e.length;s<a;s++)l=e[s]*n,h=s<a-1?e[s+1]*n:r.length,u=xh(r,l,h,n,!1),u===u.next&&(u.steiner=!0),i.push(ux(u));for(i.sort(rx),s=0;s<i.length;s++)sx(i[s],t),t=bi(t,t.next);return t}function rx(r,e){return r.x-e.x}function sx(r,e){if(e=ox(r,e),e){const t=bh(e,r);bi(e,e.next),bi(t,t.next)}}function ox(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,a;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const v=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(v<=n&&v>s){if(s=v,v===n){if(i===t.y)return t;if(i===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(n===s)return a;const l=a,h=a.x,u=a.y;let p=1/0,m;t=a;do n>=t.x&&t.x>=h&&n!==t.x&&Cr(i<u?n:s,i,h,u,i<u?s:n,i,t.x,t.y)&&(m=Math.abs(i-t.y)/(n-t.x),vs(t,r)&&(m<p||m===p&&(t.x>a.x||t.x===a.x&&ax(a,t)))&&(a=t,p=m)),t=t.next;while(t!==l);return a}function ax(r,e){return Ut(r.prev,r,e.prev)<0&&Ut(e.next,r,r.next)<0}function lx(r,e,t,n){let i=r;do i.z===null&&(i.z=_l(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,cx(i)}function cx(r){let e,t,n,i,s,a,l,h,u=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,l=0,e=0;e<u&&(l++,n=n.nextZ,!!n);e++);for(h=u;l>0||h>0&&n;)l!==0&&(h===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,l--):(i=n,n=n.nextZ,h--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,u*=2}while(a>1);return r}function _l(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function ux(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Cr(r,e,t,n,i,s,a,l){return(i-a)*(e-l)-(r-a)*(s-l)>=0&&(r-a)*(n-l)-(t-a)*(e-l)>=0&&(t-a)*(s-l)-(i-a)*(n-l)>=0}function hx(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!fx(r,e)&&(vs(r,e)&&vs(e,r)&&dx(r,e)&&(Ut(r.prev,r,e.prev)||Ut(r,e.prev,e))||To(r,e)&&Ut(r.prev,r,r.next)>0&&Ut(e.prev,e,e.next)>0)}function Ut(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function To(r,e){return r.x===e.x&&r.y===e.y}function _h(r,e,t,n){const i=Ao(Ut(r,e,t)),s=Ao(Ut(r,e,n)),a=Ao(Ut(t,n,r)),l=Ao(Ut(t,n,e));return!!(i!==s&&a!==l||i===0&&Eo(r,t,e)||s===0&&Eo(r,n,e)||a===0&&Eo(t,r,n)||l===0&&Eo(t,e,n))}function Eo(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Ao(r){return r>0?1:r<0?-1:0}function fx(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&_h(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function vs(r,e){return Ut(r.prev,r,r.next)<0?Ut(r,e,r.next)>=0&&Ut(r,r.prev,e)>=0:Ut(r,e,r.prev)<0||Ut(r,r.next,e)<0}function dx(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function bh(r,e){const t=new bl(r.i,r.x,r.y),n=new bl(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function wh(r,e,t,n){const i=new bl(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ys(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function bl(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function px(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class wi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return wi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Mh(e),Sh(n,e);let a=e.length;t.forEach(Mh);for(let h=0;h<t.length;h++)i.push(a),a+=t[h].length,Sh(n,t[h]);const l=Ky.triangulate(n,i);for(let h=0;h<l.length;h+=3)s.push(l.slice(h,h+3));return s}}function Mh(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Sh(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Lr extends Bt{constructor(e=new ms([new ye(.5,.5),new ye(-.5,.5),new ye(-.5,-.5),new ye(.5,-.5)]),t={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let l=0,h=e.length;l<h;l++){const u=e[l];a(u)}this.setAttribute("position",new $t(i,3)),this.setAttribute("uv",new $t(s,2)),this.computeVertexNormals();function a(l){const h=[],u=t.curveSegments!==void 0?t.curveSegments:12,p=t.steps!==void 0?t.steps:1;let m=t.depth!==void 0?t.depth:1,v=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,b=t.bevelSize!==void 0?t.bevelSize:_-.1,S=t.bevelOffset!==void 0?t.bevelOffset:0,C=t.bevelSegments!==void 0?t.bevelSegments:3;const x=t.extrudePath,y=t.UVGenerator!==void 0?t.UVGenerator:mx;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),m=t.amount);let z,L=!1,O,f,W,ae;x&&(z=x.getSpacedPoints(p),L=!0,v=!1,O=x.computeFrenetFrames(p,!1),f=new B,W=new B,ae=new B),v||(C=0,_=0,b=0,S=0);const Me=l.extractPoints(u);let ge=Me.shape;const A=Me.holes;if(!wi.isClockWise(ge)){ge=ge.reverse();for(let de=0,xe=A.length;de<xe;de++){const _e=A[de];wi.isClockWise(_e)&&(A[de]=_e.reverse())}}const X=wi.triangulateShape(ge,A),Z=ge;for(let de=0,xe=A.length;de<xe;de++){const _e=A[de];ge=ge.concat(_e)}function K(de,xe,_e){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),xe.clone().multiplyScalar(_e).add(de)}const Y=ge.length,ce=X.length;function ve(de,xe,_e){let Re,se,Fe;const et=de.x-xe.x,ft=de.y-xe.y,Mt=_e.x-de.x,vt=_e.y-de.y,D=et*et+ft*ft,R=et*vt-ft*Mt;if(Math.abs(R)>Number.EPSILON){const ie=Math.sqrt(D),be=Math.sqrt(Mt*Mt+vt*vt),Ie=xe.x-ft/ie,le=xe.y+et/ie,ke=_e.x-vt/be,He=_e.y+Mt/be,Ae=((ke-Ie)*vt-(He-le)*Mt)/(et*vt-ft*Mt);Re=Ie+et*Ae-de.x,se=le+ft*Ae-de.y;const Ce=Re*Re+se*se;if(Ce<=2)return new ye(Re,se);Fe=Math.sqrt(Ce/2)}else{let ie=!1;et>Number.EPSILON?Mt>Number.EPSILON&&(ie=!0):et<-Number.EPSILON?Mt<-Number.EPSILON&&(ie=!0):Math.sign(ft)===Math.sign(vt)&&(ie=!0),ie?(Re=-ft,se=et,Fe=Math.sqrt(D)):(Re=et,se=ft,Fe=Math.sqrt(D/2))}return new ye(Re/Fe,se/Fe)}const Ne=[];for(let de=0,xe=Z.length,_e=xe-1,Re=de+1;de<xe;de++,_e++,Re++)_e===xe&&(_e=0),Re===xe&&(Re=0),Ne[de]=ve(Z[de],Z[_e],Z[Re]);const oe=[];let ue,Le=Ne.concat();for(let de=0,xe=A.length;de<xe;de++){const _e=A[de];ue=[];for(let Re=0,se=_e.length,Fe=se-1,et=Re+1;Re<se;Re++,Fe++,et++)Fe===se&&(Fe=0),et===se&&(et=0),ue[Re]=ve(_e[Re],_e[Fe],_e[et]);oe.push(ue),Le=Le.concat(ue)}for(let de=0;de<C;de++){const xe=de/C,_e=_*Math.cos(xe*Math.PI/2),Re=b*Math.sin(xe*Math.PI/2)+S;for(let se=0,Fe=Z.length;se<Fe;se++){const et=K(Z[se],Ne[se],Re);Oe(et.x,et.y,-_e)}for(let se=0,Fe=A.length;se<Fe;se++){const et=A[se];ue=oe[se];for(let ft=0,Mt=et.length;ft<Mt;ft++){const vt=K(et[ft],ue[ft],Re);Oe(vt.x,vt.y,-_e)}}}const De=b+S;for(let de=0;de<Y;de++){const xe=v?K(ge[de],Le[de],De):ge[de];L?(W.copy(O.normals[0]).multiplyScalar(xe.x),f.copy(O.binormals[0]).multiplyScalar(xe.y),ae.copy(z[0]).add(W).add(f),Oe(ae.x,ae.y,ae.z)):Oe(xe.x,xe.y,0)}for(let de=1;de<=p;de++)for(let xe=0;xe<Y;xe++){const _e=v?K(ge[xe],Le[xe],De):ge[xe];L?(W.copy(O.normals[de]).multiplyScalar(_e.x),f.copy(O.binormals[de]).multiplyScalar(_e.y),ae.copy(z[de]).add(W).add(f),Oe(ae.x,ae.y,ae.z)):Oe(_e.x,_e.y,m/p*de)}for(let de=C-1;de>=0;de--){const xe=de/C,_e=_*Math.cos(xe*Math.PI/2),Re=b*Math.sin(xe*Math.PI/2)+S;for(let se=0,Fe=Z.length;se<Fe;se++){const et=K(Z[se],Ne[se],Re);Oe(et.x,et.y,m+_e)}for(let se=0,Fe=A.length;se<Fe;se++){const et=A[se];ue=oe[se];for(let ft=0,Mt=et.length;ft<Mt;ft++){const vt=K(et[ft],ue[ft],Re);L?Oe(vt.x,vt.y+z[p-1].y,z[p-1].x+_e):Oe(vt.x,vt.y,m+_e)}}}Ue(),ne();function Ue(){const de=i.length/3;if(v){let xe=0,_e=Y*xe;for(let Re=0;Re<ce;Re++){const se=X[Re];Xe(se[2]+_e,se[1]+_e,se[0]+_e)}xe=p+C*2,_e=Y*xe;for(let Re=0;Re<ce;Re++){const se=X[Re];Xe(se[0]+_e,se[1]+_e,se[2]+_e)}}else{for(let xe=0;xe<ce;xe++){const _e=X[xe];Xe(_e[2],_e[1],_e[0])}for(let xe=0;xe<ce;xe++){const _e=X[xe];Xe(_e[0]+Y*p,_e[1]+Y*p,_e[2]+Y*p)}}n.addGroup(de,i.length/3-de,0)}function ne(){const de=i.length/3;let xe=0;pt(Z,xe),xe+=Z.length;for(let _e=0,Re=A.length;_e<Re;_e++){const se=A[_e];pt(se,xe),xe+=se.length}n.addGroup(de,i.length/3-de,1)}function pt(de,xe){let _e=de.length;for(;--_e>=0;){const Re=_e;let se=_e-1;se<0&&(se=de.length-1);for(let Fe=0,et=p+C*2;Fe<et;Fe++){const ft=Y*Fe,Mt=Y*(Fe+1),vt=xe+Re+ft,D=xe+se+ft,R=xe+se+Mt,ie=xe+Re+Mt;Te(vt,D,R,ie)}}}function Oe(de,xe,_e){h.push(de),h.push(xe),h.push(_e)}function Xe(de,xe,_e){at(de),at(xe),at(_e);const Re=i.length/3,se=y.generateTopUV(n,i,Re-3,Re-2,Re-1);Qe(se[0]),Qe(se[1]),Qe(se[2])}function Te(de,xe,_e,Re){at(de),at(xe),at(Re),at(xe),at(_e),at(Re);const se=i.length/3,Fe=y.generateSideWallUV(n,i,se-6,se-3,se-2,se-1);Qe(Fe[0]),Qe(Fe[1]),Qe(Fe[3]),Qe(Fe[1]),Qe(Fe[2]),Qe(Fe[3])}function at(de){i.push(h[de*3+0]),i.push(h[de*3+1]),i.push(h[de*3+2])}function Qe(de){s.push(de.x),s.push(de.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return gx(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const l=t[e.shapes[s]];n.push(l)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new yh[i.type]().fromJSON(i)),new Lr(n,e.options)}}const mx={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],l=e[n*3],h=e[n*3+1],u=e[i*3],p=e[i*3+1];return[new ye(s,a),new ye(l,h),new ye(u,p)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],l=e[t*3+1],h=e[t*3+2],u=e[n*3],p=e[n*3+1],m=e[n*3+2],v=e[i*3],_=e[i*3+1],b=e[i*3+2],S=e[s*3],C=e[s*3+1],x=e[s*3+2];return Math.abs(l-p)<Math.abs(a-u)?[new ye(a,1-h),new ye(u,1-m),new ye(v,1-b),new ye(S,1-x)]:[new ye(l,1-h),new ye(p,1-m),new ye(_,1-b),new ye(C,1-x)]}};function gx(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class wl extends Bt{constructor(e=new ms([new ye(0,.5),new ye(-.5,-.5),new ye(.5,-.5)]),t=12){super();this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let l=0,h=0;if(Array.isArray(e)===!1)u(e);else for(let p=0;p<e.length;p++)u(e[p]),this.addGroup(l,h,p),l+=h,h=0;this.setIndex(n),this.setAttribute("position",new $t(i,3)),this.setAttribute("normal",new $t(s,3)),this.setAttribute("uv",new $t(a,2));function u(p){const m=i.length/3,v=p.extractPoints(t);let _=v.shape;const b=v.holes;wi.isClockWise(_)===!1&&(_=_.reverse());for(let C=0,x=b.length;C<x;C++){const y=b[C];wi.isClockWise(y)===!0&&(b[C]=y.reverse())}const S=wi.triangulateShape(_,b);for(let C=0,x=b.length;C<x;C++){const y=b[C];_=_.concat(y)}for(let C=0,x=_.length;C<x;C++){const y=_[C];i.push(y.x,y.y,0),s.push(0,0,1),a.push(y.x,y.y)}for(let C=0,x=S.length;C<x;C++){const y=S[C],z=y[0]+m,L=y[1]+m,O=y[2]+m;n.push(z,L,O),h+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return vx(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new wl(n,e.curveSegments)}}function vx(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class yx extends on{constructor(e){super();this.type="ShadowMaterial",this.color=new We(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}yx.prototype.isShadowMaterial=!0;class Th extends on{constructor(e){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new We(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Th.prototype.isMeshStandardMaterial=!0;class xx extends Th{constructor(e){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ye(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Sn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new We(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new We(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new We(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}xx.prototype.isMeshPhysicalMaterial=!0;class _x extends on{constructor(e){super();this.type="MeshPhongMaterial",this.color=new We(16777215),this.specular=new We(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}_x.prototype.isMeshPhongMaterial=!0;class bx extends on{constructor(e){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new We(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}bx.prototype.isMeshToonMaterial=!0;class wx extends on{constructor(e){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}wx.prototype.isMeshNormalMaterial=!0;class Mx extends on{constructor(e){super();this.type="MeshLambertMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Bs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Mx.prototype.isMeshLambertMaterial=!0;class Sx extends on{constructor(e){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new We(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tr,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}Sx.prototype.isMeshMatcapMaterial=!0;class Tx extends fs{constructor(e){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Tx.prototype.isLineDashedMaterial=!0;const Ot={arraySlice:function(r,e,t){return Ot.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const l=t[s]*e;for(let h=0;h!==e;++h)i[a++]=r[l+h]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let h=0;h<s.tracks.length;++h){const u=s.tracks[h],p=u.getValueSize(),m=[],v=[];for(let _=0;_<u.times.length;++_){const b=u.times[_]*i;if(!(b<t||b>=n)){m.push(u.times[_]);for(let S=0;S<p;++S)v.push(u.values[_*p+S])}}m.length!==0&&(u.times=Ot.convertArray(m,u.times.constructor),u.values=Ot.convertArray(v,u.values.constructor),a.push(u))}s.tracks=a;let l=1/0;for(let h=0;h<s.tracks.length;++h)l>s.tracks[h].times[0]&&(l=s.tracks[h].times[0]);for(let h=0;h<s.tracks.length;++h)s.tracks[h].shift(-1*l);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const l=t.tracks[a],h=l.ValueTypeName;if(h==="bool"||h==="string")continue;const u=r.tracks.find(function(x){return x.name===l.name&&x.ValueTypeName===h});if(u===void 0)continue;let p=0;const m=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let v=0;const _=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(v=_/3);const b=l.times.length-1;let S;if(s<=l.times[0]){const x=p,y=m-p;S=Ot.arraySlice(l.values,x,y)}else if(s>=l.times[b]){const x=b*m+p,y=x+m-p;S=Ot.arraySlice(l.values,x,y)}else{const x=l.createInterpolant(),y=p,z=m-p;x.evaluate(s),S=Ot.arraySlice(x.resultBuffer,y,z)}h==="quaternion"&&new pn().fromArray(S).normalize().conjugate().toArray(S);const C=u.times.length;for(let x=0;x<C;++x){const y=x*_+v;if(h==="quaternion")pn.multiplyQuaternionsFlat(u.values,y,S,0,u.values,y);else{const z=_-v*2;for(let L=0;L<z;++L)u.values[y+L]-=S[L]}}}return r.blendMode=Gc,r}};class Mi{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let l=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===l)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const l=t[1];e<l&&(n=2,s=l);for(let h=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===h)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const l=n+a>>>1;e<t[l]?a=l:n=l+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Mi.prototype.beforeStart_=Mi.prototype.copySampleValue_;Mi.prototype.afterEnd_=Mi.prototype.copySampleValue_;class Ex extends Mi{constructor(e,t,n,i){super(e,t,n,i);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Qi,endingEnd:Qi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,l=i[s],h=i[a];if(l===void 0)switch(this.getSettings_().endingStart){case er:s=e,l=2*t-n;break;case Vs:s=i.length-2,l=t+i[s]-i[s+1];break;default:s=e,l=n}if(h===void 0)switch(this.getSettings_().endingEnd){case er:a=e,h=2*n-t;break;case Vs:a=1,h=n+i[1]-i[0];break;default:a=e-1,h=t}const u=(n-t)*.5,p=this.valueSize;this._weightPrev=u/(t-l),this._weightNext=u/(h-n),this._offsetPrev=s*p,this._offsetNext=a*p}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,l=this.valueSize,h=e*l,u=h-l,p=this._offsetPrev,m=this._offsetNext,v=this._weightPrev,_=this._weightNext,b=(n-t)/(i-t),S=b*b,C=S*b,x=-v*C+2*v*S-v*b,y=(1+v)*C+(-1.5-2*v)*S+(-.5+v)*b+1,z=(-1-_)*C+(1.5+_)*S+.5*b,L=_*C-_*S;for(let O=0;O!==l;++O)s[O]=x*a[p+O]+y*a[u+O]+z*a[h+O]+L*a[m+O];return s}}class Eh extends Mi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,l=this.valueSize,h=e*l,u=h-l,p=(n-t)/(i-t),m=1-p;for(let v=0;v!==l;++v)s[v]=a[u+v]*m+a[h+v]*p;return s}}class Ax extends Mi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Wn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ot.convertArray(t,this.TimeBufferType),this.values=Ot.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ot.convertArray(e.times,Array),values:Ot.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ax(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Eh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Ex(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Hs:t=this.InterpolantFactoryMethodDiscrete;break;case ks:t=this.InterpolantFactoryMethodLinear;break;case ya:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Hs;case this.InterpolantFactoryMethodLinear:return ks;case this.InterpolantFactoryMethodSmooth:return ya}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const l=this.getValueSize();this.times=Ot.arraySlice(n,s,a),this.values=Ot.arraySlice(this.values,s*l,a*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let l=0;l!==s;l++){const h=n[l];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,h),e=!1;break}if(a!==null&&a>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,h,a),e=!1;break}a=h}if(i!==void 0&&Ot.isTypedArray(i))for(let l=0,h=i.length;l!==h;++l){const u=i[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){const e=Ot.arraySlice(this.times),t=Ot.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ya,s=e.length-1;let a=1;for(let l=1;l<s;++l){let h=!1;const u=e[l],p=e[l+1];if(u!==p&&(l!==1||u!==e[0]))if(i)h=!0;else{const m=l*n,v=m-n,_=m+n;for(let b=0;b!==n;++b){const S=t[m+b];if(S!==t[v+b]||S!==t[_+b]){h=!0;break}}}if(h){if(l!==a){e[a]=e[l];const m=l*n,v=a*n;for(let _=0;_!==n;++_)t[v+_]=t[m+_]}++a}}if(s>0){e[a]=e[s];for(let l=s*n,h=a*n,u=0;u!==n;++u)t[h+u]=t[l+u];++a}return a!==e.length?(this.times=Ot.arraySlice(e,0,a),this.values=Ot.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=Ot.arraySlice(this.times,0),t=Ot.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Wn.prototype.TimeBufferType=Float32Array;Wn.prototype.ValueBufferType=Float32Array;Wn.prototype.DefaultInterpolation=ks;class Rr extends Wn{}Rr.prototype.ValueTypeName="bool";Rr.prototype.ValueBufferType=Array;Rr.prototype.DefaultInterpolation=Hs;Rr.prototype.InterpolantFactoryMethodLinear=void 0;Rr.prototype.InterpolantFactoryMethodSmooth=void 0;class Ah extends Wn{}Ah.prototype.ValueTypeName="color";class Co extends Wn{}Co.prototype.ValueTypeName="number";class Cx extends Mi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,l=this.valueSize,h=(n-t)/(i-t);let u=e*l;for(let p=u+l;u!==p;u+=4)pn.slerpFlat(s,0,a,u-l,a,u,h);return s}}class xs extends Wn{InterpolantFactoryMethodLinear(e){return new Cx(this.times,this.values,this.getValueSize(),e)}}xs.prototype.ValueTypeName="quaternion";xs.prototype.DefaultInterpolation=ks;xs.prototype.InterpolantFactoryMethodSmooth=void 0;class Pr extends Wn{}Pr.prototype.ValueTypeName="string";Pr.prototype.ValueBufferType=Array;Pr.prototype.DefaultInterpolation=Hs;Pr.prototype.InterpolantFactoryMethodLinear=void 0;Pr.prototype.InterpolantFactoryMethodSmooth=void 0;class Lo extends Wn{}Lo.prototype.ValueTypeName="vector";class Ch{constructor(e,t=-1,n,i=xa){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=kn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,l=n.length;a!==l;++a)t.push(Rx(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Wn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let l=0;l<s;l++){let h=[],u=[];h.push((l+s-1)%s,l,(l+1)%s),u.push(0,1,0);const p=Ot.getKeyframeOrder(h);h=Ot.sortedArray(h,1,p),u=Ot.sortedArray(u,1,p),!i&&h[0]===0&&(h.push(s),u.push(u[0])),a.push(new Co(".morphTargetInfluences["+t[l].name+"]",h,u).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let l=0,h=e.length;l<h;l++){const u=e[l],p=u.name.match(s);if(p&&p.length>1){const m=p[1];let v=i[m];v||(i[m]=v=[]),v.push(u)}}const a=[];for(const l in i)a.push(this.CreateFromMorphTargetSequence(l,i[l],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,v,_,b,S){if(_.length!==0){const C=[],x=[];Ot.flattenJSON(_,C,x,b),C.length!==0&&S.push(new m(v,C,x))}},i=[],s=e.name||"default",a=e.fps||30,l=e.blendMode;let h=e.length||-1;const u=e.hierarchy||[];for(let m=0;m<u.length;m++){const v=u[m].keys;if(!(!v||v.length===0))if(v[0].morphTargets){const _={};let b;for(b=0;b<v.length;b++)if(v[b].morphTargets)for(let S=0;S<v[b].morphTargets.length;S++)_[v[b].morphTargets[S]]=-1;for(const S in _){const C=[],x=[];for(let y=0;y!==v[b].morphTargets.length;++y){const z=v[b];C.push(z.time),x.push(z.morphTarget===S?1:0)}i.push(new Co(".morphTargetInfluence["+S+"]",C,x))}h=_.length*(a||1)}else{const _=".bones["+t[m].name+"]";n(Lo,_+".position",v,"pos",i),n(xs,_+".quaternion",v,"rot",i),n(Lo,_+".scale",v,"scl",i)}}return i.length===0?null:new this(s,h,i,l)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Lx(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Co;case"vector":case"vector2":case"vector3":case"vector4":return Lo;case"color":return Ah;case"quaternion":return xs;case"bool":case"boolean":return Rr;case"string":return Pr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Rx(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Lx(r.type);if(r.times===void 0){const t=[],n=[];Ot.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Dr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Px{constructor(e,t,n){const i=this;let s=!1,a=0,l=0,h;const u=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(p){l++,s===!1&&i.onStart!==void 0&&i.onStart(p,a,l),s=!0},this.itemEnd=function(p){a++,i.onProgress!==void 0&&i.onProgress(p,a,l),a===l&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return u.push(p,m),this},this.removeHandler=function(p){const m=u.indexOf(p);return m!==-1&&u.splice(m,2),this},this.getHandler=function(p){for(let m=0,v=u.length;m<v;m+=2){const _=u[m],b=u[m+1];if(_.global&&(_.lastIndex=0),_.test(p))return b}return null}}}const Dx=new Px;class Si{constructor(e){this.manager=e!==void 0?e:Dx,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ti={};class Ix extends Si{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Dr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ti[e]!==void 0){ti[e].push({onLoad:t,onProgress:n,onError:i});return}ti[e]=[],ti[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,h=this.responseType;fetch(a).then(u=>{if(u.status===200||u.status===0){if(u.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||u.body.getReader===void 0)return u;const p=ti[e],m=u.body.getReader(),v=u.headers.get("Content-Length"),_=v?parseInt(v):0,b=_!==0;let S=0;const C=new ReadableStream({start(x){y();function y(){m.read().then(({done:z,value:L})=>{if(z)x.close();else{S+=L.byteLength;const O=new ProgressEvent("progress",{lengthComputable:b,loaded:S,total:_});for(let f=0,W=p.length;f<W;f++){const ae=p[f];ae.onProgress&&ae.onProgress(O)}x.enqueue(L),y()}})}}});return new Response(C)}else throw Error(`fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`)}).then(u=>{switch(h){case"arraybuffer":return u.arrayBuffer();case"blob":return u.blob();case"document":return u.text().then(p=>new DOMParser().parseFromString(p,l));case"json":return u.json();default:if(l===void 0)return u.text();{const m=/charset="?([^;"\s]*)"?/i.exec(l),v=m&&m[1]?m[1].toLowerCase():void 0,_=new TextDecoder(v);return u.arrayBuffer().then(b=>_.decode(b))}}}).then(u=>{Dr.add(e,u);const p=ti[e];delete ti[e];for(let m=0,v=p.length;m<v;m++){const _=p[m];_.onLoad&&_.onLoad(u)}}).catch(u=>{const p=ti[e];if(p===void 0)throw this.manager.itemError(e),u;delete ti[e];for(let m=0,v=p.length;m<v;m++){const _=p[m];_.onError&&_.onError(u)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Lh extends Si{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Dr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const l=Kr("img");function h(){p(),Dr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function u(m){p(),i&&i(m),s.manager.itemError(e),s.manager.itemEnd(e)}function p(){l.removeEventListener("load",h,!1),l.removeEventListener("error",u,!1)}return l.addEventListener("load",h,!1),l.addEventListener("error",u,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),s.manager.itemStart(e),l.src=e,l}}class Nx extends Si{constructor(e){super(e)}load(e,t,n,i){const s=new ao,a=new Lh(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let l=0;function h(u){a.load(e[u],function(p){s.images[u]=p,l++,l===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let u=0;u<e.length;++u)h(u);return s}}class Fx extends Si{constructor(e){super(e)}load(e,t,n,i){const s=new Zt,a=new Lh(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(l){s.image=l,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class qn extends bt{constructor(e,t=1){super();this.type="Light",this.color=new We(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}qn.prototype.isLight=!0;class Bx extends qn{constructor(e,t,n){super(e,n);this.type="HemisphereLight",this.position.copy(bt.DefaultUp),this.updateMatrix(),this.groundColor=new We(t)}copy(e){return qn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Bx.prototype.isHemisphereLight=!0;const Rh=new Ke,Ph=new B,Dh=new B;class Ml{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ye(512,512),this.map=null,this.mapPass=null,this.matrix=new Ke,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new co,this._frameExtents=new ye(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Ph.setFromMatrixPosition(e.matrixWorld),t.position.copy(Ph),Dh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Dh),t.updateMatrixWorld(),Rh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Ih extends Ml{constructor(){super(new gn(50,1,.5,500));this.focus=1}updateMatrices(e){const t=this.camera,n=Ma*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Ih.prototype.isSpotLightShadow=!0;class Ox extends qn{constructor(e,t,n=0,i=Math.PI/3,s=0,a=1){super(e,t);this.type="SpotLight",this.position.copy(bt.DefaultUp),this.updateMatrix(),this.target=new bt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.shadow=new Ih}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ox.prototype.isSpotLight=!0;const Nh=new Ke,_s=new B,Sl=new B;class Fh extends Ml{constructor(){super(new gn(90,1,.5,500));this._frameExtents=new ye(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new B(1,0,0),new B(-1,0,0),new B(0,0,1),new B(0,0,-1),new B(0,1,0),new B(0,-1,0)],this._cubeUps=[new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,1,0),new B(0,0,1),new B(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),_s.setFromMatrixPosition(e.matrixWorld),n.position.copy(_s),Sl.copy(n.position),Sl.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Sl),n.updateMatrixWorld(),i.makeTranslation(-_s.x,-_s.y,-_s.z),Nh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nh)}}Fh.prototype.isPointLightShadow=!0;class zx extends qn{constructor(e,t,n=0,i=1){super(e,t);this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Fh}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}zx.prototype.isPointLight=!0;class Bh extends Ml{constructor(){super(new $a(-5,5,5,-5,.5,500))}}Bh.prototype.isDirectionalLightShadow=!0;class Ux extends qn{constructor(e,t){super(e,t);this.type="DirectionalLight",this.position.copy(bt.DefaultUp),this.updateMatrix(),this.target=new bt,this.shadow=new Bh}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ux.prototype.isDirectionalLight=!0;class Hx extends qn{constructor(e,t){super(e,t);this.type="AmbientLight"}}Hx.prototype.isAmbientLight=!0;class kx extends qn{constructor(e,t,n=10,i=10){super(e,t);this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}kx.prototype.isRectAreaLight=!0;class Oh{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new B)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Oh.prototype.isSphericalHarmonics3=!0;class Tl extends qn{constructor(e=new Oh,t=1){super(void 0,t);this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Tl.prototype.isLightProbe=!0;class Vx{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Gx extends Bt{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Gx.prototype.isInstancedBufferGeometry=!0;class Wx extends Si{constructor(e){super(e);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=Dr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const l={};l.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",l.headers=this.requestHeader,fetch(e,l).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){Dr.add(e,h),t&&t(h),s.manager.itemEnd(e)}).catch(function(h){i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}Wx.prototype.isImageBitmapLoader=!0;let Ro;const qx={getContext:function(){return Ro===void 0&&(Ro=new(window.AudioContext||window.webkitAudioContext)),Ro},setContext:function(r){Ro=r}};class jx extends Si{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Ix(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){try{const h=l.slice(0);qx.getContext().decodeAudioData(h,function(p){t(p)})}catch(h){i?i(h):console.error(h),s.manager.itemError(e)}},n,i)}}class Xx extends Tl{constructor(e,t,n=1){super(void 0,n);const i=new We().set(e),s=new We().set(t),a=new B(i.r,i.g,i.b),l=new B(s.r,s.g,s.b),h=Math.sqrt(Math.PI),u=h*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(l).multiplyScalar(h),this.sh.coefficients[1].copy(a).sub(l).multiplyScalar(u)}}Xx.prototype.isHemisphereLightProbe=!0;class Yx extends Tl{constructor(e,t=1){super(void 0,t);const n=new We().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Yx.prototype.isAmbientLightProbe=!0;class Jx extends bt{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class Zx{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let l=0;l!==i;++l)n[s+l]=n[l];a=t}else{a+=t;const l=t/a;this._mixBufferRegion(n,s,0,l,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const h=t*this._origIndex;this._mixBufferRegion(n,i,h,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let h=t,u=t+t;h!==u;++h)if(n[h]!==n[h+t]){l.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){pn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;pn.multiplyQuaternionsFlat(e,a,e,t,e,n),pn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let l=0;l!==s;++l){const h=t+l;e[h]=e[h]*a+e[n+l]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]+e[n+a]*i}}}const El="\\[\\]\\.:\\/",$x=new RegExp("["+El+"]","g"),Al="[^"+El+"]",Kx="[^"+El.replace("\\.","")+"]",Qx=/((?:WC+[\/:])*)/.source.replace("WC",Al),e0=/(WCOD+)?/.source.replace("WCOD",Kx),t0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Al),n0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Al),i0=new RegExp("^"+Qx+e0+t0+n0+"$"),r0=["material","materials","bones"];class s0{constructor(e,t,n){const i=n||wt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class wt{constructor(e,t,n){this.path=t,this.parsedPath=n||wt.parseTrackName(t),this.node=wt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new wt.Composite(e,t,n):new wt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace($x,"")}static parseTrackName(e){const t=i0.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);r0.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const l=s[a];if(l.name===t||l.uuid===t)return l;const h=n(l.children);if(h)return h}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=wt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let u=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let p=0;p<e.length;p++)if(e[p].name===u){u=p;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(u!==void 0){if(e[u]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[u]}}const a=e[i];if(a===void 0){const u=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+u+"."+i+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}h=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(h=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}wt.Composite=s0;wt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};wt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};wt.prototype.GetterByBindingType=[wt.prototype._getValue_direct,wt.prototype._getValue_array,wt.prototype._getValue_arrayElement,wt.prototype._getValue_toArray];wt.prototype.SetterByBindingTypeAndVersioning=[[wt.prototype._setValue_direct,wt.prototype._setValue_direct_setNeedsUpdate,wt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_array,wt.prototype._setValue_array_setNeedsUpdate,wt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_arrayElement,wt.prototype._setValue_arrayElement_setNeedsUpdate,wt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_fromArray,wt.prototype._setValue_fromArray_setNeedsUpdate,wt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class o0{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,l=new Array(a),h={endingStart:Qi,endingEnd:Qi};for(let u=0;u!==a;++u){const p=s[u].createInterpolant(null);l[u]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=l,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Hd,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,l=i/s;e.warp(1,a,t),this.warp(l,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let l=this._timeScaleInterpolant;l===null&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);const h=l.parameterPositions,u=l.sampleValues;return h[0]=s,h[1]=s+n,u[0]=e/a,u[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const h=(e-s)*n;if(h<0||n===0)return;this._startTime=null,t=n*h}t*=this._updateTimeScale(e);const a=this._updateTime(t),l=this._updateWeight(e);if(l>0){const h=this._interpolants,u=this._propertyBindings;switch(this.blendMode){case Gc:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(a),u[p].accumulateAdditive(l);break;case xa:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(a),u[p].accumulate(i,l)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===kd;if(e===0)return s===-1?i:a&&(s&1)==1?t-i:i;if(n===Ud){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const l=Math.floor(i/t);i-=t*l,s+=Math.abs(l);const h=this.repetitions-s;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(h===1){const u=e<0;this._setEndings(u,!u,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=i;if(a&&(s&1)==1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=er,i.endingEnd=er):(e?i.endingStart=this.zeroSlopeAtStart?er:Qi:i.endingStart=Vs,t?i.endingEnd=this.zeroSlopeAtEnd?er:Qi:i.endingEnd=Vs)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const l=a.parameterPositions,h=a.sampleValues;return l[0]=s,h[0]=t,l[1]=s+e,h[1]=n,this}}class a0 extends Bi{constructor(e){super();this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,l=e._interpolants,h=n.uuid,u=this._bindingsByRootAndName;let p=u[h];p===void 0&&(p={},u[h]=p);for(let m=0;m!==s;++m){const v=i[m],_=v.name;let b=p[_];if(b!==void 0)++b.referenceCount,a[m]=b;else{if(b=a[m],b!==void 0){b._cacheIndex===null&&(++b.referenceCount,this._addInactiveBinding(b,h,_));continue}const S=t&&t._propertyBindings[m].binding.parsedPath;b=new Zx(wt.create(n,_,S),v.ValueTypeName,v.getValueSize()),++b.referenceCount,this._addInactiveBinding(b,h,_),a[m]=b}l[m].resultBuffer=b.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++==0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount==0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const l=a.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,l=a[s],h=l.knownActions,u=h[h.length-1],p=e._byClipCacheIndex;u._byClipCacheIndex=p,h[p]=u,h.pop(),e._byClipCacheIndex=null;const m=l.actionByRoot,v=(e._localRoot||this._root).uuid;delete m[v],h.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount==0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,l=a[i],h=t[t.length-1],u=e._cacheIndex;h._cacheIndex=u,t[u]=h,t.pop(),delete l[s],Object.keys(l).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Eh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?Ch.findByName(i,e):e;const l=a!==null?a.uuid:e,h=this._actionsByClip[l];let u=null;if(n===void 0&&(a!==null?n=a.blendMode:n=xa),h!==void 0){const m=h.actionByRoot[s];if(m!==void 0&&m.blendMode===n)return m;u=h.knownActions[0],a===null&&(a=u._clip)}if(a===null)return null;const p=new o0(this,a,t,n);return this._bindAction(p,u),this._addInactiveAction(p,l,s),p}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ch.findByName(n,e):e,a=s?s.uuid:e,l=this._actionsByClip[a];return l!==void 0&&l.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let u=0;u!==n;++u)t[u]._update(i,e,s,a);const l=this._bindings,h=this._nActiveBindings;for(let u=0;u!==h;++u)l[u].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let l=0,h=a.length;l!==h;++l){const u=a[l];this._deactivateAction(u);const p=u._cacheIndex,m=t[t.length-1];u._cacheIndex=null,u._byClipCacheIndex=null,m._cacheIndex=p,t[p]=m,t.pop(),this._removeInactiveBindingsForAction(u)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const l=n[a].actionByRoot,h=l[t];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const l=s[a];l.restoreOriginalState(),this._removeInactiveBinding(l)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}a0.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class l0 extends os{constructor(e,t,n=1){super(e,t);this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}l0.prototype.isInstancedInterleavedBuffer=!0;const Ti=new B,Po=new Ke,Cl=new Ke;class c0 extends ul{constructor(e){const t=zh(e),n=new Bt,i=[],s=[],a=new We(0,0,1),l=new We(0,1,0);for(let u=0;u<t.length;u++){const p=t[u];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(l.r,l.g,l.b))}n.setAttribute("position",new $t(i,3)),n.setAttribute("color",new $t(s,3));const h=new fs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Cl.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const l=t[s];l.parent&&l.parent.isBone&&(Po.multiplyMatrices(Cl,l.matrixWorld),Ti.setFromMatrixPosition(Po),i.setXYZ(a,Ti.x,Ti.y,Ti.z),Po.multiplyMatrices(Cl,l.parent.matrixWorld),Ti.setFromMatrixPosition(Po),i.setXYZ(a+1,Ti.x,Ti.y,Ti.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function zh(r){const e=[];r&&r.isBone&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,zh(r.children[t]));return e}class u0 extends ul{constructor(e=10,t=10,n=4473924,i=8947848){n=new We(n),i=new We(i);const s=t/2,a=e/t,l=e/2,h=[],u=[];for(let v=0,_=0,b=-l;v<=t;v++,b+=a){h.push(-l,0,b,l,0,b),h.push(b,0,-l,b,0,l);const S=v===s?n:i;S.toArray(u,_),_+=3,S.toArray(u,_),_+=3,S.toArray(u,_),_+=3,S.toArray(u,_),_+=3}const p=new Bt;p.setAttribute("position",new $t(h,3)),p.setAttribute("color",new $t(u,3));const m=new fs({vertexColors:!0,toneMapped:!1});super(p,m);this.type="GridHelper"}}const h0=new Float32Array(1);new Int32Array(h0.buffer);Pn.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(Pn.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};xl.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};u0.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};c0.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Si.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Vx.extractUrlBase(r)};Si.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};On.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};On.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};On.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};On.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};On.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};ar.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};co.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};tn.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};tn.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};tn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};tn.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};tn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};tn.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Ke.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};Ke.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Ke.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new B().setFromMatrixColumn(this,3)};Ke.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};Ke.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Ke.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ke.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ke.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Ke.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};Ke.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ke.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Ke.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Ke.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Ke.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Ke.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Ke.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ke.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Ke.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};Ke.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};ei.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};pn.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};pn.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};lr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};lr.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};lr.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};Wt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};Wt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};Wt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};Wt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};Wt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};Wt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Wt.getBarycoord(r,e,t,n,i)};Wt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Wt.getNormal(r,e,t,n)};ms.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};ms.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Lr(this,r)};ms.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new wl(this,r)};ye.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};ye.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};ye.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};B.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};B.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};B.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};B.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};B.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};B.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};B.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};B.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};B.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ct.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};Ct.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};bt.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};bt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};bt.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};bt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};bt.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(bt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});mn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(mn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Vd},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});nh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};gn.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(qn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(Jt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Gs},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Gs)}}});Jt.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Gs:$r),this};Jt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Jt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Bt.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Bt.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new Jt(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};Bt.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};Bt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Bt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Bt.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Bt.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Bt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});os.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Gs:$r),this};os.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Lr.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Lr.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Lr.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Xu.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(on.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new We}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===hc}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(ki.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});Tt.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};Tt.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};Tt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Tt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Tt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Tt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Tt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Tt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Tt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Tt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Tt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Tt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Tt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Tt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Tt.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};Tt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Tt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Tt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Tt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Tt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Tt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Tt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Tt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Tt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Tt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Tt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?Ft:hi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(qu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Ln.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});Jx.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new jx().load(r,function(n){e.setBuffer(n)}),this};Ya.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};Ya.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};Oi.crossOrigin=void 0;Oi.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Fx;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};Oi.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Nx;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};Oi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Oi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:aa}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=aa);export{f0 as $,ns as B,We as C,mn as M,gn as P,Xi as S,Tt as W,Xu as a,Ha as b,d0 as t};
//# sourceMappingURL=vendor.js.map
